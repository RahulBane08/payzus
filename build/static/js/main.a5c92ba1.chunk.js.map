{"version":3,"sources":["variables/general/dashboard-charts.jsx","assets/img/MetaMask-Icon.png","assets/img/icon1.jpg","firebase-config.js","views/general/Dashboard/General.jsx","generateElement.js","views/general/Forms/GetDetails.jsx","components/common/Sidebar/Sidebar.jsx","components/common/ChatSidebar/ChatSidebar.jsx","components/common/Stylebar/Stylebar.jsx","components/common/StyleSettings/StyleSettings.jsx","components/common/Sidebar/LockSidebar.jsx","views/general/Forms/Premade.jsx","views/general/Tables/Tables.jsx","views/general/Tables/BSDatatable.jsx","routes/general.jsx","components/common/Header/Header.jsx","components/common/Footer/Footer.jsx","variables/topbar.jsx","components/common/Chatbar/Favcontacts.jsx","components/common/Chatbar/Allcontacts.jsx","components/common/Chatbar/Chatgroups.jsx","components/common/Notifications/Notifications.jsx","components/common/Messages/Messages.jsx","components/common/Mailbox/Mailbox.jsx","components/general/CardElements/CardAuthor.jsx","components/general/CardElements/CardCategory.jsx","components/general/CardElements/CardSocials.jsx","components/general/CustomButton/CustomButton.jsx","components/general/CustomCheckbox/SimpleCheckbox.jsx","components/general/CustomRadio/CustomRadio.jsx","components/general/FormInputs/FormInputs.jsx","components/general/Navmenudropdown/Navmenudropdown.jsx","components/general/Navmenudropdown/Navmenugroup.jsx","variables/settings/general.jsx","components/general/BlogPosts/BlogPosts.jsx","components/general/SearchPosts/SearchPosts.jsx","components/general/Memberslist/Memberslist.jsx","components/general/Messagewidget/Messagewidget.jsx","getWeb3.js","layouts/General.jsx","components/common/Header/LockedHeader.jsx","views/general/Forms/Register.jsx","views/general/Forms/Login.jsx","views/general/Forms/home.jsx","routes/locked.jsx","layouts/Locked.jsx","routes/index.jsx","index.js"],"names":["playlistCharts","data","canvas","gradientFill","getContext","createLinearGradient","addColorStop","labels","datasets","label","backgroundColor","borderColor","pointBorderColor","pointBackgroundColor","pointBorderWidth","pointHoverRadius","pointHoverBorderWidth","pointRadius","fill","borderWidth","options","maintainAspectRatio","legend","display","tooltips","bodySpacing","mode","intersect","position","xPadding","yPadding","caretPadding","responsive","scales","yAxes","ticks","gridLines","color","zeroLineColor","drawTicks","drawBorder","xAxes","categoryPercentage","barPercentage","maxBarThickness","layout","padding","left","right","top","bottom","playlistCharts3","playlistCharts4","playlistCharts5","playlistCharts1","playlistCharts2","dashboardAllProductsChart","ctx","gradientStroke","dashboardAllProductsChart1","dashboardAllProductsChart2","dashboardAllProductsChart3","module","exports","__webpack_require__","p","firebaseApp","firebase","initializeApp","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","measurementId","database","ref","General","props","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","componentDidMount","asyncToGenerator","regenerator_default","a","mark","_callee","temp","Web3","accounts","PayzusContract","result","wrap","_context","prev","next","web3","givenProvider","eth","getAccounts","sent","setState","account","Contract","PayzusContractABI","methods","balanceOf","state","tokenBalance","auth","onAuthStateChanged","user","uid","child","once","snapshot","val","rewards","Rewards","directReferred","DirectReferred","indirectReferred","IndirectReferred","referrerAddress","Referrer","console","log","window","location","href","t0","stop","data1","str","length","substring","react_default","createElement","className","Row","Col","xs","md","Button","style","height","es","width","marginTop","float","Math","pow","truncate","React","Component","generateElement","msg","errorNode","document","innerHTML","concat","ps","menuColor","menuType","topbarType","topbarColor","FormPremade","kycStatus","onFileUpload","event","files","target","aadharFile1","aadharFile2","swal","content","icon","handleSubmit","mobile","aadharNumber","update","Mobile","AadharNumber","AadharFile1","AadharFile2","KYCSubmitted","then","catch","error","_this2","textAlign","htmlFor","type","id","placeholder","value","onChange","multiple","onClick","e","getValue","undefined","abrupt","WhiteListed","handleReferrence","_callee2","_context2","addReferrer","send","from","handleTokenChange","_ref3","_callee3","_context3","tokenNumbers","priceOf","_x","apply","arguments","_ref4","_callee4","price","_context4","_x2","handleBuyPayzus","_callee5","tokens","count","events","_context5","loading","buyTokens","txHash","transactionHash","set","err","rewardsCredited","reward","referredCount","referredCountIndirect","referrer","react_numeric_input_default","min","max","readOnly","paddingTop","aria-hidden","UITables","txArray","isAvailable","array","Table","UIBSDatatable","cryptos","apiResponse","dashRoutes","path","BASEDIR","name","component","GetDetails","redirect","pathTo","Header","handleLogout","signOut","errorMessage","message","alert","isOpen","userddOpen","searchOpen","messagesddOpen","notificationsddOpen","profilename","profileimg","balance","toggle","bind","assertThisInitialized","userddToggle","messagesddToggle","notificationsddToggle","searchToggle","dashboardRoutes","map","prop","key","collapse","views","pathname","documentElement","classList","refs","sidebarToggle","innerWidth","remove","navtype","add","addEventListener","updateColor","admintype","history","indexOf","_this3","Navbar","expand","Container","fluid","openSidebar","truncateBalance","NavbarBrand","getBrand","Collapse","navbar","marginRight","Nav","Dropdown","nav","DropdownToggle","caret","src","MetamaskIcon","alt","DropdownMenu","DropdownItem","tag","connectWallet","walletConnected","disconnect","toggle_grid","Footer","default","Date","getYear","rel","currentmenu","Sidebar","activeRoute","opendd","openmenu","profileposition","handleOpendd","handlecurrent","open","routeName","navigator","platform","PerfectScrollbar","sidebar","suppressScrollX","suppressScrollY","destroy","data-color","userImage","background","fontSize","routes","Navmenudropdown_Navmenugroup","parentid","data-toggle","to","badge","parent","links","i","push","react_router_dom","activeClassName","children","general_Navmenudropdown_Navmenudropdown","openclass","chatgroups","favcontacts","avatar","status","allcontacts","Favcontact","favcontactsList","ListGroupItem","data-status","ListGroup","Allcontact","allcontactsList","Chatgroup","chatgroupsList","CustomButton","_this$props","simple","round","neutral","iconMini","leftLabel","rightLabel","wd","rest","twitter","facebook","google","linkedin","pinterest","youtube","tumblr","github","behance","dribbble","reddit","stumbleupon","objectWithoutProperties","btnClasses","cx","btn-simple","btn-round","btn-icon","btn-neutral","btn-icon btn-icon-mini","btn-wd","assign","FieldGroup","focus","addonLeft","addonRight","formGroupProps","labelProps","inputProps","inputGroupProps","inputGroupAddonProps","classes","InputGroup","InputGroupAddon","Input","onFocus","onBlur","FormGroup","Label","Navmenudropdown","addClickClass","activate","Navmenugroup","menuStyle","topbarStyle","getWeb3","Promise","resolve","reject","_web","provider","_web2","ethereum","enable","providers","HttpProvider","createBrowserHistory","GeneralLayout","accBalance","getBalance","utils","fromWei","network","net","getNetworkType","menuSettings","topbarSettings","val1","val2","action","mainPanel","scrollTop","scrollingElement","data-menu","data-topbar","data-menutype","data-topbartype","common_Header_Header","common_Sidebar_Sidebar","react_router","exact","render","Dashboard_General","Tables","BSDatatable","Premade","common_Footer_Footer","IMGDIR","process","FormGrid","handleRegister","email","password","createUserWithEmailAndPassword","currentUser","emailVerified","sendEmailVerification","Name","Email","toggleDropDown","toggleSplit","dropdownOpen","splitButtonOpen","Form","row","sm","handleLogin","preventDefault","signInWithEmailAndPassword","home","indexRoutes","Register","Login","Home","LockedHeader","LockSidebar","lockedRoutes","prop2","key2","hist","ReactDOM","basename","getElementById"],"mappings":"2EAkBA,IASMA,EAAiB,CACnBC,KAAM,SAACC,GACH,IACIC,EADMD,EAAOE,WAAW,MACLC,qBAAqB,EAAG,IAAK,EAAG,IAGvD,OAFAF,EAAaG,aAAa,EAbb,WAcbH,EAAaG,aAAa,EAdb,WAeN,CACHC,OAAQ,CACJ,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,OAEtEC,SAAU,CAAC,CACPC,MAAO,WACPC,gBAAiBP,EACjBQ,YAtBK,UAuBLC,iBAAkB,OAClBC,qBAxBK,UAyBLC,iBAAkB,EAClBC,iBAAkB,EAClBC,sBAAuB,EACvBC,YAAa,EACbC,MAAM,EACNC,YAAa,EACblB,KAAM,CAAC,GAAG,IAAI,GAAG,IAAI,IAAI,IAAI,GAAG,GAAG,GAAG,GAAG,IAAI,SAIzDmB,QAAS,CACLC,qBAAqB,EACrBC,OAAQ,CACJC,SAAS,GAEbC,SAAU,CACNC,YAAa,EACbC,KAAK,UACLC,UAAW,EACXC,SAAS,UACTC,SAAS,GACTC,SAAS,GACTC,aAAa,IAEjBC,WAAY,EACZC,OAAQ,CACJC,MAAO,CAAC,CACJX,QAAQ,EACRY,MAAO,CACHZ,SAAS,GAEba,UAAW,CACPC,MAAO,sBACfC,cAAe,cACPC,WAAW,EACXhB,SAAS,EACTiB,YAAY,KAGpBC,MAAO,CAAC,CACJC,mBAAoB,GACpBC,cAAe,GACfC,gBAAiB,EACjBrB,QAAQ,EACRY,MAAO,CACHZ,SAAS,GAEba,UAAW,CACPC,MAAO,sBACfC,cAAe,cACPC,WAAW,EACXhB,SAAS,EACTiB,YAAY,MAIxBK,OAAO,CACHC,QAAQ,CAACC,KAAK,EAAEC,MAAM,EAAEC,IAAI,EAAEC,OAAO,MAM3CC,EAAkB,CACpBlD,KAAM,SAACC,GACH,IACIC,EADMD,EAAOE,WAAW,MACLC,qBAAqB,EAAG,IAAK,EAAG,IAGvD,OAFAF,EAAaG,aAAa,EA5Fb,WA6FbH,EAAaG,aAAa,EA7Fb,WA8FN,CACHC,OAAQ,CACJ,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,OAEtEC,SAAU,CAAC,CACPC,MAAO,WACPC,gBAAiBP,EACjBQ,YArGK,UAsGLC,iBAAkB,OAClBC,qBAvGK,UAwGLC,iBAAkB,EAClBC,iBAAkB,EAClBC,sBAAuB,EACvBC,YAAa,EACbC,MAAM,EACNC,YAAa,EACblB,KAAM,CAAC,GAAG,GAAG,IAAI,GAAG,IAAI,GAAG,GAAG,IAAI,GAAG,GAAG,IAAI,QAIxDmB,QAAS,CACLC,qBAAqB,EACrBC,OAAQ,CACJC,SAAS,GAEbC,SAAU,CACNC,YAAa,EACbC,KAAK,UACLC,UAAW,EACXC,SAAS,UACTC,SAAS,GACTC,SAAS,GACTC,aAAa,IAEjBC,WAAY,EACZC,OAAQ,CACJC,MAAO,CAAC,CACJX,QAAQ,EACRY,MAAO,CACHZ,SAAS,GAEba,UAAW,CACPC,MAAO,sBACfC,cAAe,cACPC,WAAW,EACXhB,SAAS,EACTiB,YAAY,KAGpBC,MAAO,CAAC,CACJC,mBAAoB,GACpBC,cAAe,GACfC,gBAAiB,EACjBrB,QAAQ,EACRY,MAAO,CACHZ,SAAS,GAEba,UAAW,CACPC,MAAO,sBACfC,cAAe,cACPC,WAAW,EACXhB,SAAS,EACTiB,YAAY,MAIxBK,OAAO,CACHC,QAAQ,CAACC,KAAK,EAAEC,MAAM,EAAEC,IAAI,EAAEC,OAAO,MAK3CE,EAAkB,CACpBnD,KAAM,SAACC,GACH,IACIC,EADMD,EAAOE,WAAW,MACLC,qBAAqB,EAAG,IAAK,EAAG,IAGvD,OAFAF,EAAaG,aAAa,EA1Kb,WA2KbH,EAAaG,aAAa,EA3Kb,WA4KN,CACHC,OAAQ,CACJ,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,OAEtEC,SAAU,CAAC,CACPC,MAAO,WACPC,gBAAiBP,EACjBQ,YAnLK,UAoLLC,iBAAkB,OAClBC,qBArLK,UAsLLC,iBAAkB,EAClBC,iBAAkB,EAClBC,sBAAuB,EACvBC,YAAa,EACbC,MAAM,EACNC,YAAa,EACblB,KAAM,CAAC,GAAG,GAAG,IAAI,GAAG,GAAG,IAAI,GAAG,GAAG,IAAI,GAAG,IAAI,QAIxDmB,QAAS,CACLC,qBAAqB,EACrBC,OAAQ,CACJC,SAAS,GAEbC,SAAU,CACNC,YAAa,EACbC,KAAK,UACLC,UAAW,EACXC,SAAS,UACTC,SAAS,GACTC,SAAS,GACTC,aAAa,IAEjBC,WAAY,EACZC,OAAQ,CACJC,MAAO,CAAC,CACJX,QAAQ,EACRY,MAAO,CACHZ,SAAS,GAEba,UAAW,CACPC,MAAO,sBACfC,cAAe,cACPC,WAAW,EACXhB,SAAS,EACTiB,YAAY,KAGpBC,MAAO,CAAC,CACJC,mBAAoB,GACpBC,cAAe,GACfC,gBAAiB,EACjBrB,QAAQ,EACRY,MAAO,CACHZ,SAAS,GAEba,UAAW,CACPC,MAAO,sBACfC,cAAe,cACPC,WAAW,EACXhB,SAAS,EACTiB,YAAY,MAIxBK,OAAO,CACHC,QAAQ,CAACC,KAAK,EAAEC,MAAM,EAAEC,IAAI,EAAEC,OAAO,MAK3CG,EAAkB,CACpBpD,KAAM,SAACC,GACH,IACIC,EADMD,EAAOE,WAAW,MACLC,qBAAqB,EAAG,IAAK,EAAG,IAGvD,OAFAF,EAAaG,aAAa,EAxPb,WAyPbH,EAAaG,aAAa,EAzPb,WA0PN,CACHC,OAAQ,CACJ,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,OAEtEC,SAAU,CAAC,CACPC,MAAO,WACPC,gBAAiBP,EACjBQ,YAjQK,UAkQLC,iBAAkB,OAClBC,qBAnQK,UAoQLC,iBAAkB,EAClBC,iBAAkB,EAClBC,sBAAuB,EACvBC,YAAa,EACbC,MAAM,EACNC,YAAa,EACblB,KAAM,CAAC,GAAG,IAAI,GAAG,GAAG,IAAI,GAAG,GAAG,IAAI,GAAG,GAAG,GAAG,SAIvDmB,QAAS,CACLC,qBAAqB,EACrBC,OAAQ,CACJC,SAAS,GAEbC,SAAU,CACNC,YAAa,EACbC,KAAK,UACLC,UAAW,EACXC,SAAS,UACTC,SAAS,GACTC,SAAS,GACTC,aAAa,IAEjBC,WAAY,EACZC,OAAQ,CACJC,MAAO,CAAC,CACJX,QAAQ,EACRY,MAAO,CACHZ,SAAS,GAEba,UAAW,CACPC,MAAO,sBACfC,cAAe,cACPC,WAAW,EACXhB,SAAS,EACTiB,YAAY,KAGpBC,MAAO,CAAC,CACJC,mBAAoB,GACpBC,cAAe,GACfC,gBAAiB,EACjBrB,QAAQ,EACRY,MAAO,CACHZ,SAAS,GAEba,UAAW,CACPC,MAAO,sBACfC,cAAe,cACPC,WAAW,EACXhB,SAAS,EACTiB,YAAY,MAIxBK,OAAO,CACHC,QAAQ,CAACC,KAAK,EAAEC,MAAM,EAAEC,IAAI,EAAEC,OAAO,MAK3CI,EAAkB,CACpBrD,KAAM,SAACC,GACH,IACIC,EADMD,EAAOE,WAAW,MACLC,qBAAqB,EAAG,IAAK,EAAG,IAGvD,OAFAF,EAAaG,aAAa,EAtUb,WAuUbH,EAAaG,aAAa,EAvUb,WAwUN,CACHC,OAAQ,CACJ,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,OAEtEC,SAAU,CAAC,CACPC,MAAO,WACPC,gBAAiBP,EACjBQ,YA/UK,UAgVLC,iBAAkB,OAClBC,qBAjVK,UAkVLC,iBAAkB,EAClBC,iBAAkB,EAClBC,sBAAuB,EACvBC,YAAa,EACbC,MAAM,EACNC,YAAa,EACblB,KAAM,CAAC,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,SAI/DmB,QAAS,CACLC,qBAAqB,EACrBC,OAAQ,CACJC,SAAS,GAEbC,SAAU,CACNC,YAAa,EACbC,KAAK,UACLC,UAAW,EACXC,SAAS,UACTC,SAAS,GACTC,SAAS,GACTC,aAAa,IAEjBC,WAAY,EACZC,OAAQ,CACJC,MAAO,CAAC,CACJX,QAAQ,EACRY,MAAO,CACHZ,SAAS,GAEba,UAAW,CACPC,MAAO,sBACfC,cAAe,cACPC,WAAW,EACXhB,SAAS,EACTiB,YAAY,KAGpBC,MAAO,CAAC,CACJC,mBAAoB,GACpBC,cAAe,GACfC,gBAAiB,EACjBrB,QAAQ,EACRY,MAAO,CACHZ,SAAS,GAEba,UAAW,CACPC,MAAO,sBACfC,cAAe,cACPC,WAAW,EACXhB,SAAS,EACTiB,YAAY,MAIxBK,OAAO,CACHC,QAAQ,CAACC,KAAK,EAAEC,MAAM,EAAEC,IAAI,EAAEC,OAAO,MAM3CK,EAAkB,CACpBtD,KAAM,SAACC,GACH,IACIC,EADMD,EAAOE,WAAW,MACLC,qBAAqB,EAAG,IAAK,EAAG,IAGvD,OAFAF,EAAaG,aAAa,EArZb,WAsZbH,EAAaG,aAAa,EAtZb,WAuZN,CACHC,OAAQ,CACJ,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,OAEtEC,SAAU,CAAC,CACPC,MAAO,WACPC,gBAAiBP,EACjBQ,YA9ZK,UA+ZLC,iBAAkB,OAClBC,qBAhaK,UAiaLC,iBAAkB,EAClBC,iBAAkB,EAClBC,sBAAuB,EACvBC,YAAa,EACbC,MAAM,EACNC,YAAa,EACblB,KAAM,CAAC,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,UAI1EmB,QAAS,CACLC,qBAAqB,EACrBC,OAAQ,CACJC,SAAS,GAEbC,SAAU,CACNC,YAAa,EACbC,KAAK,UACLC,UAAW,EACXC,SAAS,UACTC,SAAS,GACTC,SAAS,GACTC,aAAa,IAEjBC,WAAY,EACZC,OAAQ,CACJC,MAAO,CAAC,CACJX,QAAQ,EACRY,MAAO,CACHZ,SAAS,GAEba,UAAW,CACPC,MAAO,sBACfC,cAAe,cACPC,WAAW,EACXhB,SAAS,EACTiB,YAAY,KAGpBC,MAAO,CAAC,CACJC,mBAAoB,GACpBC,cAAe,GACfC,gBAAiB,EACjBrB,QAAQ,EACRY,MAAO,CACHZ,SAAS,GAEba,UAAW,CACPC,MAAO,sBACfC,cAAe,cACPC,WAAW,EACXhB,SAAS,EACTiB,YAAY,MAIxBK,OAAO,CACHC,QAAQ,CAACC,KAAK,EAAEC,MAAM,EAAEC,IAAI,EAAEC,OAAO,MAY3CM,EAA4B,CAC9BvD,KAAM,SAACC,GACH,IAAIuD,EAAMvD,EAAOE,WAAW,MACxBsD,EAAiBD,EAAIpD,qBAAqB,IAAK,EAAG,IAAK,GAC3DqD,EAAepD,aAAa,EAAG,WAC/BoD,EAAepD,aAAa,EA3ef,WA4eb,IAAIH,EAAesD,EAAIpD,qBAAqB,EAAG,IAAK,EAAG,IAGvD,OAFAF,EAAaG,aAAa,EAAG,yBAC7BH,EAAaG,aAAa,EAAG,yBACtB,CACHC,OAAQ,CAAC,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,OAC3EC,SAAU,CAAC,CACPC,MAAO,QACPE,YAnfK,UAofLC,iBAAkB,OAClBC,qBArfK,UAsfLC,iBAAkB,EAClBC,iBAAkB,EAClBC,sBAAuB,EACvBC,YAAa,EACbC,MAAM,EACNR,gBAAiBP,EACjBgB,YAAa,EACblB,KAAM,CAAC,GAAI,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAI,IAAI,IAAI,IAAI,QAIrEmB,QAAS,CACLC,qBAAqB,EACrBC,OAAQ,CACJC,SAAS,GAEbC,SAAU,CAENC,YAAa,EACbC,KAAK,UACLC,UAAW,EACXC,SAAS,UACTC,SAAS,GACTC,SAAS,GACTC,aAAa,IAEjBC,WAAY,EACZC,OAAQ,CACJC,MAAO,CAAC,CACJX,QAAQ,EACRY,MAAO,CACHZ,SAAS,GAEba,UAAW,CACPC,MAAO,sBACfC,cAAe,cACPC,WAAW,EACXhB,SAAS,EACTiB,YAAY,KAGpBC,MAAO,CAAC,CACJlB,QAAQ,EACRY,MAAO,CACHZ,SAAS,GAEba,UAAW,CACPC,MAAO,sBACfC,cAAe,cACPC,WAAW,EACXhB,SAAS,EACTiB,YAAY,MAIxBK,OAAO,CACHC,QAAQ,CAACC,KAAK,EAAEC,MAAM,EAAEC,IAAI,EAAEC,OAAO,MAY3CS,EAA6B,CAC/B1D,KAAM,SAACC,GACH,IAAIuD,EAAMvD,EAAOE,WAAW,MACxBsD,EAAiBD,EAAIpD,qBAAqB,IAAK,EAAG,IAAK,GAC3DqD,EAAepD,aAAa,EAAG,WAC/BoD,EAAepD,aAAa,EA/jBf,WAgkBb,IAAIH,EAAesD,EAAIpD,qBAAqB,EAAG,IAAK,EAAG,IAGvD,OAFAF,EAAaG,aAAa,EAAG,yBAC7BH,EAAaG,aAAa,EAAG,yBACtB,CACHC,OAAQ,CAAC,QAAS,MAAO,MAAO,MAAO,OAAQ,MAAO,MAAO,OAC7DC,SAAU,CAAC,CACPC,MAAO,QACPE,YAvkBK,UAwkBLC,iBAAkB,OAClBC,qBAzkBK,UA0kBLC,iBAAkB,EAClBC,iBAAkB,EAClBC,sBAAuB,EACvBC,YAAa,EACbC,MAAM,EACNR,gBAAiBP,EACjBgB,YAAa,EACblB,KAAM,CAAC,GAAI,IAAK,IAAK,IAAK,KAAM,KAAM,KAAM,UAIxDmB,QAAS,CACLC,qBAAqB,EACrBC,OAAQ,CACJC,SAAS,GAEbC,SAAU,CACND,SAAS,EACTE,YAAa,EACbC,KAAK,UACLC,UAAW,EACXC,SAAS,UACTC,SAAS,GACTC,SAAS,GACTC,aAAa,IAEjBC,WAAY,EACZC,OAAQ,CACJC,MAAO,CAAC,CACJX,QAAQ,EACRY,MAAO,CACHZ,SAAS,GAEba,UAAW,CACPC,MAAO,sBACfC,cAAe,cACPC,WAAW,EACXhB,SAAS,EACTiB,YAAY,KAGpBC,MAAO,CAAC,CACJlB,QAAQ,EACRY,MAAO,CACHZ,SAAS,GAEba,UAAW,CACPC,MAAO,sBACfC,cAAe,cACPC,WAAW,EACXhB,SAAS,EACTiB,YAAY,MAIxBK,OAAO,CACHC,QAAQ,CAACC,KAAK,EAAEC,MAAM,EAAEC,IAAI,EAAEC,OAAO,MAS3CU,EAA6B,CAC/B3D,KAAM,SAACC,GACH,IAAIuD,EAAMvD,EAAOE,WAAW,MACxBsD,EAAiBD,EAAIpD,qBAAqB,IAAK,EAAG,IAAK,GAC3DqD,EAAepD,aAAa,EAAG,WAC/BoD,EAAepD,aAAa,EAhpBf,WAipBb,IAAIH,EAAesD,EAAIpD,qBAAqB,EAAG,IAAK,EAAG,IAGvD,OAFAF,EAAaG,aAAa,EAAG,yBAC7BH,EAAaG,aAAa,EAAG,yBACtB,CACHC,OAAQ,CAAC,QAAS,MAAO,MAAO,MAAO,OAAQ,MAAO,MAAO,OAC7DC,SAAU,CAAC,CACPC,MAAO,QACPE,YAxpBK,UAypBLC,iBAAkB,OAClBC,qBA1pBK,UA2pBLC,iBAAkB,EAClBC,iBAAkB,EAClBC,sBAAuB,EACvBC,YAAa,EACbC,MAAM,EACNR,gBAAiBP,EACjBgB,YAAa,EACblB,KAAM,CAAC,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,SAItDmB,QAAS,CACTC,qBAAqB,EACrBC,OAAQ,CACJC,SAAS,GAEbC,SAAU,CACRC,YAAa,EACbC,KAAK,UACLC,UAAW,EACXC,SAAS,UACTC,SAAS,GACTC,SAAS,GACTC,aAAa,IAEfC,WAAY,EAwBZC,OAAQ,CACCQ,MAAO,CAAC,CACPlB,QAAQ,EACRa,UAAW,CACRC,MAAO,uBAEVF,MAAO,CACHZ,SAAS,KAIfW,MAAO,CAAC,CACJQ,mBAAoB,GACpBC,cAAe,GACfC,gBAAiB,GACjBrB,QAAQ,EACRa,UAAW,CACTC,MAAO,uBAETF,MAAO,CACLZ,SAAS,MAIvBsB,OAAO,CACLC,QAAQ,CAACC,KAAK,EAAEC,MAAM,EAAEC,IAAI,EAAEC,OAAO,MAUrCW,EAA6B,CAC/B5D,KAAM,SAACC,GACH,IAAIuD,EAAMvD,EAAOE,WAAW,MACxBsD,EAAiBD,EAAIpD,qBAAqB,IAAK,EAAG,IAAK,GAC3DqD,EAAepD,aAAa,EAAG,WAC/BoD,EAAepD,aAAa,EApvBf,WAqvBb,IAAIH,EAAesD,EAAIpD,qBAAqB,EAAG,IAAK,EAAG,IAGvD,OAFAF,EAAaG,aAAa,EAAG,yBAC7BH,EAAaG,aAAa,EAAG,yBACtB,CACHC,OAAQ,CAAC,QAAS,MAAO,MAAO,MAAO,OAAQ,MAAO,MAAO,OAC7DC,SAAU,CAAC,CACPC,MAAO,QACPE,YA5vBK,UA6vBLC,iBAAkB,OAClBC,qBA9vBK,UA+vBLC,iBAAkB,EAClBC,iBAAkB,EAClBC,sBAAuB,EACvBC,YAAa,EACbC,MAAM,EACNR,gBAAiBP,EACjBgB,YAAa,EACblB,KAAM,CAAC,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,MAE9C,CACIQ,MAAO,YACPE,YAzwBI,UA0wBJC,iBAAkB,OAClBC,qBA3wBI,UA4wBJC,iBAAkB,EAClBC,iBAAkB,EAClBC,sBAAuB,EACvBC,YAAa,EACbC,MAAM,EACNR,gBAAiBP,EACjBgB,YAAa,EACblB,KAAM,CAAC,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,MAE9C,CACIQ,MAAO,WACPE,YAtxBI,UAuxBJC,iBAAkB,OAClBC,qBAxxBI,UAyxBJC,iBAAkB,EAClBC,iBAAkB,EAClBC,sBAAuB,EACvBC,YAAa,EACbC,MAAM,EACNR,gBAAiBP,EACjBgB,YAAa,EACblB,KAAM,CAAC,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,SAItDmB,QAAS,CACTC,qBAAqB,EACrBC,OAAQ,CACJC,SAAS,GAEbC,SAAU,CACRC,YAAa,EACbC,KAAK,UACLC,UAAW,EACXC,SAAS,UACTC,SAAS,GACTC,SAAS,GACTC,aAAa,IAEfC,WAAY,EAwBZC,OAAQ,CACCQ,MAAO,CAAC,CACPlB,QAAQ,EACRa,UAAW,CACRC,MAAO,uBAEVF,MAAO,CACHZ,SAAS,KAIfW,MAAO,CAAC,CACJQ,mBAAoB,GACpBC,cAAe,GACfC,gBAAiB,GACjBrB,QAAQ,EACRa,UAAW,CACTC,MAAO,uBAETF,MAAO,CACLZ,SAAS,MAIvBsB,OAAO,CACLC,QAAQ,CAACC,KAAK,EAAEC,MAAM,EAAEC,IAAI,EAAEC,OAAO,MAO3CY,EAAOC,QAAU,CACbP,4BACAG,6BACAC,6BACAC,6BACA7D,iBACAmD,kBACAC,kBACAC,kBACAC,kBACAC,6gMCx4BJO,EAAAC,QAAiBC,EAAAC,EAAuB,+DCAxCH,EAAAC,QAAiBC,EAAAC,EAAuB,6jBCezBC,SAFKC,EAASC,cAXR,CACjBC,OAAQ,0CACRC,WAAY,+BACZC,YAAa,sCACbC,UAAW,eACXC,cAAe,2BACfC,kBAAmB,eACnBC,MAAO,4CACPC,cAAe,0BCgBbC,EAAWX,EAAYW,WAAWC,IAAI,SAmR7BC,cA9QX,SAAAA,EAAYC,GAAO,IAAAC,EAAA,OAAAC,OAAAC,EAAA,EAAAD,CAAAE,KAAAL,IACjBE,EAAAC,OAAAG,EAAA,EAAAH,CAAAE,KAAAF,OAAAI,EAAA,EAAAJ,CAAAH,GAAAQ,KAAAH,KAAMJ,KAYRQ,kBAbmBN,OAAAO,EAAA,EAAAP,CAAAQ,EAAAC,EAAAC,KAaC,SAAAC,IAAA,IAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAA,OAAAR,EAAAC,EAAAQ,KAAA,SAAAC,GAAA,cAAAA,EAAAC,KAAAD,EAAAE,MAAA,cAAAF,EAAAC,KAAA,EAMJN,EAAO,IAAIQ,IAAKA,IAAKC,eANjBJ,EAAAE,KAAA,EAOaP,EAAKU,IAAIC,cAPtB,cAOJV,EAPII,EAAAO,KAAAP,EAAAE,KAAA,EAQJrB,EAAK2B,SAAS,CAACC,QAAQb,EAAS,KAR5B,cAUJC,EAAiB,IAAIF,EAAKU,IAAIK,SAASC,EAAkB,8CAVrDX,EAAAE,KAAA,GAYWL,EAAee,QAAQC,UAAUhC,EAAKiC,MAAML,SAAStB,OAZhE,eAYJW,EAZIE,EAAAO,KAAAP,EAAAE,KAAA,GAcJrB,EAAK2B,SAAS,CAACO,aAAajB,IAdxB,QAgBhBhC,EAAYkD,OAAOC,mBAAmB,SAACC,GACrC,GAAGA,EAAK,CACJ,IAAIC,EAAMD,EAAKC,IAKf1C,EACK2C,MAAMD,GACNE,KAAK,QAAS,SAACC,GAEZ5B,EAAO4B,EAASC,MAGhB1C,EAAK2B,SAAS,CAACgB,QAAQ9B,EAAK+B,QAASC,eAAehC,EAAKiC,eAAgBC,iBAAiBlC,EAAKmC,iBAAkBC,gBAAgBpC,EAAKqC,WACtIC,QAAQC,IAAIpD,EAAKiC,MAAMU,gBAOjCU,OAAOC,SAASC,KAAK,WAtCTpC,EAAAE,KAAA,iBAAAF,EAAAC,KAAA,GAAAD,EAAAqC,GAAArC,EAAA,SA4ChBgC,QAAQC,IAARjC,EAAAqC,IA5CgB,yBAAArC,EAAAsC,SAAA7C,EAAA,kBAXlBZ,EAAKiC,MAAQ,CACXyB,MAAO,GACPf,QAAQ,EACRE,eAAe,EACfE,iBAAiB,EACjBE,gBAAgB,OAChBf,aAAa,EACbN,QAAQ,MATO5B,wHAoEV2D,GACP,OAAOA,EAAIC,OAAS,GAAMD,EAAIE,UAAU,EAAE,GAAK,MAAQF,EAAIE,UAAU,GAAG,IAAKF,mCAS3E,OACIG,EAAApD,EAAAqD,cAAA,WACID,EAAApD,EAAAqD,cAAA,OAAKC,UAAU,WACXF,EAAApD,EAAAqD,cAACE,EAAA,EAAD,KACIH,EAAApD,EAAAqD,cAACG,EAAA,EAAD,CAAKC,GAAI,GAAIC,GAAI,IAErBN,EAAApD,EAAAqD,cAAA,OAAKC,UAAU,cACXF,EAAApD,EAAAqD,cAAA,OAAKC,UAAU,eAEbF,EAAApD,EAAAqD,cAACM,EAAA,EAAD,CAAQjH,MAAM,WAAd,aACA0G,EAAApD,EAAAqD,cAACM,EAAA,EAAD,CAAQjH,MAAM,WAAd,UAQN0G,EAAApD,EAAAqD,cAAA,OAAKC,UAAU,aACfF,EAAApD,EAAAqD,cAAA,OAAKC,UAAU,aAwDPF,EAAApD,EAAAqD,cAAA,OAAKO,MAAO,CAACC,OAAO,WAQpBT,EAAApD,EAAAqD,cAAA,OAAKC,UAAU,gBAEVF,EAAApD,EAAAqD,cAAA,OAAKC,UAAU,qCACZF,EAAApD,EAAAqD,cAAA,WAASC,UAAU,OACfF,EAAApD,EAAAqD,cAAA,UAAQC,UAAU,gBACdF,EAAApD,EAAAqD,cAAA,MAAIC,UAAU,oBAAd,YAGJF,EAAApD,EAAAqD,cAAA,OAAKC,UAAU,gBAAf,WAAsCF,EAAApD,EAAAqD,cAAA,OAAKC,UAAU,OAC7CF,EAAApD,EAAAqD,cAAA,OAAKC,UAAU,UACXF,EAAApD,EAAAqD,cAAA,OAAKC,UAAU,mBAEXF,EAAApD,EAAAqD,cAAA,OAAKC,UAAU,aAAaM,MAAO,CAACC,OAAO,UAGzCT,EAAApD,EAAAqD,cAACS,EAAA,EAAD,CAAMxJ,KAAMuD,4BAA0BvD,KAAMmB,QAASoC,4BAA0BpC,iBAYhH2H,EAAApD,EAAAqD,cAAA,OAAKC,UAAU,qCAERF,EAAApD,EAAAqD,cAAA,WAASC,UAAU,QACTF,EAAApD,EAAAqD,cAAA,UAAQC,UAAU,gBACdF,EAAApD,EAAAqD,cAAA,MAAIC,UAAU,oBAAd,wBAGJF,EAAApD,EAAAqD,cAAA,OAAKC,UAAU,gBAAf,OAAkCF,EAAApD,EAAAqD,cAAA,OAAKC,UAAU,gBACzCF,EAAApD,EAAAqD,cAAA,OAAKC,UAAU,UACXF,EAAApD,EAAAqD,cAAA,OAAKC,UAAU,0BACXF,EAAApD,EAAAqD,cAAA,OAAKC,UAAU,OACXF,EAAApD,EAAAqD,cAAA,OAAKO,MAAO,CAACG,MAAO,OAASF,OAAQ,MAC/BT,EAAApD,EAAAqD,cAAA,MAAIO,MAAO,CAACI,UAAU,SACtBZ,EAAApD,EAAAqD,cAAA,SAAGD,EAAApD,EAAAqD,cAAA,gCAAuBD,EAAApD,EAAAqD,cAAA,QAAMO,MAAO,CAACK,MAAM,UAAYxE,KAAK8B,MAAMC,aAAZ0C,KAAAC,IAA6B,GAAM,IAAlE,UACxBf,EAAApD,EAAAqD,cAAA,SAAGD,EAAApD,EAAAqD,cAAA,8BAAqBD,EAAApD,EAAAqD,cAAA,QAAMO,MAAO,CAACK,MAAM,UAAWxE,KAAK8B,MAAMU,QAA1C,UACxBmB,EAAApD,EAAAqD,cAAA,SAAGD,EAAApD,EAAAqD,cAAA,8BAAqBD,EAAApD,EAAAqD,cAAA,QAAMO,MAAO,CAACK,MAAM,UAAWxE,KAAK8B,MAAMY,kBAClEiB,EAAApD,EAAAqD,cAAA,SAAGD,EAAApD,EAAAqD,cAAA,8BAAqBD,EAAApD,EAAAqD,cAAA,QAAMO,MAAO,CAACK,MAAM,UAAWxE,KAAK8B,MAAMc,oBAClEe,EAAApD,EAAAqD,cAAA,SAAGD,EAAApD,EAAAqD,cAAA,8BAAqBD,EAAApD,EAAAqD,cAAA,QAAMO,MAAO,CAACK,MAAM,UAAWxE,KAAK2E,SAAS3E,KAAK8B,MAAMgB,8BA8BlIa,EAAApD,EAAAqD,cAAA,OAAKC,UAAU,gBAEXF,EAAApD,EAAAqD,cAAA,OAAKC,UAAU,4BACXF,EAAApD,EAAAqD,cAAA,WAASC,UAAU,QACfF,EAAApD,EAAAqD,cAAA,UAAQC,UAAU,gBACdF,EAAApD,EAAAqD,cAAA,MAAIC,UAAU,oBAAd,eAGJF,EAAApD,EAAAqD,cAAA,OAAKC,UAAU,gBAAf,WAAsCF,EAAApD,EAAAqD,cAAA,OAAKC,UAAU,OAC7CF,EAAApD,EAAAqD,cAAA,OAAKC,UAAU,UACXF,EAAApD,EAAAqD,cAAA,OAAKC,UAAU,qCAxPrCe,IAAMC,4BC5Bb,SAASC,EAAgBC,GACpC,IAAIC,EAAYC,SAASrB,cAAc,OAEvC,OADAoB,EAAUE,UAAV,GAAAC,OAAyBJ,GAClBC,ECWX,ICEII,ECLAA,ECPAC,EACAC,EACAC,EACAC,EACAJ,ECFAC,EACAC,EACAC,EACAC,EACAJ,ECKAA,GLDE3F,GAAWX,EAAYW,WAAWC,IAAI,SAoM7B+F,eAjMX,SAAAA,EAAY7F,GAAM,IAAAC,EAAA,OAAAC,OAAAC,EAAA,EAAAD,CAAAE,KAAAyF,IACd5F,EAAAC,OAAAG,EAAA,EAAAH,CAAAE,KAAAF,OAAAI,EAAA,EAAAJ,CAAA2F,GAAAtF,KAAAH,KAAMJ,KAeVQ,kBAhBkBN,OAAAO,EAAA,EAAAP,CAAAQ,EAAAC,EAAAC,KAgBE,SAAAC,IAAA,OAAAH,EAAAC,EAAAQ,KAAA,SAAAC,GAAA,cAAAA,EAAAC,KAAAD,EAAAE,MAAA,cAAAF,EAAAE,KAAA,EAWVrB,EAAK2B,SAAS,CAACW,IAAItC,EAAKD,MAAMuC,MAXpB,cAahBa,QAAQC,IAAIpD,EAAKiC,MAAMK,KAbPnB,EAAAE,KAAA,EAeVzB,GACD2C,MAAMvC,EAAKiC,MAAMK,IAAM,iBACvBE,KAAK,QAAS,SAAAC,GACXzC,EAAK2B,SAAS,CAACkE,UAAUpD,EAASC,UAlB1B,OAsBZS,QAAQC,IAAIpD,EAAKiC,MAAM4D,WAtBX,wBAAA1E,EAAAsC,SAAA7C,MAhBFZ,EA0ClB8F,aAAe,SAACC,GAEf,IAAIC,EAAQD,EAAME,OAAOD,MAEL,IAAjBA,EAAMpC,OAEH5D,EAAK2B,SAAS,CAACuE,YAAaF,EAAM,GAAIG,YAAYH,EAAM,IAAK,WACzD7C,QAAQC,IAAIpD,EAAKiC,MAAMiE,aACvB/C,QAAQC,IAAIpD,EAAKiC,MAAMkE,eAM9BC,IAAK,CACDC,QAASpB,EAAe,6CACxBqB,KAAM,WA1DItG,EAkElBuG,aAAe,WAEX,IAAIC,EAASxG,EAAKiC,MAAMuE,OACpBC,EAAezG,EAAKiC,MAAMwE,aAC1BP,EAAclG,EAAKiC,MAAMiE,YACzBC,EAAcnG,EAAKiC,MAAMkE,YAEV,OAAhBD,GAAwC,OAAhBC,GAS3BvG,GACK2C,MAAMvC,EAAKiC,MAAMK,KACjBoE,OAAO,CAACC,OAAOH,EAAQI,aAAcH,EAAcI,YAAaX,EAAaY,YAAaX,EAAaY,cAAa,IACpHC,KAAK,WAEFZ,IAAK,CACDC,QAASpB,EAAe,iEACxBqB,KAAM,WAIbW,MAAM,SAACC,GACJ/D,QAAQC,IAAI8D,KAGpBlH,EAAK2B,SAAS,CAAC6E,OAAO,GAAIC,aAAa,GAAIP,YAAY,KAAMC,YAAY,QAvBrEC,IAAK,CACDC,QAASpB,EAAe,6CACxBqB,KAAM,WAzEdtG,EAAKiC,MAAQ,CACTK,IAAI,GACJkE,OAAO,GACPC,aAAa,GACbP,YAAY,KACZC,YAAY,KACZN,UAAU,MATA7F,wEAqGV,IAAAmH,EAAAhH,KAEJ,OACI2D,EAAApD,EAAAqD,cAAA,WACID,EAAApD,EAAAqD,cAAA,OAAKC,UAAU,WACXF,EAAApD,EAAAqD,cAACE,EAAA,EAAD,KACIH,EAAApD,EAAAqD,cAACG,EAAA,EAAD,CAAKC,GAAI,GAAIC,GAAI,IACbN,EAAApD,EAAAqD,cAAA,OAAKC,UAAU,cACXF,EAAApD,EAAAqD,cAAA,OAAKC,UAAU,cACXF,EAAApD,EAAAqD,cAAA,MAAIC,UAAU,SAAd,uBAIJ7D,KAAK8B,MAAM4D,UAEP/B,EAAApD,EAAAqD,cAAA,OAAKO,MAAO,CAAC8C,UAAU,WACnBtD,EAAApD,EAAAqD,cAAA,6CAKJD,EAAApD,EAAAqD,cAAA,OAAKC,UAAU,gBACfF,EAAApD,EAAAqD,cAAA,OAAKC,UAAU,UACXF,EAAApD,EAAAqD,cAAA,WAASC,UAAU,QACfF,EAAApD,EAAAqD,cAAA,UAAQC,UAAU,gBACdF,EAAApD,EAAAqD,cAAA,MAAIC,UAAU,sBAGlBF,EAAApD,EAAAqD,cAAA,OAAKC,UAAU,gBACXF,EAAApD,EAAAqD,cAAA,OAAKC,UAAU,OACPF,EAAApD,EAAAqD,cAAA,OAAKC,UAAU,iDAEXF,EAAApD,EAAAqD,cAAA,YACID,EAAApD,EAAAqD,cAAA,OAAKC,UAAU,cACXF,EAAApD,EAAAqD,cAAA,SAAOsD,QAAQ,gBAAf,eACAvD,EAAApD,EAAAqD,cAAA,SAAOuD,KAAK,OAAQtD,UAAU,eAAeuD,GAAG,cAAcC,YAAY,GACtEC,MAAOtH,KAAK8B,MAAMuE,OAClBkB,SAAU,SAAA3B,GAAK,OAAIoB,EAAKxF,SAAS,CAAC6E,OAAOT,EAAME,OAAOwB,YAI9D3D,EAAApD,EAAAqD,cAAA,OAAKC,UAAU,cACXF,EAAApD,EAAAqD,cAAA,SAAOsD,QAAQ,eAAf,iBACAvD,EAAApD,EAAAqD,cAAA,SAAOuD,KAAK,OAAOtD,UAAU,eAAeuD,GAAG,cAAcC,YAAY,GACrEC,MAAOtH,KAAK8B,MAAMwE,aAClBiB,SAAU,SAAA3B,GAAK,OAAIoB,EAAKxF,SAAS,CAAC8E,aAAaV,EAAME,OAAOwB,YAIpE3D,EAAApD,EAAAqD,cAAA,OAAKC,UAAU,cACXF,EAAApD,EAAAqD,cAAA,SAAOsD,QAAQ,eAAf,iBACAvD,EAAApD,EAAAqD,cAAA,SAAOuD,KAAK,OAAOtD,UAAU,eAAeuD,GAAG,eAAeI,UAAQ,EAACH,YAAY,GAChFE,SAAU,SAAA3B,GAAK,OAAIoB,EAAKrB,aAAaC,IACrC6B,QAAS,SAACC,GAAD,OAAQA,EAAE5B,OAAOwB,MAAQ,SAGzC3D,EAAApD,EAAAqD,cAAA,KAAGO,MAAO,CAAClH,MAAM,YAAjB,sCAEA0G,EAAApD,EAAAqD,cAAA,OAAKC,UAAU,YAAYM,MAAO,CAAC8C,UAAU,SAAS1C,UAAU,SAC5DZ,EAAApD,EAAAqD,cAAA,UAAQuD,KAAK,SAAStD,UAAU,kBAC5B4D,QAASzH,KAAKoG,aACdjC,MAAO,CAACG,MAAM,UAFlB,4BAjK1CM,IAAMC,mDMA1BpF,GAAWX,EAAYW,WAAWC,IAAI,SAuU7B+F,eApUX,SAAAA,EAAY7F,GAAM,IAAAC,EAAA,OAAAC,OAAAC,EAAA,EAAAD,CAAAE,KAAAyF,IACd5F,EAAAC,OAAAG,EAAA,EAAAH,CAAAE,KAAAF,OAAAI,EAAA,EAAAJ,CAAA2F,GAAAtF,KAAAH,KAAMJ,KAmBVQ,kBApBkBN,OAAAO,EAAA,EAAAP,CAAAQ,EAAAC,EAAAC,KAoBE,SAAAC,IAAA,IAAAC,EAAAC,EAAAC,EAAAa,EAAAZ,EAAA,OAAAP,EAAAC,EAAAQ,KAAA,SAAAC,GAAA,cAAAA,EAAAC,KAAAD,EAAAE,MAAA,cAAAF,EAAAC,KAAA,EAAAD,EAAAE,KAAA,EAGHrB,EAAK2B,SAAS,CAACW,IAAItC,EAAKD,MAAMuC,MAH3B,cAKJ1C,GACK2C,MAAMvC,EAAKiC,MAAMK,IAAK,gBACtBE,KAAK,QAAS,SAACC,GAEZ5B,EAAO4B,EAASC,MAEhB1C,EAAK8H,SAASjH,KAQxBC,EAAO,IAAIQ,IAAKA,IAAKC,eAnBfJ,EAAAE,KAAA,EAoBWP,EAAKU,IAAIC,cApBpB,UAoBNV,EApBMI,EAAAO,KAqBZyB,QAAQC,IAAIrC,EAAS,SAGNgH,KAFTnG,EAAUb,EAAS,IAtBb,CAAAI,EAAAE,KAAA,gBAAAF,EAAAE,KAAA,GA0BF+E,IAAK,CACPC,QAASpB,EAAe,4DACxBqB,KAAM,UA5BF,eAAAnF,EAAA6G,OAAA,kBAmCNhH,EAAiB,IAAIF,EAAKU,IAAIK,SAASC,GAAkB,8CAM/D9B,EAAK2B,SAAS,CAACX,iBAAgBY,UAASd,SAzC5BK,EAAAE,KAAA,iBAAAF,EAAAC,KAAA,GAAAD,EAAAqC,GAAArC,EAAA,SA+CZgC,QAAQC,IAARjC,EAAAqC,IA/CY,yBAAArC,EAAAsC,SAAA7C,EAAA,kBApBFZ,EAuElB8H,SAAW,SAACL,GACRzH,EAAK2B,SAAS,CAACsG,YAAYR,IAC3BtE,QAAQC,IAAIpD,EAAKiC,MAAMgG,cAzETjI,EAkFlBkI,iBAlFkBjI,OAAAO,EAAA,EAAAP,CAAAQ,EAAAC,EAAAC,KAkFC,SAAAwH,IAAA,IAAAlH,EAAA,OAAAR,EAAAC,EAAAQ,KAAA,SAAAkH,GAAA,cAAAA,EAAAhH,KAAAgH,EAAA/G,MAAA,cAAA+G,EAAA/G,KAAA,EACMrB,EAAKiC,MAAMjB,eAAee,QAAQsG,YAAYrI,EAAKiC,MAAMgB,iBAAiBqF,KAAK,CAACC,KAAOvI,EAAKiC,MAAMlB,WADxG,cACTE,EADSmH,EAAA1G,KAEfyB,QAAQC,IAAInC,GAFGmH,EAAA/G,KAAA,EAITrB,EAAK2B,SAAS,CAACsB,gBAAgB,KAJtB,OAMfmD,IAAK,CACDC,QAAQpB,EAAe,yBACvBqB,KAAK,YARM,wBAAA8B,EAAA3E,SAAA0E,MAlFDnI,EA8FlBwI,kBA9FkB,eAAAC,EAAAxI,OAAAO,EAAA,EAAAP,CAAAQ,EAAAC,EAAAC,KA8FE,SAAA+H,EAAOjB,GAAP,OAAAhH,EAAAC,EAAAQ,KAAA,SAAAyH,GAAA,cAAAA,EAAAvH,KAAAuH,EAAAtH,MAAA,cAAAsH,EAAAtH,KAAA,EACVrB,EAAK2B,SAAS,CAACiH,aAAanB,IADlB,OAEhBtE,QAAQC,IAAIpD,EAAKiC,MAAM2G,cAEvB5I,EAAK6I,QAAQ7I,EAAKiC,MAAM2G,cAJR,wBAAAD,EAAAlF,SAAAiF,MA9FF,gBAAAI,GAAA,OAAAL,EAAAM,MAAA5I,KAAA6I,YAAA,GAAAhJ,EAqGlB6I,QArGkB,eAAAI,EAAAhJ,OAAAO,EAAA,EAAAP,CAAAQ,EAAAC,EAAAC,KAqGR,SAAAuI,EAAMzB,GAAN,IAAA0B,EAAA,OAAA1I,EAAAC,EAAAQ,KAAA,SAAAkI,GAAA,cAAAA,EAAAhI,KAAAgI,EAAA/H,MAAA,UACO,OAAVoG,EADG,CAAA2B,EAAA/H,KAAA,eAAA+H,EAAApB,OAAA,wBAAAoB,EAAA/H,KAAA,EAKcrB,EAAKiC,MAAMjB,eAAee,QAAQ8G,QAAQpB,GAAOnH,OAL/D,cAKA6I,EALAC,EAAA1H,KAAA0H,EAAA/H,KAAA,EAMArB,EAAK2B,SAAS,CAACwH,UANf,OAONhG,QAAQC,IAAIpD,EAAKiC,MAAMkH,OAPjB,wBAAAC,EAAA3F,SAAAyF,MArGQ,gBAAAG,GAAA,OAAAJ,EAAAF,MAAA5I,KAAA6I,YAAA,GAAAhJ,EA+GlBsJ,gBA/GkBrJ,OAAAO,EAAA,EAAAP,CAAAQ,EAAAC,EAAAC,KA+GA,SAAA4I,IAAA,IAAAC,EAAAC,EAAAxI,EAAAyI,EAAA,OAAAjJ,EAAAC,EAAAQ,KAAA,SAAAyI,GAAA,cAAAA,EAAAvI,KAAAuI,EAAAtI,MAAA,aAEVmI,EAASxJ,EAAKiC,MAAM2G,cAIZ,KAAOY,EAAS,MANd,CAAAG,EAAAtI,KAAA,eAAAsI,EAAAtI,KAAA,EAOJ+E,IAAK,CACPC,QAAQpB,EAAe,4CACvBqB,KAAK,UATC,cAAAqD,EAAA3B,OAAA,wBAAA2B,EAAAtI,KAAA,EAeJrB,EAAK2B,SAAS,CAACiI,SAAQ,IAfnB,cAAAD,EAAAtI,KAAA,GAiBOrB,EAAKiC,MAAMjB,eAAee,QAAQ8H,UAAUL,GAC5DlB,KAAK,CAACC,KAAKvI,EAAKiC,MAAML,QAAS6F,MAAMzH,EAAKiC,MAAMkH,QAlBvC,eAiBRlI,EAjBQ0I,EAAAjI,KAoBdyB,QAAQC,IAAInC,GApBE0I,EAAAtI,KAAA,GAuBRzB,GACG2C,MAAMvC,EAAKiC,MAAMK,IAAM,uBACvBE,KAAK,QAAS,SAACC,GACZgH,EAAQhH,EAASC,QA1Bf,eAAAiH,EAAAtI,KAAA,GA6BRzB,GACG2C,MAAMvC,EAAKiC,MAAMK,IAAM,iBAAmBmH,GAC1C/C,OAAO,CAACoD,OAAO7I,EAAO8I,kBACtB/C,KAAK,WACFpH,GACK2C,MAAMvC,EAAKiC,MAAMK,IAAM,uBACvB0H,IAAIP,EAAQ,EAAG,SAACQ,GACVA,GACC9G,QAAQC,IAAI6G,OArCtB,eAAAN,EAAAtI,KAAA,GAoDRrB,EAAK2B,SAAS,CAACuI,iBAAgB,IApDvB,eAAAP,EAAAtI,KAAA,GAsDOrB,EAAKiC,MAAMjB,eAAee,QAAQhB,SAASf,EAAKiC,MAAML,SAAStB,OAtDtE,eAsDRoJ,EAtDQC,EAAAjI,KAAAiI,EAAAtI,KAAA,GA0DRzB,GACG2C,MAAMvC,EAAKiC,MAAMK,KACjBoE,OAAO,CAAC9D,QAAQ8G,EAAOS,OAAQrH,eAAe4G,EAAOU,cAAepH,iBAAiB0G,EAAOW,sBAAuBnH,SAASwG,EAAOY,WACnItD,KAAK,WACFhH,EAAK2B,SAAS,CAACiI,SAAQ,GAAO,WAC1BxD,IAAK,CACDC,QAAQpB,EAAe,0BACvBqB,KAAK,gBAKhBW,MAAM,SAACC,GACJ/D,QAAQC,IAAI8D,KAvEV,QA4Ed/D,QAAQC,IAAIsG,EAAOS,QA5EL,yBAAAR,EAAAlG,SAAA8F,MA5GdvJ,EAAKiC,MAAQ,CACTjB,eAAe,KACfY,QAAQ,KACRd,KAAK,KACL8I,SAAQ,EACR3G,gBAAgB,GAChB2F,aAAa,IACbO,MAAM,IAGNlB,aAAY,EACZ3F,IAAI,MAdMtC,wEAgMV,IAAAmH,EAAAhH,KAEJ,OACI2D,EAAApD,EAAAqD,cAAA,WACID,EAAApD,EAAAqD,cAAA,OAAKC,UAAU,WACXF,EAAApD,EAAAqD,cAACE,EAAA,EAAD,KACIH,EAAApD,EAAAqD,cAACG,EAAA,EAAD,CAAKC,GAAI,GAAIC,GAAI,IACbN,EAAApD,EAAAqD,cAAA,OAAKC,UAAU,cACXF,EAAApD,EAAAqD,cAAA,OAAKC,UAAU,cACXF,EAAApD,EAAAqD,cAAA,MAAIC,UAAU,SAAd,gBAKH7D,KAAK8B,MAAMgG,YAEZnE,EAAApD,EAAAqD,cAAA,OAAKC,UAAU,gBACXF,EAAApD,EAAAqD,cAAA,OAAKC,UAAU,UACXF,EAAApD,EAAAqD,cAAA,WAASC,UAAU,QACfF,EAAApD,EAAAqD,cAAA,UAAQC,UAAU,gBACdF,EAAApD,EAAAqD,cAAA,MAAIC,UAAU,sBAYlBF,EAAApD,EAAAqD,cAAA,OAAKC,UAAU,gBACXF,EAAApD,EAAAqD,cAAA,OAAKC,UAAU,OACPF,EAAApD,EAAAqD,cAAA,OAAKC,UAAU,iDACXF,EAAApD,EAAAqD,cAAA,YACID,EAAApD,EAAAqD,cAAA,OAAKC,UAAU,cACXF,EAAApD,EAAAqD,cAAA,SAAOsD,QAAQ,gBAAf,0BACIvD,EAAApD,EAAAqD,cAAA,SAAOuD,KAAK,OAAQtD,UAAU,eAAeuD,GAAG,cAAcC,YAAY,GACtEC,MAAOtH,KAAK8B,MAAMgB,gBAClByE,SAAU,SAAA3B,GAAK,OAAIoB,EAAKxF,SAAS,CAACsB,gBAAgB8C,EAAME,OAAOwB,aAM/E3D,EAAApD,EAAAqD,cAAA,OAAKC,UAAU,YAAYM,MAAO,CAAC8C,UAAU,SAAS1C,UAAU,SAC5DZ,EAAApD,EAAAqD,cAAA,UAAQuD,KAAK,SAAStD,UAAU,kBAC5B4D,QAASzH,KAAK+H,iBACd5D,MAAO,CAACG,MAAM,UAFlB,mBAQJX,EAAApD,EAAAqD,cAAA,YACID,EAAApD,EAAAqD,cAAA,OAAKC,UAAU,cACXF,EAAApD,EAAAqD,cAAA,SAAOsD,QAAQ,gBAAf,2BACAvD,EAAApD,EAAAqD,cAACwG,GAAA7J,EAAD,CACI8J,IAAK,IACLC,IAAK,KACLhD,MAAOtH,KAAK8B,MAAM2G,aAClB5E,UAAU,eAEV0D,SAAU,SAACD,GAAD,OAAWN,EAAKqB,kBAAkBf,OAIpD3D,EAAApD,EAAAqD,cAAA,KAAG3G,MAAM,SAAT,yDAGA0G,EAAApD,EAAAqD,cAAA,OAAKC,UAAU,YACXF,EAAApD,EAAAqD,cAAA,OAAKC,UAAU,uBACXF,EAAApD,EAAAqD,cAAA,SAAOsD,QAAQ,eAAf,OACAvD,EAAApD,EAAAqD,cAAA,SAAOuD,KAAK,OAAOoD,UAAQ,EAAC1G,UAAU,eAAeuD,GAAG,cAAcC,YAAY,GAC9EC,MAAQtH,KAAK8B,MAAMkH,MAAZvE,KAAAC,IAAoB,GAAI,OAGvCf,EAAApD,EAAAqD,cAAA,OAAKC,UAAU,WAAWM,MAAO,CAAC8C,UAAU,SAASuD,WAAW,SAC5D7G,EAAApD,EAAAqD,cAAA,KAAGC,UAAU,iBAAiB4G,cAAY,UAE9C9G,EAAApD,EAAAqD,cAAA,OAAKC,UAAU,uBACXF,EAAApD,EAAAqD,cAAA,SAAOsD,QAAQ,kBAAf,OACAvD,EAAApD,EAAAqD,cAAA,SAAOuD,KAAK,OAAOoD,UAAQ,EAAC1G,UAAU,eAAeuD,GAAG,iBAAiBC,YAAY,GACjFC,MAAStH,KAAK8B,MAAMkH,MAAZvE,KAAAC,IAAoB,GAAI,IAAK,SAKjDf,EAAApD,EAAAqD,cAAA,OAAKC,UAAU,YAAYM,MAAO,CAAC8C,UAAU,SAAS1C,UAAU,SAC5DZ,EAAApD,EAAAqD,cAAA,UAAQuD,KAAK,SAAStD,UAAU,kBAC5B4D,QAASzH,KAAKmJ,gBACdhF,MAAO,CAACG,MAAM,UAGVtE,KAAK8B,MAAM2H,QACV9F,EAAApD,EAAAqD,cAAA,0BACED,EAAApD,EAAAqD,cAAA,0BAoB3CD,EAAApD,EAAAqD,cAAA,OAAKO,MAAO,CAAC8C,UAAU,WACnBtD,EAAApD,EAAAqD,cAAA,gCAAuBD,EAAApD,EAAAqD,cAAA,WAAvB,gEAvTdgB,IAAMC,qBCP1BpF,GAAWX,EAAYW,WAAWC,IAAI,SAwS7BgL,eArSZ,SAAAA,EAAY9K,GAAM,IAAAC,EAAA,OAAAC,OAAAC,EAAA,EAAAD,CAAAE,KAAA0K,IAChB7K,EAAAC,OAAAG,EAAA,EAAAH,CAAAE,KAAAF,OAAAI,EAAA,EAAAJ,CAAA4K,GAAAvK,KAAAH,KAAMJ,KAURQ,kBAXkBN,OAAAO,EAAA,EAAAP,CAAAQ,EAAAC,EAAAC,KAWE,SAAAC,IAAA,OAAAH,EAAAC,EAAAQ,KAAA,SAAAC,GAAA,cAAAA,EAAAC,KAAAD,EAAAE,MAAA,cAAAF,EAAAE,KAAA,EAGXrB,EAAK2B,SAAS,CAACW,IAAItC,EAAKD,MAAMuC,MAHnB,cAIjBa,QAAQC,IAAI,MAAMpD,EAAKD,MAAMuC,KAJZnB,EAAAE,KAAA,EAMXzB,GACG2C,MAAMvC,EAAKiC,MAAMK,IAAM,iBACvBE,KAAK,QAAS,SAAAC,GACbzC,EAAK2B,SAAS,CAACmJ,QAAQrI,EAASC,UATzB,wBAAAvB,EAAAsC,SAAA7C,MATlBZ,EAAKiC,MAAQ,CACX8I,aAAY,EACZzI,IAAI,GACJwI,QAAQ,GACRrB,MAAM,EACNuB,MAAM,IAPQhL,wEA4Cb,OACI8D,EAAApD,EAAAqD,cAAA,WACID,EAAApD,EAAAqD,cAAA,OAAKC,UAAU,WACXF,EAAApD,EAAAqD,cAACE,EAAA,EAAD,KACIH,EAAApD,EAAAqD,cAACG,EAAA,EAAD,CAAKC,GAAI,GAAIC,GAAI,IAErBN,EAAApD,EAAAqD,cAAA,OAAKC,UAAU,cACXF,EAAApD,EAAAqD,cAAA,OAAKC,UAAU,cACXF,EAAApD,EAAAqD,cAAA,MAAIC,UAAU,SAAd,yBAORF,EAAApD,EAAAqD,cAAA,OAAKC,UAAU,UACXF,EAAApD,EAAAqD,cAAA,WAASC,UAAU,QACfF,EAAApD,EAAAqD,cAAA,UAAQC,UAAU,gBACdF,EAAApD,EAAAqD,cAAA,MAAIC,UAAU,sBAGlBF,EAAApD,EAAAqD,cAAA,OAAKC,UAAU,gBACXF,EAAApD,EAAAqD,cAAA,OAAKC,UAAU,OACXF,EAAApD,EAAAqD,cAAA,OAAKC,UAAU,aAG7CF,EAAApD,EAAAqD,cAAA,mBAAcD,EAAApD,EAAAqD,cAAA,WAEdD,EAAApD,EAAAqD,cAACkH,GAAA,EAAD,KACEnH,EAAApD,EAAAqD,cAAA,aACED,EAAApD,EAAAqD,cAAA,UACED,EAAApD,EAAAqD,cAAA,eACAD,EAAApD,EAAAqD,cAAA,gCAKJD,EAAApD,EAAAqD,cAAA,+BAlFegB,IAAMC,WCmHdkG,8BAnFX,SAAAA,EAAYnL,GAAM,IAAAC,EAAA,OAAAC,OAAAC,EAAA,EAAAD,CAAAE,KAAA+K,IACdlL,EAAAC,OAAAG,EAAA,EAAAH,CAAAE,KAAAF,OAAAI,EAAA,EAAAJ,CAAAiL,GAAA5K,KAAAH,KAAMJ,KAeVQ,kBAAoB,aAbhBP,EAAKiC,MAAQ,CACTkJ,QAAU,GACVC,YAAY,IALFpL,wEAuBd,OACI8D,EAAApD,EAAAqD,cAAA,WACID,EAAApD,EAAAqD,cAAA,OAAKC,UAAU,WACXF,EAAApD,EAAAqD,cAACE,EAAA,EAAD,KACIH,EAAApD,EAAAqD,cAACG,EAAA,EAAD,CAAKC,GAAI,GAAIC,GAAI,IAErBN,EAAApD,EAAAqD,cAAA,OAAKC,UAAU,cACXF,EAAApD,EAAAqD,cAAA,OAAKC,UAAU,cACXF,EAAApD,EAAAqD,cAAA,MAAIC,UAAU,SAAd,UACAF,EAAApD,EAAAqD,cAAA,SAAI5D,KAAK8B,MAAMmJ,eAOvBtH,EAAApD,EAAAqD,cAAA,OAAKC,UAAU,UACXF,EAAApD,EAAAqD,cAAA,WAASC,UAAU,QACfF,EAAApD,EAAAqD,cAAA,UAAQC,UAAU,gBACdF,EAAApD,EAAAqD,cAAA,MAAIC,UAAU,oBAAd,+BAGJF,EAAApD,EAAAqD,cAAA,OAAKC,UAAU,gBACXF,EAAApD,EAAAqD,cAAA,OAAKC,UAAU,OACXF,EAAApD,EAAAqD,cAAA,OAAKC,UAAU,qBAAf,iCAYAF,EAAApD,EAAAqD,cAAA,OAAKO,MAAO,CAAC8C,UAAU,SAAU7C,OAAO,UACpCT,EAAApD,EAAAqD,cAAA,gDA9DZgB,IAAMC,YCPnBqG,GArBE,CAEb,CAAEC,KAAMC,iBAAsBC,KAAM,YAAalF,KAAM,cAAemF,UAAW3L,GAGjF,CAAEwL,KAAMC,eAAoBC,KAAM,UAAWlF,KAAM,SAAUmF,UAAWZ,IAExE,CAAES,KAAMC,cAAmBC,KAAM,SAAUlF,KAAM,QAASmF,UAAWP,IAErE,CAAEI,KAAMC,WAAgBC,KAAM,MAAOlF,KAAM,SAAUmF,UAAWC,IAEhE,CAAEJ,KAAMC,kBAAuBC,KAAM,aAAclF,KAAM,MAAOmF,UAAW7F,IAM3E,CAAE+F,UAAU,EAAML,KAAMC,QAAaK,OAAQL,iBAAsBC,KAAM,aACzE,CAAEG,UAAU,EAAML,KAAM,IAAKM,OAAQL,iBAAsBC,KAAM,mCCuPtDK,eAzQX,SAAAA,EAAY9L,GAAO,IAAAC,EAAA,OAAAC,OAAAC,EAAA,EAAAD,CAAAE,KAAA0L,IACf7L,EAAAC,OAAAG,EAAA,EAAAH,CAAAE,KAAAF,OAAAI,EAAA,EAAAJ,CAAA4L,GAAAvL,KAAAH,KAAMJ,KA4KV+L,aAAe,WACX7M,EAAYkD,OAAO4J,UACd/E,KAAK,WACF3D,OAAOC,SAASC,KAAO,WAG1B0D,MAAM,SAAAC,GACH,IAAI8E,EAAe9E,EAAM+E,QACzBC,MAAMF,MAnLdhM,EAAKiC,MAAQ,CACTkK,QAAQ,EACRC,YAAY,EACZC,YAAY,EACZC,gBAAgB,EAChBC,qBAAqB,EACrBnP,MAAO,UACPoP,YAAa,cACbC,WAAY,GACZ1L,SAAS,GACT2L,QAAQ,IAEZ1M,EAAK2M,OAAS3M,EAAK2M,OAAOC,KAAZ3M,OAAA4M,EAAA,EAAA5M,QAAA4M,EAAA,EAAA5M,CAAAD,KACdA,EAAK8M,aAAe9M,EAAK8M,aAAaF,KAAlB3M,OAAA4M,EAAA,EAAA5M,QAAA4M,EAAA,EAAA5M,CAAAD,KACpBA,EAAK+M,iBAAmB/M,EAAK+M,iBAAiBH,KAAtB3M,OAAA4M,EAAA,EAAA5M,QAAA4M,EAAA,EAAA5M,CAAAD,KACxBA,EAAKgN,sBAAwBhN,EAAKgN,sBAAsBJ,KAA3B3M,OAAA4M,EAAA,EAAA5M,QAAA4M,EAAA,EAAA5M,CAAAD,KAC7BA,EAAKiN,aAAejN,EAAKiN,aAAaL,KAAlB3M,OAAA4M,EAAA,EAAA5M,QAAA4M,EAAA,EAAA5M,CAAAD,KAlBLA,wEAsBV2D,GACL,OAAOA,EAAIC,OAAS,GAAMD,EAAIE,UAAU,EAAE,GAAK,MAAQF,EAAIE,UAAU,GAAG,IAAKF,0CAGjEA,GACZ,OAAOA,EAAIC,OAAS,EAAKD,EAAIE,UAAU,EAAE,IAAMF,mCAI5CxD,KAAK8B,MAAMkK,OACVhM,KAAKwB,SAAS,CACVvE,MAAO,YAGX+C,KAAKwB,SAAS,CACVvE,MAAO,UAGf+C,KAAKwB,SAAS,CACVwK,QAAShM,KAAK8B,MAAMkK,8CAGftE,GACT1H,KAAKwB,SAAS,CACVyK,YAAajM,KAAK8B,MAAMmK,oDAK5BjM,KAAKwB,SAAS,CACV0K,YAAalM,KAAK8B,MAAMoK,sDAKfxE,GACb1H,KAAKwB,SAAS,CACV2K,gBAAiBnM,KAAK8B,MAAMqK,+DAGdzE,GAClB1H,KAAKwB,SAAS,CACV4K,qBAAsBpM,KAAK8B,MAAMsK,yDAG/B,IACFf,EADErE,EAAAhH,KAuBN,OArBA+M,GAAgBC,IAAI,SAACC,EAAKC,GAmBtB,OAlBGD,EAAKE,SACHF,EAAKG,MAAMJ,IAAI,SAACC,EAAKC,GAIlB,OAHGD,EAAK9B,OAASnE,EAAKpH,MAAMuD,SAASkK,WACjChC,EAAO4B,EAAK5B,MAET,QAGR4B,EAAKzB,SACDyB,EAAK9B,OAASnE,EAAKpH,MAAMuD,SAASkK,WACjChC,EAAO4B,EAAK5B,OAQjB,OAEJA,wCAGPpG,SAASqI,gBAAgBC,UAAUf,OAAO,cAC1CxM,KAAKwN,KAAKC,cAAcF,UAAUf,OAAO,WAGtCtJ,OAAOwK,WAAa,KACnBzI,SAASqI,gBAAgBC,UAAUI,OAAO,sDAK9C1I,SAASqI,gBAAgBC,UAAUf,OAAO,mBAIvCtJ,OAAOwK,WAAa,MACnBzI,SAASqI,gBAAgBC,UAAUI,OAAO,cAC1C3N,KAAKwN,KAAKC,cAAcF,UAAUI,OAAO,kDAI7C1I,SAASqI,gBAAgBC,UAAUf,OAAO,mDAK1CvH,SAASqI,gBAAgBC,UAAUf,OAAO,0DAWvCtJ,OAAOwK,WAAa,KAAO1N,KAAK8B,MAAMkK,OACrChM,KAAKwB,SAAS,CACVvE,MAAO,wDAUW,SAAvB+C,KAAKJ,MAAMgO,SACV3I,SAASqI,gBAAgBC,UAAUM,IAAI,cACvC7N,KAAKwN,KAAKC,cAAcF,UAAUM,IAAI,aAEtC5I,SAASqI,gBAAgBC,UAAUI,OAAO,cAC1C3N,KAAKwN,KAAKC,cAAcF,UAAUI,OAAO,YAE7CzK,OAAO4K,iBAAiB,SAAU9N,KAAK+N,YAAYtB,KAAKzM,OAExB,YAAzBA,KAAKJ,MAAMoO,WACVhO,KAAKwB,SAAS,CACV8K,WAAY,GACZD,YAAa,gDAQV3E,GACZxE,OAAOwK,WAAa,KAAOhG,EAAEuG,QAAQ9K,SAASkK,WAAa3F,EAAEvE,SAASkK,WAA0E,IAA9DpI,SAASqI,gBAAgBzJ,UAAUqK,QAAQ,gBAC5HjJ,SAASqI,gBAAgBC,UAAUf,OAAO,cAC1CxM,KAAKwN,KAAKC,cAAcF,UAAUf,OAAO,YAE1CtJ,OAAOwK,WAAa,KAAOhG,EAAEuG,QAAQ9K,SAASkK,WAAa3F,EAAEvE,SAASkK,WAA+E,IAAnEpI,SAASqI,gBAAgBzJ,UAAUqK,QAAQ,oBAC5HjJ,SAASqI,gBAAgBC,UAAUf,OAAO,oDAkB1C,IAAA2B,EAAAnO,KACJ,OAEI2D,EAAApD,EAAAqD,cAACwK,EAAA,EAAD,CAAQC,OAAO,KACXxK,WACkE,IAA9D7D,KAAKJ,MAAMuD,SAASkK,SAASa,QAAQ,oBACrC,4BAA4B,8BAChCvK,EAAApD,EAAAqD,cAAC0K,EAAA,EAAD,CAAWC,OAAK,GACZ5K,EAAApD,EAAAqD,cAAA,OAAKC,UAAU,kBACXF,EAAApD,EAAAqD,cAAA,OAAKC,UAAU,iBACXF,EAAApD,EAAAqD,cAAA,UAAQuD,KAAK,SAASzH,IAAI,gBAAgBmE,UAAU,iBAAiB4D,QAAS,kBAAM0G,EAAKK,gBACrF7K,EAAApD,EAAAqD,cAAA,KAAGC,UAAU,aAMbF,EAAApD,EAAAqD,cAAA,UAE+B,KAAvB5D,KAAKJ,MAAM6B,QACRkC,EAAApD,EAAAqD,cAAA,kBACD5D,KAAKyO,gBAAgBzO,KAAKJ,MAAM2M,SAAW,QAK7D5I,EAAApD,EAAAqD,cAAC8K,EAAA,EAAD,CAAatL,KAAK,KAAKpD,KAAK2O,aAMhChL,EAAApD,EAAAqD,cAACgL,EAAA,EAAD,CAAU5C,OAAQhM,KAAK8B,MAAMkK,OAAQ6C,QAAM,EAAChL,UAAU,eAAeM,MAAO,CAAC2K,YAAY,SAIrFnL,EAAApD,EAAAqD,cAACmL,EAAA,EAAD,CAAKF,QAAM,GACPlL,EAAApD,EAAAqD,cAACoL,EAAA,EAAD,CAAUC,KAAG,EAACjD,OAAQhM,KAAK8B,MAAMmK,WAAYO,OAAQ,SAAC9E,GAAD,OAAOyG,EAAKxB,aAAajF,IAAI7D,UAAU,UACxFF,EAAApD,EAAAqD,cAACsL,EAAA,EAAD,CAAgBC,OAAK,EAACF,KAAG,GACtBtL,EAAApD,EAAAqD,cAAA,OAAKwL,IAAKC,KAAcC,IAAI,WAAWzL,UAAU,eAAeM,MAAO,CAACC,OAAO,WAKlFT,EAAApD,EAAAqD,cAAC2L,EAAA,EAAD,CAAc3R,OAAK,GAGf+F,EAAApD,EAAAqD,cAAC4L,EAAA,EAAD,CAAcC,IAAI,SAAUhI,QAASzH,KAAKJ,MAAM8P,eAAe/L,EAAApD,EAAAqD,cAAA,KAAGC,UAAU,WAEpE7D,KAAKJ,MAAM+P,gBACThM,EAAApD,EAAAqD,cAAA,0BACAD,EAAApD,EAAAqD,cAAA,4BAIVD,EAAApD,EAAAqD,cAAC4L,EAAA,EAAD,CAAcC,IAAI,SAAS5L,UAAU,GAAG4D,QAASzH,KAAKJ,MAAMgQ,YAAYjM,EAAApD,EAAAqD,cAAA,KAAGC,UAAU,WAArF,sBACAF,EAAApD,EAAAqD,cAAC4L,EAAA,EAAD,CAAcC,IAAI,SAAShI,QAASzH,KAAK2L,cAAchI,EAAApD,EAAAqD,cAAA,KAAGC,UAAU,WAApE,cAgBZF,EAAApD,EAAAqD,cAAA,OAAKC,UAAU,aAAa4D,QAAS,kBAAM0G,EAAK0B,2BAlQnDjL,IAAMC,WCaZiL,oLApBP,OACInM,EAAApD,EAAAqD,cAAA,UAAQC,UAAW,UACZ7D,KAAKJ,MAAMmQ,QAAU,kBAAkB,KAE1CpM,EAAApD,EAAAqD,cAAC0K,EAAA,EAAD,CAAWC,QAAOvO,KAAKJ,MAAM2O,OAEzB5K,EAAApD,EAAAqD,cAAA,OAAKC,UAAU,aAAf,QACY,MAAQ,IAAImM,MAAQC,UADhC,KAC4CtM,EAAApD,EAAAqD,cAAA,KAAGR,KAAK,KAAK0C,OAAO,SAASoK,IAAI,uBAAjC,UAD5C,mCARCtL,IAAMC,kDVYvBsL,GAAc,SAuMHC,eAlMX,SAAAA,EAAYxQ,GAAM,IAAAC,EAAA,OAAAC,OAAAC,EAAA,EAAAD,CAAAE,KAAAoQ,IACdvQ,EAAAC,OAAAG,EAAA,EAAAH,CAAAE,KAAAF,OAAAI,EAAA,EAAAJ,CAAAsQ,GAAAjQ,KAAAH,KAAMJ,KACDyQ,YAAY5D,KAAjB3M,OAAA4M,EAAA,EAAA5M,QAAA4M,EAAA,EAAA5M,CAAAD,KACAA,EAAKiC,MAAQ,CACXwO,OAAQ,GACRC,SAAU,OACVlE,YAAa,cACbC,WAAY,GACZkE,gBAAiB,iBAEnB3Q,EAAK4Q,aAAe5Q,EAAK4Q,aAAahE,KAAlB3M,OAAA4M,EAAA,EAAA5M,QAAA4M,EAAA,EAAA5M,CAAAD,KACpBA,EAAK6Q,cAAgB7Q,EAAK6Q,cAAcjE,KAAnB3M,OAAA4M,EAAA,EAAA5M,QAAA4M,EAAA,EAAA5M,CAAAD,KAXPA,wEAeT2D,GACL,OAAOA,EAAIC,OAAS,GAAMD,EAAIE,UAAU,EAAE,GAAK,MAAQF,EAAIE,UAAU,GAAG,IAAKF,wCAGnE2M,GAEc,KAAtBnQ,KAAK8B,MAAMwO,QACI,wCAIRK,GACTR,GAAc,GACXnQ,KAAK8B,MAAMwO,SAAWK,EACrB3Q,KAAKwB,SAAS,CACV8O,OAAQ,KAGZtQ,KAAKwB,SAAS,CACV8O,OAAQK,wCASRC,GACR,OAAO5Q,KAAKJ,MAAMuD,SAASkK,SAASa,QAAQ0C,IAAc,EAAI,UAAY,+CAI9C,YAAzB5Q,KAAKJ,MAAMoO,WACVhO,KAAKwB,SAAS,CACVgP,gBAAiB,GACjBlE,WAAY,GACZD,YAAa,KAIlBwE,UAAUC,SAAS5C,QAAQ,QAAU,IACpC9I,EAAK,IAAI2L,KAAiB/Q,KAAKwN,KAAKwD,QAAQ,CAACC,iBAAiB,EAAMC,iBAAiB,oDAMtFL,UAAUC,SAAS5C,QAAQ,QAAU,GACpC9I,EAAG+L,2CAGH,IAAAnK,EAAAhH,KAkCJ,OACI2D,EAAApD,EAAAqD,cAAA,OAAKC,UAAU,kBAAkBuN,aAAW,QAAQjN,MAAO,CAACC,OAAO,SAE/DT,EAAApD,EAAAqD,cAAA,OAAKC,UAAU,SAafF,EAAApD,EAAAqD,cAAA,OAAKC,UAAU,kBAAkBnE,IAAI,WACrCiE,EAAApD,EAAAqD,cAAA,OAAKC,UAAU,oBACXF,EAAApD,EAAAqD,cAAA,OAAKC,UAAU,uBAEPF,EAAApD,EAAAqD,cAAA,OAAK0L,IAAI,GAAGF,IAAKiC,KAAWxN,UAAU,yBAAyBM,MAAO,CAACmN,WAAW,kBAG1F3N,EAAApD,EAAAqD,cAAA,OAAKC,UAAU,yBACXF,EAAApD,EAAAqD,cAAA,UACID,EAAApD,EAAAqD,cAAA,QAAMO,MAAO,CAACoN,SAAS,OAAOtU,MAAM,UAAW+C,KAAK2E,SAAS3E,KAAKJ,MAAM6B,UACxEkC,EAAApD,EAAAqD,cAAA,QAAMC,UAAU,2BAEpBF,EAAApD,EAAAqD,cAAA,KAAGC,UAAU,iBAEc,KAAvB7D,KAAKJ,MAAM6B,QACTkC,EAAApD,EAAAqD,cAAA,QAAMO,MAAO,CAAClH,MAAM,UAApB,YACA0G,EAAApD,EAAAqD,cAAA,QAAMO,MAAO,CAAClH,MAAM,YAApB,eAMV0G,EAAApD,EAAAqD,cAACmL,EAAA,EAAD,CAAKlL,UAAU,cAEP7D,KAAKJ,MAAM4R,OAAOxE,IAAI,SAACC,EAAKC,GACxB,OAAGD,EAAKzB,SACG,KACM,UAAdyB,EAAK9F,KACG,KACM,aAAd8F,EAAK9F,KAEFxD,EAAApD,EAAAqD,cAAC6N,GAAD,CAAcpG,KAAM4B,EAAK5B,KAAM6B,IAAKA,IAGzB,aAAdD,EAAK9F,KAGAxD,EAAApD,EAAAqD,cAAA,MAAIC,UAAYoJ,EAAKyE,SAAY,KAAYzE,EAAKyE,WAAavB,IAAmC,KAAlBlD,EAAKyE,UAAuC,iBAAlBzE,EAAKyE,UAAmC1K,EAAKlF,MAAMwO,SAAWrD,EAAK5B,KAAS,SAAU,IAAM,eAAgBsG,cAAY,WAAWzE,IAAKA,GAC9OvJ,EAAApD,EAAAqD,cAAA,KAAGgO,GAAI3E,EAAK9B,KAAMtH,UAAU,WAAW4D,QAAS,kBAAMT,EAAKyJ,aAAaxD,EAAK5B,OAAOjI,KAAK,MAC7EO,EAAApD,EAAAqD,cAAA,KAAGC,UAAW,KAAKoJ,EAAK9G,OACxBxC,EAAApD,EAAAqD,cAAA,SAAIqJ,EAAK5B,MACT1H,EAAApD,EAAAqD,cAAA,QAAMC,UAAU,SAASoJ,EAAK4E,OAC9BlO,EAAApD,EAAAqD,cAAA,QAAMC,UAAW,wBA1FhD,SAACzB,EAAO0P,GACrB,IAAIC,EAAQ,GACZ,GAAI3P,EAAO,CACP,IAAK,IAAI4P,EAAI,EAAGA,EAAI5P,EAAMqB,OAAQuO,IAC9BD,EAAME,KACFtO,EAAApD,EAAAqD,cAAA,MAAIsJ,IAAK8E,GACLrO,EAAApD,EAAAqD,cAACsO,GAAA,EAAD,CAASN,GAAIxP,EAAM4P,GAAG7G,KAAMtH,UAAU,WAAWsO,gBAAgB,UAC7DxO,EAAApD,EAAAqD,cAAA,YAAOxB,EAAM4P,GAAG3G,SAKzBrE,EAAKpH,MAAMuD,SAASkK,WAAajL,EAAM4P,GAAG7G,MAEtB,WAAhBgF,IAAkD,KAAtBnJ,EAAKlF,MAAMwO,SACtCH,GAAc2B,GAGc,MAAjC9K,EAAKpH,MAAMuD,SAASkK,WACnB8C,GAAc,cAOtB,OAAOxM,EAAApD,EAAAqD,cAACmL,EAAA,EAAD,KAAMgD,IAkEiBK,CAASnF,EAAK7K,MAAO6K,EAAKyE,WAKvB,oBAAdzE,EAAK9F,KAEFxD,EAAApD,EAAAqD,cAACyO,GAAD,CAAiBhH,KAAM4B,EAAK5B,KAAMlF,KAAM8G,EAAK9G,KAAMgF,KAAM8B,EAAK9B,KAAM0G,MAAO5E,EAAK4E,MAAOzP,MAAO6K,EAAK7K,MAAO8K,IAAKA,EAAKoF,UAAWtL,EAAKlF,MAAMwO,SAAWrD,EAAK5B,KAAO,aAAc,GAAK5D,QAAS,kBAAMT,EAAKyJ,aAAaxD,EAAK5B,SAI5N1H,EAAApD,EAAAqD,cAAA,MAAIC,UAAWmD,EAAKqJ,YAAYpD,EAAK9B,MAAQ,eAAgB+B,IAAKA,EAAKzF,QAAS,kBAAMT,EAAKyJ,aAAaxD,EAAK5B,QACzG1H,EAAApD,EAAAqD,cAACsO,GAAA,EAAD,CAASN,GAAI3E,EAAK9B,KAAMtH,UAAU,WAAWsO,gBAAgB,UACzDxO,EAAApD,EAAAqD,cAAA,KAAGC,UAAW,KAAKoJ,EAAK9G,OACxBxC,EAAApD,EAAAqD,cAAA,SAAIqJ,EAAK5B,MACT1H,EAAApD,EAAAqD,cAAA,QAAMC,UAAU,SAASoJ,EAAK4E,qBAjLpDjN,IAAMC,yCWDtB0N,GAAa,CACf,CAAClH,KAAM,SAAUpO,MAAO,aACxB,CAACoO,KAAM,UAAWpO,MAAO,QACzB,CAACoO,KAAM,OAAQpO,MAAO,SAGpBuV,GAAc,CAChB,CAACC,OAAe,+BAAgCpH,KAAM,YAAaqH,OAAQ,aAC3E,CAACD,OAAe,+BAAgCpH,KAAM,gBAAiBqH,OAAQ,QAC/E,CAACD,OAAe,+BAAgCpH,KAAM,cAAeqH,OAAQ,QAC7E,CAACD,OAAe,+BAAgCpH,KAAM,cAAeqH,OAAQ,YAG3EC,GAAc,CAChB,CAACF,OAAe,+BAAgCpH,KAAM,cAAeqH,OAAQ,QAC7E,CAACD,OAAe,+BAAgCpH,KAAM,aAAcqH,OAAQ,aAC5E,CAACD,OAAe,+BAAgCpH,KAAM,cAAeqH,OAAQ,WAC7E,CAACD,OAAe,+BAAgCpH,KAAM,cAAeqH,OAAQ,QAC7E,CAACD,OAAe,+BAAgCpH,KAAM,cAAeqH,OAAQ,QAC7E,CAACD,OAAe,+BAAgCpH,KAAM,cAAeqH,OAAQ,aAC7E,CAACD,OAAe,+BAAgCpH,KAAM,iBAAkBqH,OAAQ,WAChF,CAACD,OAAe,gCAAiCpH,KAAM,cAAeqH,OAAQ,QAC9E,CAACD,OAAe,gCAAiCpH,KAAM,eAAgBqH,OAAQ,QAC/E,CAACD,OAAe,gCAAiCpH,KAAM,cAAeqH,OAAQ,aAC9E,CAACD,OAAe,+BAAgCpH,KAAM,cAAeqH,OAAQ,WAC7E,CAACD,OAAe,+BAAgCpH,KAAM,aAAcqH,OAAQ,aVhCtD9N,IAAMC,UCHTD,IAAMC,UCEDD,IAAMC,4BS0BnB+N,oLA5BP,IADA,IAAIC,EAAkB,GACbb,EAAI,EAAGA,EAAIhS,KAAKJ,MAAM4S,YAAY/O,OAAQuO,IAC/Ca,EAAgBZ,KACZtO,EAAApD,EAAAqD,cAACkP,GAAA,EAAD,CAAe5F,IAAK8E,EAAGnO,UAAU,WAC7BF,EAAApD,EAAAqD,cAAA,OAAKC,UAAU,YACXF,EAAApD,EAAAqD,cAAA,OAAKwL,IAAKpP,KAAKJ,MAAM4S,YAAYR,GAAGS,OAAQnD,IAAI,cAAczL,UAAU,6BAE5EF,EAAApD,EAAAqD,cAAA,OAAKC,UAAU,aACPF,EAAApD,EAAAqD,cAAA,QAAMC,UAAU,QAAS7D,KAAKJ,MAAM4S,YAAYR,GAAG3G,MACnD1H,EAAApD,EAAAqD,cAAA,QAAMC,UAAU,gBAAiB7D,KAAKJ,MAAM4S,YAAYR,GAAGU,QAC3D/O,EAAApD,EAAAqD,cAAA,QAAMmP,cAAa/S,KAAKJ,MAAM4S,YAAYR,GAAGU,OAAQ7O,UAAY,kCAKrF,OACwBF,EAAApD,EAAAqD,cAAA,WACAD,EAAApD,EAAAqD,cAACoP,GAAA,EAAD,KACSH,WApBhBjO,IAAMC,WC+BhBoO,oLA5BP,IADA,IAAIC,EAAkB,GACblB,EAAI,EAAGA,EAAIhS,KAAKJ,MAAM+S,YAAYlP,OAAQuO,IAC/CkB,EAAgBjB,KACZtO,EAAApD,EAAAqD,cAACkP,GAAA,EAAD,CAAe5F,IAAK8E,EAAGnO,UAAU,WAC7BF,EAAApD,EAAAqD,cAAA,OAAKC,UAAU,YACXF,EAAApD,EAAAqD,cAAA,OAAKwL,IAAKpP,KAAKJ,MAAM+S,YAAYX,GAAGS,OAAQnD,IAAI,cAAczL,UAAU,6BAE5EF,EAAApD,EAAAqD,cAAA,OAAKC,UAAU,aACPF,EAAApD,EAAAqD,cAAA,QAAMC,UAAU,QAAS7D,KAAKJ,MAAM+S,YAAYX,GAAG3G,MACnD1H,EAAApD,EAAAqD,cAAA,QAAMC,UAAU,gBAAiB7D,KAAKJ,MAAM+S,YAAYX,GAAGU,QAC3D/O,EAAApD,EAAAqD,cAAA,QAAMmP,cAAa/S,KAAKJ,MAAM+S,YAAYX,GAAGU,OAAQ7O,UAAY,kCAKrF,OACwBF,EAAApD,EAAAqD,cAAA,WACAD,EAAApD,EAAAqD,cAACoP,GAAA,EAAD,KACSE,WApBhBtO,IAAMC,WC0BhBsO,oLAxBP,IADA,IAAIC,EAAiB,GACZpB,EAAI,EAAGA,EAAIhS,KAAKJ,MAAM2S,WAAW9O,OAAQuO,IAC9CoB,EAAenB,KACXtO,EAAApD,EAAAqD,cAACkP,GAAA,EAAD,CAAe5F,IAAK8E,GAChBrO,EAAApD,EAAAqD,cAAA,OAAKC,UAAU,uBACPF,EAAApD,EAAAqD,cAAA,QAAMmP,cAAa/S,KAAKJ,MAAM2S,WAAWP,GAAG/U,MAAO4G,UAAY,mBAC/DF,EAAApD,EAAAqD,cAAA,QAAMC,UAAU,QAAS7D,KAAKJ,MAAM2S,WAAWP,GAAG3G,SAKtE,OACwB1H,EAAApD,EAAAqD,cAAA,WACAD,EAAApD,EAAAqD,cAACoP,GAAA,EAAD,KACSI,WAhBjBxO,IAAMC,eCAHD,IAAMC,UCAXD,IAAMC,UCEND,IAAMC,UCJHD,IAAMC,UCDJD,IAAMC,UCGPD,IAAMC,sCC0CjBwO,oLAvCF,IAAAC,EAKAtT,KAAKJ,MAHN2T,EAFCD,EAEDC,OAAQC,EAFPF,EAEOE,MAAOrN,EAFdmN,EAEcnN,KAAMsN,EAFpBH,EAEoBG,QAASC,EAF7BJ,EAE6BI,SAAUC,EAFvCL,EAEuCK,UAAWC,EAFlDN,EAEkDM,WAAYC,EAF9DP,EAE8DO,GAAIhQ,EAFlEyP,EAEkEzP,UAE/DiQ,GAJHR,EAGDS,QAHCT,EAGQU,SAHRV,EAGkBW,OAHlBX,EAG0BY,SAH1BZ,EAGoCa,UAHpCb,EAG+Cc,QAH/Cd,EAGwDe,OAHxDf,EAGgEgB,OAHhEhB,EAGwEiB,QAHxEjB,EAGiFkB,SAHjFlB,EAG2FmB,OAH3FnB,EAGmGoB,YAHnG5U,OAAA6U,GAAA,EAAA7U,CAAAwT,EAAA,wNAODsB,EAAaC,KAAG,CAChBC,aAAcvB,EACdwB,YAAavB,EACbwB,WAAY7O,EACZ8O,cAAexB,EACfyB,yBAA0BxB,EAC1ByB,SAAUtB,IAOd,YAJiBjM,IAAd/D,IACC+Q,GAAc,IAAI/Q,GAIlBF,EAAApD,EAAAqD,cAACM,EAAA,EAADpE,OAAAsV,OAAA,CAAQvR,UAAW+Q,GAAgBd,GAC9BH,EAAahQ,EAAApD,EAAAqD,cAAA,QAAMC,UAAU,aAAYF,EAAApD,EAAAqD,cAAA,KAAGC,UAAW8P,IAA1C,KAAmE,KAChF3T,KAAKJ,MAAMwS,SACXwB,EAAcjQ,EAAApD,EAAAqD,cAAA,QAAMC,UAAU,6BAA4BF,EAAApD,EAAAqD,cAAA,KAAGC,UAAW+P,IAA1D,KAAoF,aAzBxF/O,2BCHED,IAAMC,UCETD,IAAMC,4BCF1BwQ,eACF,SAAAA,EAAYzV,GAAM,IAAAC,EAAA,OAAAC,OAAAC,EAAA,EAAAD,CAAAE,KAAAqV,IACdxV,EAAAC,OAAAG,EAAA,EAAAH,CAAAE,KAAAF,OAAAI,EAAA,EAAAJ,CAAAuV,GAAAlV,KAAAH,KAAMJ,KACDkC,MAAQ,CACTwT,OAAO,GAHGzV,wEAMV,IAAAmH,EAAAhH,KAAAsT,EACkHtT,KAAKJ,MAAnHvE,EADJiY,EACIjY,MAAMka,EADVjC,EACUiC,UAAUC,EADpBlC,EACoBkC,WAAYC,EADhCnC,EACgCmC,eAAgBC,EADhDpC,EACgDoC,WAAYC,EAD5DrC,EAC4DqC,WAAYC,EADxEtC,EACwEsC,gBAAiBC,EADzFvC,EACyFuC,qBACzFC,EAAU,IAMd,YALuBlO,IAApBgO,QACkChO,IAA9BgO,EAAgB/R,YACfiS,GAASF,EAAgB/R,UAAU,UAG1B+D,IAAd2N,QAA0C3N,IAAf4N,EAEtB7R,EAAApD,EAAAqD,cAACmS,GAAA,EAADjW,OAAAsV,OAAA,GAAgBQ,EAAhB,CAAiC/R,UAAWiS,GAAS9V,KAAK8B,MAAMwT,MAAM,oBAAoB,WACvE1N,IAAd2N,EAA2B5R,EAAApD,EAAAqD,cAACoS,GAAA,EAAoBH,EAAuBN,GAA8B,GACtG5R,EAAApD,EAAAqD,cAACqS,GAAA,EAADnW,OAAAsV,OAAA,GAAWO,EAAX,CAAuBO,QAAS,SAACxO,GAAD,OAAOV,EAAKxF,SAAS,CAAC8T,OAAM,KAAQa,OAAQ,SAACzO,GAAD,OAAOV,EAAKxF,SAAS,CAAC8T,OAAM,aACxF1N,IAAf4N,EAA4B7R,EAAApD,EAAAqD,cAACoS,GAAA,EAAoBH,EAAuBL,GAA+B,IAI5F,UAApBG,EAAWxO,MAAwC,aAApBwO,EAAWxO,KACtCxD,EAAApD,EAAAqD,cAACwS,GAAA,EAADtW,OAAAsV,OAAA,GAAeK,EAAf,CAA+B5R,UAA+B,UAApB8R,EAAWxO,KAAmB,mBAAmB,KACvFxD,EAAApD,EAAAqD,cAACyS,GAAA,EAAUX,EACP/R,EAAApD,EAAAqD,cAACqS,GAAA,EAAUN,GACXhS,EAAApD,EAAAqD,cAAA,QAAMC,UAAU,oBACfxI,GAAgB,KAGzBsI,EAAApD,EAAAqD,cAACwS,GAAA,EAAcX,EACVpa,EAAQsI,EAAApD,EAAAqD,cAACyS,GAAA,EAAUX,EAAara,GAAe,GAChDsI,EAAApD,EAAAqD,cAACqS,GAAA,EAAUN,WAlCN/Q,IAAMC,WC2ChByR,IDHiBzR,wBCxC5B,SAAAyR,EAAY1W,GAAO,IAAAC,EAAA,OAAAC,OAAAC,EAAA,EAAAD,CAAAE,KAAAsW,IACfzW,EAAAC,OAAAG,EAAA,EAAAH,CAAAE,KAAAF,OAAAI,EAAA,EAAAJ,CAAAwW,GAAAnW,KAAAH,KAAMJ,KACD2W,cAAe1W,EAAK0W,cAAc9J,KAAnB3M,OAAA4M,EAAA,EAAA5M,QAAA4M,EAAA,EAAA5M,CAAAD,KACpBA,EAAKiC,MAAQ,CACT0U,UAAU,GAJC3W,+EAQfG,KAAKwB,SAAS,CACVgV,UAAWxW,KAAK8B,MAAM0U,4CAqB1B,OACI7S,EAAApD,EAAAqD,cAAA,MAAIC,WAAY7D,KAAK8B,MAAM0U,SAAW,SAAU,IAAM,IAAMxW,KAAKJ,MAAM0S,UAAWX,cAAY,YAC1FhO,EAAApD,EAAAqD,cAAA,KAAGR,KAAK,KAAKwO,GAAI5R,KAAKJ,MAAMuL,KAAMtH,UAAU,WAAW4D,QAASzH,KAAKuW,eACzC5S,EAAApD,EAAAqD,cAAA,KAAGC,UAAW,KAAK7D,KAAKJ,MAAMuG,OAC9BxC,EAAApD,EAAAqD,cAAA,SAAI5D,KAAKJ,MAAMyL,MACf1H,EAAApD,EAAAqD,cAAA,QAAMC,UAAU,SAAS7D,KAAKJ,MAAMiS,OACpClO,EAAApD,EAAAqD,cAAA,QAAMC,UAAW,wBAtBpC,SAACzB,GACd,IAAI2P,EAAQ,GACZ,GAAI3P,EAAO,CACP,IAAK,IAAI4P,EAAI,EAAGA,EAAI5P,EAAMqB,OAAQuO,IAC9BD,EAAME,KACFtO,EAAApD,EAAAqD,cAAA,MAAIsJ,IAAK8E,GACLrO,EAAApD,EAAAqD,cAACsO,GAAA,EAAD,CAASN,GAAIxP,EAAM4P,GAAG7G,KAAMtH,UAAU,WAAWsO,gBAAgB,UAC7DxO,EAAApD,EAAAqD,cAAA,YAAOxB,EAAM4P,GAAG3G,SAKhC,OAAO1H,EAAApD,EAAAqD,cAACmL,EAAA,EAAD,KAAMgD,IAYXK,CAASpS,KAAKJ,MAAMwC,eAvCRwC,IAAMC,YCQrB4R,oLAPP,OACI9S,EAAApD,EAAAqD,cAAA,MAAIC,UAAU,YACNF,EAAApD,EAAAqD,cAAA,WAAM5D,KAAKJ,MAAMyL,cALVzG,IAAMC,WCE3B6R,ICGkB9R,IAAMC,UCAJD,IAAMC,UCCND,IAAMC,UCFJD,IAAMC,UJFhB,SAOZS,GAAW,OAQXqR,GAAc,QAOdpR,GAAa,QKWJqR,GAnCC,kBACd,IAAIC,QAAQ,SAACC,EAASC,GAEpB7T,OAAO4K,iBAAiB,OAAxBhO,OAAAO,EAAA,EAAAP,CAAAQ,EAAAC,EAAAC,KAAgC,SAAAC,IAAA,IAAAU,EAAA6V,EAAAC,EAAAC,EAAA,OAAA5W,EAAAC,EAAAQ,KAAA,SAAAC,GAAA,cAAAA,EAAAC,KAAAD,EAAAE,MAAA,WAE1BgC,OAAOiU,SAFmB,CAAAnW,EAAAE,KAAA,gBAGtBC,EAAO,IAAIR,IAAKuC,OAAOiU,UAHDnW,EAAAC,KAAA,EAAAD,EAAAE,KAAA,EAMpBgC,OAAOiU,SAASC,SANI,OAQ1BN,EAAQ3V,GARkBH,EAAAE,KAAA,gBAAAF,EAAAC,KAAA,EAAAD,EAAAqC,GAAArC,EAAA,SAU1B+V,EAAM/V,EAAAqC,IAVoB,QAAArC,EAAAE,KAAA,iBAcrBgC,OAAO/B,MAERA,EAAO+B,OAAO/B,KACpB6B,QAAQC,IAAI,2BACZ6T,EAAQ3V,KAIF8V,EAAW,IAAItW,IAAK0W,UAAUC,aAClC,yBAEInW,EAAO,IAAIR,IAAKsW,GACtBjU,QAAQC,IAAI,gDACZ6T,EAAQ3V,IA3BoB,yBAAAH,EAAAsC,SAAA7C,EAAA,qBC4B9BwN,GAAUsJ,cA2JDC,eAxJX,SAAAA,EAAY5X,GAAO,IAAAC,EAAA,OAAAC,OAAAC,EAAA,EAAAD,CAAAE,KAAAwX,IACf3X,EAAAC,OAAAG,EAAA,EAAAH,CAAAE,KAAAF,OAAAI,EAAA,EAAAJ,CAAA0X,GAAArX,KAAAH,KAAMJ,KAgBVQ,kBAjBmBN,OAAAO,EAAA,EAAAP,CAAAQ,EAAAC,EAAAC,KAiBC,SAAAC,IAAA,IAAAuW,EAAApW,EAAA6W,EAAA,OAAAnX,EAAAC,EAAAQ,KAAA,SAAAC,GAAA,cAAAA,EAAAC,KAAAD,EAAAE,MAAA,cAAAF,EAAAC,KAAA,EAAAD,EAAAE,KAAA,EAGO0V,KAHP,cAGNzV,EAHMH,EAAAO,KAAAP,EAAAE,KAAA,EAIWC,EAAKE,IAAIC,cAJpB,cAINV,EAJMI,EAAAO,KAAAP,EAAAE,KAAA,EAMaC,EAAKE,IAAIqW,WAAW9W,EAAS,IAN1C,cAMN6W,EANMzW,EAAAO,KAUIJ,EAAKwW,MAAMC,QAAQH,EAAW,SAVlCzW,EAAAE,KAAA,GAcNpC,EAAYkD,OAAOC,mBAAmB,SAAAC,GACxC,GAAGA,EAAK,CACJ,IAAMC,EAAMD,EAAKC,IAEjBtC,EAAK2B,SAAS,CAACW,QAEnBa,QAAQC,IAAIpD,EAAKiC,MAAMK,OApBf,QAAAnB,EAAAE,KAAA,iBAAAF,EAAAC,KAAA,GAAAD,EAAAqC,GAAArC,EAAA,SAwBZgC,QAAQC,IAARjC,EAAAqC,IAxBY,yBAAArC,EAAAsC,SAAA7C,EAAA,kBAjBDZ,EA8CnB6P,cA9CmB5P,OAAAO,EAAA,EAAAP,CAAAQ,EAAAC,EAAAC,KA8CH,SAAAwH,IAAA,IAAAkP,EAAAW,EAAAjX,EAAAa,EAAAgW,EAAAlL,EAAA,OAAAjM,EAAAC,EAAAQ,KAAA,SAAAkH,GAAA,cAAAA,EAAAhH,KAAAgH,EAAA/G,MAAA,UAEO,qBAATC,KAFE,CAAA8G,EAAA/G,KAAA,gBAIFC,EAAO,IAAIR,IAAKA,IAAKS,eAJnB6G,EAAA/G,KAAA,EAKcC,EAAKE,IAAIyW,IAAIC,iBAL3B,cAKFF,EALE5P,EAAA1G,KAMRyB,QAAQC,IAAI4U,GANJ5P,EAAA/G,KAAA,EAOeC,EAAKE,IAAIC,cAPxB,UAOFV,EAPEqH,EAAA1G,UAUOqG,KAFTnG,EAAUb,EAAS,IARjB,CAAAqH,EAAA/G,KAAA,gBAAA+G,EAAA/G,KAAA,GAWE+E,IAAK,CACPC,QAASpB,EAAe,4DACxBqB,KAAM,UAbN,eAAA8B,EAAAJ,OAAA,yBAAAI,EAAA/G,KAAA,GAmBFrB,EAAK2B,SAAS,CAACC,UAASkO,iBAAgB,IAnBtC,eAoBR3M,QAAQC,IAAIpD,EAAKiC,MAAML,SApBfwG,EAAA/G,KAAA,GAsBiBC,EAAKE,IAAIqW,WAAW9W,EAAS,IAtB9C,QAsBF6W,EAtBExP,EAAA1G,KAuBFgL,EAAUpL,EAAKwW,MAAMC,QAAQH,EAAW,SAE9C5X,EAAK2B,SAAS,CAAC+K,YACfvJ,QAAQC,IAAIpD,EAAKiC,MAAMyK,SA1BftE,EAAA/G,KAAA,iBA6BR+E,IAAK,CACDC,QAASpB,EAAe,iCACxBqB,KAAM,UA/BF,yBAAA8B,EAAA3E,SAAA0E,MA9CGnI,EAoFnB+P,WAAa,WACT/P,EAAK2B,SAAS,CAACC,QAAQ,GAAIkO,iBAAgB,KAnF3C9P,EAAKiC,MAAQ,CACTuD,UAAWqR,GACXlR,YAAamR,GACbrR,SAAUA,GACVC,WAAYA,GACZ9D,QAAQ,OACR8K,QAAQ,GACRpL,KAAK,KACLwO,iBAAgB,EAChBxN,IAAI,MAERtC,EAAKmY,aAAenY,EAAKmY,aAAavL,KAAlB3M,OAAA4M,EAAA,EAAA5M,QAAA4M,EAAA,EAAA5M,CAAAD,KACpBA,EAAKoY,eAAiBpY,EAAKoY,eAAexL,KAApB3M,OAAA4M,EAAA,EAAA5M,QAAA4M,EAAA,EAAA5M,CAAAD,KAdPA,4EAwFNqY,EAAKC,GACdnY,KAAKwB,SAAS,CACZ6D,UAAW,QACXC,SAAU,gDAGD4S,EAAKC,GAChBnY,KAAKwB,SAAS,CACZgE,YAAa,cACbD,WAAY,qGAKCmC,GACO,SAArBA,EAAEuG,QAAQmK,SACXpY,KAAKwN,KAAK6K,UAAUC,UAAY,EAChCrT,SAASsT,iBAAiBD,UAAY,oCAGlC,IAAAtR,EAAAhH,KACJ,OACI2D,EAAApD,EAAAqD,cAAA,OAAKC,UAAU,UAAUnE,IAAI,eAAe8Y,YAAWxY,KAAK8B,MAAMuD,UAAWoT,cAAazY,KAAK8B,MAAM0D,YAAakT,gBAAe1Y,KAAK8B,MAAMwD,SAAUqT,kBAAiB3Y,KAAK8B,MAAMyD,YAE9K5B,EAAApD,EAAAqD,cAACgV,GAAD9Y,OAAAsV,OAAA,GAAYpV,KAAKJ,MAAjB,CAAwBgO,QNpHvB,UMoH0CI,UAAW,UAAWvM,QAASzB,KAAK8B,MAAML,QAASmO,WAAc5P,KAAK4P,WAAYrD,QAASvM,KAAK8B,MAAMyK,QAASpL,KAAQnB,KAAK8B,MAAMX,KAAMuO,cAAiB1P,KAAK0P,cAAeC,gBAAiB3P,KAAK8B,MAAM6N,mBACpPhM,EAAApD,EAAAqD,cAACiV,GAAD/Y,OAAAsV,OAAA,GAAapV,KAAKJ,MAAlB,CAAyB4R,OAAQzE,GAAiBiB,UAAW,UAAWvM,QAASzB,KAAK8B,MAAML,WAC5FkC,EAAApD,EAAAqD,cAAA,OAAKC,UAAU,aAAanE,IAAI,aAE5BiE,EAAApD,EAAAqD,cAACkV,EAAA,EAAD,CAAQ7K,QAASA,IACbtK,EAAApD,EAAAqD,cAACkV,EAAA,EAAD,CAAOC,OAAK,EAAC5N,KAAK,iBAAiBE,KAAK,YAAY2N,OAAQ,SAAApZ,GAAK,OAAK+D,EAAApD,EAAAqD,cAACqV,EAADnZ,OAAAsV,OAAA,GAAaxV,EAAb,CAAoBuC,IAAK6E,EAAKlF,MAAMK,UAC1GwB,EAAApD,EAAAqD,cAACkV,EAAA,EAAD,CAAOC,OAAK,EAAC5N,KAAK,eAAeE,KAAK,UAAU2N,OAAQ,SAAApZ,GAAK,OAAK+D,EAAApD,EAAAqD,cAACsV,GAADpZ,OAAAsV,OAAA,GAAcxV,EAAd,CAAqBuC,IAAK6E,EAAKlF,MAAMK,UACvGwB,EAAApD,EAAAqD,cAACkV,EAAA,EAAD,CAAOC,OAAK,EAAC5N,KAAK,cAAcE,KAAK,SAAS2N,OAAQ,SAAApZ,GAAK,OAAK+D,EAAApD,EAAAqD,cAACuV,GAADrZ,OAAAsV,OAAA,GAAmBxV,EAAnB,CAA0BuC,IAAK6E,EAAKlF,MAAMK,UAC1GwB,EAAApD,EAAAqD,cAACkV,EAAA,EAAD,CAAOC,OAAK,EAAC5N,KAAK,WAAWE,KAAK,MAAM2N,OAAQ,SAAApZ,GAAK,OAAK+D,EAAApD,EAAAqD,cAAC2H,GAADzL,OAAAsV,OAAA,GAAgBxV,EAAhB,CAAuBuC,IAAK6E,EAAKlF,MAAMK,UACjGwB,EAAApD,EAAAqD,cAACkV,EAAA,EAAD,CAAOC,OAAK,EAAC5N,KAAK,kBAAkBE,KAAK,aAAa2N,OAAQ,SAAApZ,GAAK,OAAK+D,EAAApD,EAAAqD,cAACwV,GAADtZ,OAAAsV,OAAA,GAAiBxV,EAAjB,CAAwBuC,IAAK6E,EAAKlF,MAAMK,WAsBpHwB,EAAApD,EAAAqD,cAACyV,GAAD,CAAQ9K,OAAK,aAhJL3J,IAAMC,WCzB9ByU,GAASC,GAsTE7N,eApTX,SAAAA,EAAY9L,GAAO,IAAAC,EAAA,OAAAC,OAAAC,EAAA,EAAAD,CAAAE,KAAA0L,IACf7L,EAAAC,OAAAG,EAAA,EAAAH,CAAAE,KAAAF,OAAAI,EAAA,EAAAJ,CAAA4L,GAAAvL,KAAAH,KAAMJ,KACDkC,MAAQ,CACTkK,QAAQ,EACRC,YAAY,EACZC,YAAY,EACZC,gBAAgB,EAChBC,qBAAqB,EACrBnP,MAAO,UACPoP,YAAa,cACbC,WAAYgN,GAAO,+BAEvBzZ,EAAK2M,OAAS3M,EAAK2M,OAAOC,KAAZ3M,OAAA4M,EAAA,EAAA5M,QAAA4M,EAAA,EAAA5M,CAAAD,KACdA,EAAK8M,aAAe9M,EAAK8M,aAAaF,KAAlB3M,OAAA4M,EAAA,EAAA5M,QAAA4M,EAAA,EAAA5M,CAAAD,KACpBA,EAAK+M,iBAAmB/M,EAAK+M,iBAAiBH,KAAtB3M,OAAA4M,EAAA,EAAA5M,QAAA4M,EAAA,EAAA5M,CAAAD,KACxBA,EAAKgN,sBAAwBhN,EAAKgN,sBAAsBJ,KAA3B3M,OAAA4M,EAAA,EAAA5M,QAAA4M,EAAA,EAAA5M,CAAAD,KAC7BA,EAAKiN,aAAejN,EAAKiN,aAAaL,KAAlB3M,OAAA4M,EAAA,EAAA5M,QAAA4M,EAAA,EAAA5M,CAAAD,KAhBLA,wEAsBZG,KAAK8B,MAAMkK,OACVhM,KAAKwB,SAAS,CACVvE,MAAO,YAGX+C,KAAKwB,SAAS,CACVvE,MAAO,UAGf+C,KAAKwB,SAAS,CACVwK,QAAShM,KAAK8B,MAAMkK,8CAGftE,GACT1H,KAAKwB,SAAS,CACVyK,YAAajM,KAAK8B,MAAMmK,oDAK5BjM,KAAKwB,SAAS,CACV0K,YAAalM,KAAK8B,MAAMoK,sDAKfxE,GACb1H,KAAKwB,SAAS,CACV2K,gBAAiBnM,KAAK8B,MAAMqK,+DAGdzE,GAClB1H,KAAKwB,SAAS,CACV4K,qBAAsBpM,KAAK8B,MAAMsK,yDAG/B,IACFf,EADErE,EAAAhH,KAuBN,OArBA+M,GAAgBC,IAAI,SAACC,EAAKC,GAmBtB,OAlBGD,EAAKE,SACHF,EAAKG,MAAMJ,IAAI,SAACC,EAAKC,GAIlB,OAHGD,EAAK9B,OAASnE,EAAKpH,MAAMuD,SAASkK,WACjChC,EAAO4B,EAAK5B,MAET,QAGR4B,EAAKzB,SACDyB,EAAK9B,OAASnE,EAAKpH,MAAMuD,SAASkK,WACjChC,EAAO4B,EAAK5B,OAQjB,OAEJA,wCAGPpG,SAASqI,gBAAgBC,UAAUf,OAAO,cAC1CxM,KAAKwN,KAAKC,cAAcF,UAAUf,OAAO,WAGtCtJ,OAAOwK,WAAa,KACnBzI,SAASqI,gBAAgBC,UAAUI,OAAO,sDAK9C1I,SAASqI,gBAAgBC,UAAUf,OAAO,mBAIvCtJ,OAAOwK,WAAa,MACnBzI,SAASqI,gBAAgBC,UAAUI,OAAO,cAC1C3N,KAAKwN,KAAKC,cAAcF,UAAUI,OAAO,kDAI7C1I,SAASqI,gBAAgBC,UAAUf,OAAO,mDAK1CvH,SAASqI,gBAAgBC,UAAUf,OAAO,0DAWvCtJ,OAAOwK,WAAa,KAAO1N,KAAK8B,MAAMkK,OACrChM,KAAKwB,SAAS,CACVvE,MAAO,wDAUW,SAAvB+C,KAAKJ,MAAMgO,SACV3I,SAASqI,gBAAgBC,UAAUM,IAAI,cACvC7N,KAAKwN,KAAKC,cAAcF,UAAUM,IAAI,aAEtC5I,SAASqI,gBAAgBC,UAAUI,OAAO,cAC1C3N,KAAKwN,KAAKC,cAAcF,UAAUI,OAAO,YAE7CzK,OAAO4K,iBAAiB,SAAU9N,KAAK+N,YAAYtB,KAAKzM,OAExB,YAAzBA,KAAKJ,MAAMoO,WACVhO,KAAKwB,SAAS,CACV8K,WAAYgN,GAAO,GACnBjN,YAAa,gDAoDV3E,GACZxE,OAAOwK,WAAa,KAAOhG,EAAEuG,QAAQ9K,SAASkK,WAAa3F,EAAEvE,SAASkK,WAA0E,IAA9DpI,SAASqI,gBAAgBzJ,UAAUqK,QAAQ,gBAC5HjJ,SAASqI,gBAAgBC,UAAUf,OAAO,cAC1CxM,KAAKwN,KAAKC,cAAcF,UAAUf,OAAO,YAE1CtJ,OAAOwK,WAAa,KAAOhG,EAAEuG,QAAQ9K,SAASkK,WAAa3F,EAAEvE,SAASkK,WAA+E,IAAnEpI,SAASqI,gBAAgBzJ,UAAUqK,QAAQ,oBAC5HjJ,SAASqI,gBAAgBC,UAAUf,OAAO,oDAiB1C,IAAA2B,EAAAnO,KACJ,OAEI2D,EAAApD,EAAAqD,cAACwK,EAAA,EAAD,CAAQC,OAAO,KACXxK,WACkE,IAA9D7D,KAAKJ,MAAMuD,SAASkK,SAASa,QAAQ,oBACrC,4BAA4B,8BAChCvK,EAAApD,EAAAqD,cAAC0K,EAAA,EAAD,CAAWC,OAAK,GACZ5K,EAAApD,EAAAqD,cAAA,OAAKC,UAAU,kBACXF,EAAApD,EAAAqD,cAAA,OAAKC,UAAU,iBACXF,EAAApD,EAAAqD,cAAA,UAAQuD,KAAK,SAASzH,IAAI,gBAAgBmE,UAAU,iBAAiB4D,QAAS,kBAAM0G,EAAKK,gBACrF7K,EAAApD,EAAAqD,cAAA,KAAGC,UAAU,aAoCrBF,EAAApD,EAAAqD,cAAC8K,EAAA,EAAD,CAAatL,KAAK,KAAKpD,KAAK2O,aAMhChL,EAAApD,EAAAqD,cAACgL,EAAA,EAAD,CAAU5C,OAAQhM,KAAK8B,MAAMkK,OAAQ6C,QAAM,EAAChL,UAAU,gBA4BlDF,EAAApD,EAAAqD,cAAA,OAAKC,UAAU,aAAa4D,QAAS,kBAAM0G,EAAK0B,2BA7SnDjL,IAAMC,W9BKvBsL,GAAc,SAEdmJ,GAASC,GAqMEnJ,eAlMX,SAAAA,EAAYxQ,GAAM,IAAAC,EAAA,OAAAC,OAAAC,EAAA,EAAAD,CAAAE,KAAAoQ,IACdvQ,EAAAC,OAAAG,EAAA,EAAAH,CAAAE,KAAAF,OAAAI,EAAA,EAAAJ,CAAAsQ,GAAAjQ,KAAAH,KAAMJ,KACDyQ,YAAY5D,KAAjB3M,OAAA4M,EAAA,EAAA5M,QAAA4M,EAAA,EAAA5M,CAAAD,KACAA,EAAKiC,MAAQ,CACXwO,OAAQ,GACRC,SAAU,OACVlE,YAAa,cACbC,WAAYgN,GAAO,8BACnB9I,gBAAiB,iBAEnB3Q,EAAK4Q,aAAe5Q,EAAK4Q,aAAahE,KAAlB3M,OAAA4M,EAAA,EAAA5M,QAAA4M,EAAA,EAAA5M,CAAAD,KACpBA,EAAK6Q,cAAgB7Q,EAAK6Q,cAAcjE,KAAnB3M,OAAA4M,EAAA,EAAA5M,QAAA4M,EAAA,EAAA5M,CAAAD,KAXPA,6EAgBJsQ,GAEc,KAAtBnQ,KAAK8B,MAAMwO,QACI,wCAIRK,GACTR,GAAc,GACXnQ,KAAK8B,MAAMwO,SAAWK,EACrB3Q,KAAKwB,SAAS,CACV8O,OAAQ,KAGZtQ,KAAKwB,SAAS,CACV8O,OAAQK,wCASRC,GACR,OAAO5Q,KAAKJ,MAAMuD,SAASkK,SAASa,QAAQ0C,IAAc,EAAI,UAAY,+CAI9C,YAAzB5Q,KAAKJ,MAAMoO,WACVhO,KAAKwB,SAAS,CACVgP,gBAAiB,GACjBlE,WAAYgN,GAAO,GACnBjN,YAAa,KAKlBwE,UAAUC,SAAS5C,QAAQ,QAAU,IACpC9I,GAAK,IAAI2L,KAAiB/Q,KAAKwN,KAAKwD,QAAQ,CAACC,iBAAiB,EAAMC,iBAAiB,oDAQtFL,UAAUC,SAAS5C,QAAQ,QAAU,GACpC9I,GAAG+L,2CAGH,IAAAnK,EAAAhH,KAkCJ,OACI2D,EAAApD,EAAAqD,cAAA,OAAKC,UAAU,kBAAkBuN,aAAW,QAAQjN,MAAO,CAACC,OAAO,UAE/DT,EAAApD,EAAAqD,cAAA,OAAKC,UAAU,SAafF,EAAApD,EAAAqD,cAAA,OAAKC,UAAU,kBAAkBnE,IAAI,WACrCiE,EAAApD,EAAAqD,cAAA,OAAKC,UAAU,oBACXF,EAAApD,EAAAqD,cAAA,OAAKC,UAAU,uBAEPF,EAAApD,EAAAqD,cAAA,OAAK0L,IAAI,GAAGF,IAAKpP,KAAK8B,MAAMwK,WAAYzI,UAAU,4BAG1DF,EAAApD,EAAAqD,cAAA,OAAKC,UAAU,yBACXF,EAAApD,EAAAqD,cAAA,UACID,EAAApD,EAAAqD,cAAA,KAAGO,MAAO,CAAClH,MAAM,OAAOsU,SAAS,OAAQhN,UAAU,SAAnD,eACAZ,EAAApD,EAAAqD,cAAA,QAAMC,UAAU,2BAEpBF,EAAApD,EAAAqD,cAAA,KAAGC,UAAU,oBAUjBF,EAAApD,EAAAqD,cAACmL,EAAA,EAAD,CAAKlL,UAAU,cAEP7D,KAAKJ,MAAM4R,OAAOxE,IAAI,SAACC,EAAKC,GACxB,OAAGD,EAAKzB,SACG,KACM,UAAdyB,EAAK9F,KACG,KACM,aAAd8F,EAAK9F,KAEFxD,EAAApD,EAAAqD,cAAC6N,GAAD,CAAcpG,KAAM4B,EAAK5B,KAAM6B,IAAKA,IAGzB,aAAdD,EAAK9F,KAGAxD,EAAApD,EAAAqD,cAAA,MAAIC,UAAYoJ,EAAKyE,SAAY,KAAYzE,EAAKyE,WAAavB,IAAmC,KAAlBlD,EAAKyE,UAAuC,iBAAlBzE,EAAKyE,UAAmC1K,EAAKlF,MAAMwO,SAAWrD,EAAK5B,KAAS,SAAU,IAAM,eAAgBsG,cAAY,WAAWzE,IAAKA,GAC9OvJ,EAAApD,EAAAqD,cAAA,KAAGgO,GAAI3E,EAAK9B,KAAMtH,UAAU,WAAW4D,QAAS,kBAAMT,EAAKyJ,aAAaxD,EAAK5B,OAAOjI,KAAK,MAC7EO,EAAApD,EAAAqD,cAAA,KAAGC,UAAW,KAAKoJ,EAAK9G,OACxBxC,EAAApD,EAAAqD,cAAA,SAAIqJ,EAAK5B,MACT1H,EAAApD,EAAAqD,cAAA,QAAMC,UAAU,SAASoJ,EAAK4E,OAC9BlO,EAAApD,EAAAqD,cAAA,QAAMC,UAAW,wBA1FhD,SAACzB,EAAO0P,GACrB,IAAIC,EAAQ,GACZ,GAAI3P,EAAO,CACP,IAAK,IAAI4P,EAAI,EAAGA,EAAI5P,EAAMqB,OAAQuO,IAC9BD,EAAME,KACFtO,EAAApD,EAAAqD,cAAA,MAAIsJ,IAAK8E,GACLrO,EAAApD,EAAAqD,cAACsO,GAAA,EAAD,CAASN,GAAIxP,EAAM4P,GAAG7G,KAAMtH,UAAU,WAAWsO,gBAAgB,UAC7DxO,EAAApD,EAAAqD,cAAA,YAAOxB,EAAM4P,GAAG3G,SAKzBrE,EAAKpH,MAAMuD,SAASkK,WAAajL,EAAM4P,GAAG7G,MAEtB,WAAhBgF,IAAkD,KAAtBnJ,EAAKlF,MAAMwO,SACtCH,GAAc2B,GAGc,MAAjC9K,EAAKpH,MAAMuD,SAASkK,WACnB8C,GAAc,cAOtB,OAAOxM,EAAApD,EAAAqD,cAACmL,EAAA,EAAD,KAAMgD,IAkEiBK,CAASnF,EAAK7K,MAAO6K,EAAKyE,WAKvB,oBAAdzE,EAAK9F,KAEFxD,EAAApD,EAAAqD,cAACyO,GAAD,CAAiBhH,KAAM4B,EAAK5B,KAAMlF,KAAM8G,EAAK9G,KAAMgF,KAAM8B,EAAK9B,KAAM0G,MAAO5E,EAAK4E,MAAOzP,MAAO6K,EAAK7K,MAAO8K,IAAKA,EAAKoF,UAAWtL,EAAKlF,MAAMwO,SAAWrD,EAAK5B,KAAO,aAAc,GAAK5D,QAAS,kBAAMT,EAAKyJ,aAAaxD,EAAK5B,SAI5N1H,EAAApD,EAAAqD,cAAA,MAAIC,UAAWmD,EAAKqJ,YAAYpD,EAAK9B,MAAQ,eAAgB+B,IAAKA,EAAKzF,QAAS,kBAAMT,EAAKyJ,aAAaxD,EAAK5B,QACzG1H,EAAApD,EAAAqD,cAACsO,GAAA,EAAD,CAASN,GAAI3E,EAAK9B,KAAMtH,UAAU,WAAWsO,gBAAgB,UACzDxO,EAAApD,EAAAqD,cAAA,KAAGC,UAAW,KAAKoJ,EAAK9G,OACxBxC,EAAApD,EAAAqD,cAAA,SAAIqJ,EAAK5B,MACT1H,EAAApD,EAAAqD,cAAA,QAAMC,UAAU,SAASoJ,EAAK4E,qBAjLpDjN,IAAMC,W+BLtBpF,GAAWV,EAASU,WAAWC,IAAI,SAwL1B8Z,eApLX,SAAAA,EAAY5Z,GAAO,IAAAC,EAAA,OAAAC,OAAAC,EAAA,EAAAD,CAAAE,KAAAwZ,IACnB3Z,EAAAC,OAAAG,EAAA,EAAAH,CAAAE,KAAAF,OAAAI,EAAA,EAAAJ,CAAA0Z,GAAArZ,KAAAH,KAAMJ,KA+BR6Z,eAAiB,WAEf,IAAIC,EAAQ7Z,EAAKiC,MAAM4X,MACnBC,EAAW9Z,EAAKiC,MAAM6X,SACtBtO,EAAOxL,EAAKiC,MAAMuJ,KAGtBvM,EAAYkD,OAAO4X,+BAA+BF,EAAMC,GACrD9S,KAAK,WAEF,IAAI3E,EAAOpD,EAAYkD,OAAO6X,YAE1B1X,EAAMD,EAAKC,IAEMD,EAAK4X,cAkCxB5W,OAAOC,SAASC,KAAM,mBA7BtBlB,EAAK6X,wBAAwBlT,KAAK,WAGhCZ,IAAK,CACHC,QAASpB,EAAe,qEACxBqB,KAAM,SAGR1G,GACG2C,MAAMD,GACN0H,IAAI,CAACmQ,KAAK3O,EAAM4O,MAAMP,EAAO5R,aAAa,EAAOlB,cAAa,EAAOnE,QAAQ,EAAGE,eAAe,EAAGE,iBAAiB,EAAGE,SAAS,SAC/H8D,KAAK,WACJpH,GACG2C,MAAMD,EAAM,iBACZoE,OAAO,CAAC+C,MAAM,MAGlBxC,MAAM,SAAAC,GACL/D,QAAQC,IAAI8D,OAIfD,MAAM,SAASC,GAEhB/D,QAAQC,IAAI8D,KAQhBlH,EAAK2B,SAAS,CAACkY,MAAM,GAAIrO,KAAK,GAAIsO,SAAS,OAG9C7S,MAAM,SAAAC,GACL/D,QAAQC,IAAI8D,MApFhBlH,EAAKqa,eAAiBra,EAAKqa,eAAezN,KAApB3M,OAAA4M,EAAA,EAAA5M,QAAA4M,EAAA,EAAA5M,CAAAD,KACtBA,EAAKsa,YAActa,EAAKsa,YAAY1N,KAAjB3M,OAAA4M,EAAA,EAAA5M,QAAA4M,EAAA,EAAA5M,CAAAD,KACnBA,EAAK4Z,eAAiB5Z,EAAK4Z,eAAehN,KAApB3M,OAAA4M,EAAA,EAAA5M,QAAA4M,EAAA,EAAA5M,CAAAD,KAEtBA,EAAKiC,MAAQ,CACXsY,cAAc,EACdC,iBAAiB,EACjBhP,KAAK,GACLqO,MAAM,GACNC,SAAS,IAZQ9Z,gFAoBnBG,KAAKwB,SAAS,CACZ4Y,cAAepa,KAAK8B,MAAMsY,qDAK5Bpa,KAAKwB,SAAS,CACZ6Y,iBAAkBra,KAAK8B,MAAMuY,mDAiEvB,IAAArT,EAAAhH,KAEJ,OACI2D,EAAApD,EAAAqD,cAAA,WACID,EAAApD,EAAAqD,cAAA,OAAKC,UAAU,WACXF,EAAApD,EAAAqD,cAACE,EAAA,EAAD,KACIH,EAAApD,EAAAqD,cAACG,EAAA,EAAD,CAAKC,GAAI,GAAIC,GAAI,IAErBN,EAAApD,EAAAqD,cAAA,OAAKC,UAAU,cACXF,EAAApD,EAAAqD,cAAA,OAAKC,UAAU,cACXF,EAAApD,EAAAqD,cAAA,MAAIC,UAAU,SAAd,mBAMRF,EAAApD,EAAAqD,cAAA,OAAKC,UAAU,UACXF,EAAApD,EAAAqD,cAAA,WAASC,UAAU,QACfF,EAAApD,EAAAqD,cAAA,UAAQC,UAAU,gBACdF,EAAApD,EAAAqD,cAAA,MAAIC,UAAU,oBAAd,aAGJF,EAAApD,EAAAqD,cAAA,OAAKC,UAAU,gBACXF,EAAApD,EAAAqD,cAAA,OAAKC,UAAU,OACXF,EAAApD,EAAAqD,cAAA,OAAKC,UAAU,4BAKnDF,EAAApD,EAAAqD,cAAC0W,GAAA,EAAD,KACQ3W,EAAApD,EAAAqD,cAACwS,GAAA,EAAD,CAAWmE,KAAG,GACZ5W,EAAApD,EAAAqD,cAACyS,GAAA,EAAD,CAAOnP,QAAQ,cAAcsT,GAAI,IAAjC,QACA7W,EAAApD,EAAAqD,cAACG,EAAA,EAAD,CAAKyW,GAAI,IACP7W,EAAApD,EAAAqD,cAACqS,GAAA,EAAD,CAAO9O,KAAK,OAAOkE,KAAK,OAAOjE,GAAG,cAAcC,YAAY,GAC1DC,MAAOtH,KAAK8B,MAAMuJ,KAClB9D,SAAU,SAAA3B,GAAK,OAAIoB,EAAKxF,SAAS,CAAC6J,KAAKzF,EAAME,OAAOwB,aAI1D3D,EAAApD,EAAAqD,cAACwS,GAAA,EAAD,CAAWmE,KAAG,GACZ5W,EAAApD,EAAAqD,cAACyS,GAAA,EAAD,CAAOnP,QAAQ,eAAesT,GAAI,IAAlC,SACA7W,EAAApD,EAAAqD,cAACG,EAAA,EAAD,CAAKyW,GAAI,IACP7W,EAAApD,EAAAqD,cAACqS,GAAA,EAAD,CAAO9O,KAAK,QAAQkE,KAAK,QAAQjE,GAAG,eAAeC,YAAY,GAC7DC,MAAOtH,KAAK8B,MAAM4X,MAClBnS,SAAU,SAAA3B,GAAK,OAAIoB,EAAKxF,SAAS,CAACkY,MAAM9T,EAAME,OAAOwB,aAI3D3D,EAAApD,EAAAqD,cAACwS,GAAA,EAAD,CAAWmE,KAAG,GACZ5W,EAAApD,EAAAqD,cAACyS,GAAA,EAAD,CAAOnP,QAAQ,kBAAkBsT,GAAI,IAArC,YACA7W,EAAApD,EAAAqD,cAACG,EAAA,EAAD,CAAKyW,GAAI,IACP7W,EAAApD,EAAAqD,cAACqS,GAAA,EAAD,CAAO9O,KAAK,WAAWkE,KAAK,WAAWjE,GAAG,kBAAkBC,YAAY,GACtEC,MAAOtH,KAAK8B,MAAM6X,SAClBpS,SAAU,SAAA3B,GAAK,OAAIoB,EAAKxF,SAAS,CAACmY,SAAS/T,EAAME,OAAOwB,cAMhE3D,EAAApD,EAAAqD,cAACM,EAAA,EAAD,CAAQuD,QAAS,SAAC7B,GAAD,OAAWoB,EAAKyS,eAAe7T,IAAQ3I,MAAM,UAAUkH,MAAO,CAACG,MAAM,UAAtF,4BAzJiBM,IAAMC,WCyPd2U,eAxPX,SAAAA,EAAY5Z,GAAO,IAAAC,EAAA,OAAAC,OAAAC,EAAA,EAAAD,CAAAE,KAAAwZ,IACnB3Z,EAAAC,OAAAG,EAAA,EAAAH,CAAAE,KAAAF,OAAAI,EAAA,EAAAJ,CAAA0Z,GAAArZ,KAAAH,KAAMJ,KAiCR6a,YAAc,SAAC7U,GACbA,EAAM8U,iBAEN,IAAIhB,EAAQ7Z,EAAKiC,MAAM4X,MACnBC,EAAW9Z,EAAKiC,MAAM6X,SAE1B7a,EAAYkD,OAAO2Y,2BAA2BjB,EAAMC,GAC/C9S,KAAK,WAEO/H,EAAYkD,OAAO6X,YAELC,cAGvB5W,OAAOC,SAASC,KAAK,gBAMrB6C,IAAK,CACHC,QAASpB,EAAe,iCACxBqB,KAAM,UAKRtG,EAAK2B,SAAS,CAACkY,MAAM,GAAGC,SAAS,OAEpC7S,MAAM,SAAAC,GACH,IAAI8E,EAAe9E,EAAM+E,QACzBC,MAAMF,MA9DdhM,EAAKqa,eAAiBra,EAAKqa,eAAezN,KAApB3M,OAAA4M,EAAA,EAAA5M,QAAA4M,EAAA,EAAA5M,CAAAD,KACtBA,EAAKsa,YAActa,EAAKsa,YAAY1N,KAAjB3M,OAAA4M,EAAA,EAAA5M,QAAA4M,EAAA,EAAA5M,CAAAD,KACnBA,EAAKiC,MAAQ,CACXsY,cAAc,EACdC,iBAAiB,EACjBX,MAAM,GACNC,SAAS,IATQ9Z,gFAsBnBG,KAAKwB,SAAS,CACZ4Y,cAAepa,KAAK8B,MAAMsY,qDAK5Bpa,KAAKwB,SAAS,CACZ6Y,iBAAkBra,KAAK8B,MAAMuY,mDAyCvB,IAAArT,EAAAhH,KAEJ,OACI2D,EAAApD,EAAAqD,cAAA,WACID,EAAApD,EAAAqD,cAAA,OAAKC,UAAU,WACXF,EAAApD,EAAAqD,cAACE,EAAA,EAAD,KACIH,EAAApD,EAAAqD,cAACG,EAAA,EAAD,CAAKC,GAAI,GAAIC,GAAI,IAErBN,EAAApD,EAAAqD,cAAA,OAAKC,UAAU,cACXF,EAAApD,EAAAqD,cAAA,OAAKC,UAAU,cACXF,EAAApD,EAAAqD,cAAA,MAAIC,UAAU,SAAd,gBAMRF,EAAApD,EAAAqD,cAAA,OAAKC,UAAU,UACXF,EAAApD,EAAAqD,cAAA,WAASC,UAAU,QACfF,EAAApD,EAAAqD,cAAA,UAAQC,UAAU,gBACdF,EAAApD,EAAAqD,cAAA,MAAIC,UAAU,oBAAd,UAGJF,EAAApD,EAAAqD,cAAA,OAAKC,UAAU,gBACXF,EAAApD,EAAAqD,cAAA,OAAKC,UAAU,OACXF,EAAApD,EAAAqD,cAAA,OAAKC,UAAU,4BAKnDF,EAAApD,EAAAqD,cAAC0W,GAAA,EAAD,KACQ3W,EAAApD,EAAAqD,cAACwS,GAAA,EAAD,CAAWmE,KAAG,GACZ5W,EAAApD,EAAAqD,cAACyS,GAAA,EAAD,CAAOnP,QAAQ,eAAesT,GAAI,IAAlC,SACA7W,EAAApD,EAAAqD,cAACG,EAAA,EAAD,CAAKyW,GAAI,IACP7W,EAAApD,EAAAqD,cAACqS,GAAA,EAAD,CAAO9O,KAAK,QAAQkE,KAAK,QAAQjE,GAAG,eAAeC,YAAY,GAC7DC,MAAOtH,KAAK8B,MAAM4X,MAClBnS,SAAU,SAAA3B,GAAK,OAAIoB,EAAKxF,SAAS,CAACkY,MAAM9T,EAAME,OAAOwB,aAI3D3D,EAAApD,EAAAqD,cAACwS,GAAA,EAAD,CAAWmE,KAAG,GACZ5W,EAAApD,EAAAqD,cAACyS,GAAA,EAAD,CAAOnP,QAAQ,kBAAkBsT,GAAI,IAArC,YACA7W,EAAApD,EAAAqD,cAACG,EAAA,EAAD,CAAKyW,GAAI,IACP7W,EAAApD,EAAAqD,cAACqS,GAAA,EAAD,CAAO9O,KAAK,WAAWkE,KAAK,WAAWjE,GAAG,kBAAkBC,YAAY,GACtEC,MAAOtH,KAAK8B,MAAM6X,SAClBpS,SAAU,SAAA3B,GAAK,OAAIoB,EAAKxF,SAAS,CAACmY,SAAS/T,EAAME,OAAOwB,cAwGhE3D,EAAApD,EAAAqD,cAACM,EAAA,EAAD,CAAQuD,QAAS,SAAC7B,GAAD,OAAWoB,EAAKyT,YAAY7U,IAAQ3I,MAAM,UAAUkH,MAAO,CAACG,MAAM,UAAnF,yBA5NiBM,IAAMC,WCdR+V,oLAEb,OACIjX,EAAApD,EAAAqD,cAAA,WACID,EAAApD,EAAAqD,cAAA,MAAIO,MAAO,CAAC8C,UAAU,SAAU1C,UAAU,UAA1C,6BAJkBM,aCmBnBgW,GAZG,CAGd,CAAE1P,KAAM,YAAaE,KAAM,WAAYlF,KAAK,OAAQmF,UAAWwP,IAC/D,CAAE3P,KAAM,SAAUE,KAAM,QAASlF,KAAK,MAAOmF,UAAWyP,IACxD,CAAE5P,KAAM,UAAWE,KAAM,SAASlF,KAAK,QAASmF,UAAWP,IAC3D,CAACI,KAAM,QAASE,KAAK,WAAYlF,KAAK,iBAAkBmF,UAAU0P,IAClE,CAACxP,UAAU,EAAML,KAAK,IAAKM,OAAO,QAASJ,KAAK,SCE9C4C,GAAUsJ,cCMDsD,GAhBG,CAGd,CAAE1P,KAAMC,QAAaC,KAAM,YAAaC,UAAWkM,IAEnD,CAAErM,KAAM,IAAKE,KAAM,YAAaC,sBDOhC,SAAAkM,EAAY5X,GAAO,IAAAC,EAAA,OAAAC,OAAAC,EAAA,EAAAD,CAAAE,KAAAwX,IACf3X,EAAAC,OAAAG,EAAA,EAAAH,CAAAE,KAAAF,OAAAI,EAAA,EAAAJ,CAAA0X,GAAArX,KAAAH,KAAMJ,KAkCVgQ,WAAa,WACT/P,EAAK2B,SAAS,CAACC,QAAQ,MAlCvB5B,EAAKiC,MAAQ,CACTuD,UAAWqR,GACXlR,YAAamR,GACbrR,SAAUA,GACVC,WAAYA,IAKhB1F,EAAKmY,aAAenY,EAAKmY,aAAavL,KAAlB3M,OAAA4M,EAAA,EAAA5M,QAAA4M,EAAA,EAAA5M,CAAAD,KACpBA,EAAKoY,eAAiBpY,EAAKoY,eAAexL,KAApB3M,OAAA4M,EAAA,EAAA5M,QAAA4M,EAAA,EAAA5M,CAAAD,KAZPA,4EAuCNqY,EAAKC,GACdnY,KAAKwB,SAAS,CACZ6D,UAAW6S,EACX5S,SAAU6S,2CAGDD,EAAKC,GAChBnY,KAAKwB,SAAS,CACZgE,YAAa0S,EACb3S,WAAY4S,+FAKCzQ,GACO,SAArBA,EAAEuG,QAAQmK,SACXpY,KAAKwN,KAAK6K,UAAUC,UAAY,EAChCrT,SAASsT,iBAAiBD,UAAY,oCAItC,OACI3U,EAAApD,EAAAqD,cAAA,OAAKC,UAAU,UAAUnE,IAAI,eAAe8Y,YAAWxY,KAAK8B,MAAMuD,UAAWoT,cAAazY,KAAK8B,MAAM0D,YAAakT,gBAAe1Y,KAAK8B,MAAMwD,SAAUqT,kBAAiB3Y,KAAK8B,MAAMyD,YAE9K5B,EAAApD,EAAAqD,cAACqX,GAADnb,OAAAsV,OAAA,GAAYpV,KAAKJ,MAAjB,CAAwBgO,QZnDvB,UYmD0CI,UAAW,aACtDrK,EAAApD,EAAAqD,cAACsX,GAADpb,OAAAsV,OAAA,GAAapV,KAAKJ,MAAlB,CAAyB4R,OAAQ2J,GAAcnN,UAAW,aAC1DrK,EAAApD,EAAAqD,cAAA,OAAKC,UAAU,aAAanE,IAAI,aAC5BiE,EAAApD,EAAAqD,cAACkV,EAAA,EAAD,CAAQ7K,QAASA,IAETkN,GAAanO,IAAI,SAACC,EAAKC,GACnB,OAAGD,EAAKE,SACGF,EAAKG,MAAMJ,IAAI,SAACoO,EAAMC,GACzB,OACI1X,EAAApD,EAAAqD,cAACkV,EAAA,EAAD,CAAO3N,KAAMiQ,EAAMjQ,KAAMG,UAAW8P,EAAM9P,UAAW4B,IAAKmO,MAInEpO,EAAKzB,SAEA7H,EAAApD,EAAAqD,cAACkV,EAAA,EAAD,CAAU1Q,KAAM6E,EAAK9B,KAAMyG,GAAI3E,EAAKxB,OAAQyB,IAAKA,IAGrDvJ,EAAApD,EAAAqD,cAACkV,EAAA,EAAD,CAAO3N,KAAM8B,EAAK9B,KAAMG,UAAW2B,EAAK3B,UAAW4B,IAAKA,OAKxEvJ,EAAApD,EAAAqD,cAACyV,GAAD,CAAQ9K,OAAK,aAvFL3J,IAAMC,YCJ9B,CAAEsG,KAAMC,QAAeC,KAAM,OAAQC,UAAWkM,KCC9C8D,GAAO/D,cAEbgE,IAASvC,OAELrV,EAAApD,EAAAqD,cAACkV,EAAA,EAAD,CAAQ7K,QAASqN,GAAME,SAAUjC,kBAC7B5V,EAAApD,EAAAqD,cAACkV,EAAA,EAAD,KAEQ+B,GAAY7N,IAAI,SAACC,EAAKC,GAElB,OACIvJ,EAAApD,EAAAqD,cAACkV,EAAA,EAAD,CACI3N,KAAM8B,EAAK9B,KACX+B,IAAKA,EACL5B,UAAW2B,EAAK3B,gBAO1CrG,SAASwW,eAAe","file":"static/js/main.a5c92ba1.chunk.js","sourcesContent":["// ##############################\r\n// // // Function that converts a hex color number to a RGB color number\r\n// #############################\r\n/*function hexToRGB(hex, alpha) {\r\n    var r = parseInt(hex.slice(1, 3), 16),\r\n    g = parseInt(hex.slice(3, 5), 16),\r\n    b = parseInt(hex.slice(5, 7), 16);\r\n\r\n    if (alpha) {\r\n        return \"rgba(\" + r + \", \" + g + \", \" + b + \", \" + alpha + \")\";\r\n    } else {\r\n        return \"rgb(\" + r + \", \" + g + \", \" + b + \")\";\r\n    }\r\n}*/\r\n\r\n// ##############################\r\n// // // general variables for charts\r\n// #############################\r\nconst primaryColor = \"#26a69a\";\r\nconst accentColor = \"#ff8a65\";\r\nconst purpleColor = \"#7f8ff4\";\r\n//const chartColor = \"#FFFFFF\";\r\n\r\n// ##############################\r\n// // // Dashboard view - Bar Chart - Card\r\n// #############################\r\n\r\nconst playlistCharts = {\r\n    data: (canvas) => {\r\n        var ctx = canvas.getContext(\"2d\");\r\n        var gradientFill = ctx.createLinearGradient(0, 170, 0, 50);\r\n        gradientFill.addColorStop(0, primaryColor);\r\n        gradientFill.addColorStop(1, primaryColor);\r\n        return {\r\n            labels :[\r\n                \"Jan\",\"Feb\",\"Mar\",\"Apr\",\"May\",\"Jun\",\"Jul\",\"Aug\",\"Sep\",\"Oct\",\"Nov\",\"Dec\"\r\n            ],\r\n            datasets: [{\r\n                label: \"Progress\",\r\n                backgroundColor: gradientFill,\r\n                borderColor: primaryColor,\r\n                pointBorderColor: \"#FFF\",\r\n                pointBackgroundColor: primaryColor,\r\n                pointBorderWidth: 2,\r\n                pointHoverRadius: 4,\r\n                pointHoverBorderWidth: 1,\r\n                pointRadius: 4,\r\n                fill: true,\r\n                borderWidth: 1,\r\n                data: [50,139,66,176,123,155,80,45,68,80,143,155]\r\n            }]\r\n        }\r\n    },\r\n    options: {\r\n        maintainAspectRatio: false,\r\n        legend: {\r\n            display: false\r\n        },\r\n        tooltips: {\r\n            bodySpacing: 4,\r\n            mode:\"nearest\",\r\n            intersect: 0,\r\n            position:\"nearest\",\r\n            xPadding:10,\r\n            yPadding:10,\r\n            caretPadding:10\r\n        },\r\n        responsive: 1,\r\n        scales: {\r\n            yAxes: [{\r\n                display:0,\r\n                ticks: {\r\n                    display: false\r\n                },\r\n                gridLines: {\r\n                    color: \"rgba(0, 0, 0, 0.01)\",\r\n            zeroLineColor: \"transparent\",\r\n                    drawTicks: false,\r\n                    display: false,\r\n                    drawBorder: false\r\n                }\r\n            }],\r\n            xAxes: [{\r\n                categoryPercentage: 0.6,\r\n                barPercentage: 0.5,\r\n                maxBarThickness: 8,\r\n                display:0,\r\n                ticks: {\r\n                    display: false\r\n                },\r\n                gridLines: {\r\n                    color: \"rgba(0, 0, 0, 0.01)\",\r\n            zeroLineColor: \"transparent\",\r\n                    drawTicks: false,\r\n                    display: false,\r\n                    drawBorder: false\r\n                }\r\n            }]\r\n        },\r\n        layout:{\r\n            padding:{left:0,right:0,top:0,bottom:0}\r\n        }\r\n    },\r\n}\r\n\r\n\r\nconst playlistCharts3 = {\r\n    data: (canvas) => {\r\n        var ctx = canvas.getContext(\"2d\");\r\n        var gradientFill = ctx.createLinearGradient(0, 170, 0, 50);\r\n        gradientFill.addColorStop(0, primaryColor);\r\n        gradientFill.addColorStop(1, primaryColor);\r\n        return {\r\n            labels :[\r\n                \"Jan\",\"Feb\",\"Mar\",\"Apr\",\"May\",\"Jun\",\"Jul\",\"Aug\",\"Sep\",\"Oct\",\"Nov\",\"Dec\"\r\n            ],\r\n            datasets: [{\r\n                label: \"Progress\",\r\n                backgroundColor: gradientFill,\r\n                borderColor: primaryColor,\r\n                pointBorderColor: \"#FFF\",\r\n                pointBackgroundColor: primaryColor,\r\n                pointBorderWidth: 2,\r\n                pointHoverRadius: 4,\r\n                pointHoverBorderWidth: 1,\r\n                pointRadius: 4,\r\n                fill: true,\r\n                borderWidth: 1,\r\n                data: [50,39,166,76,123,55,80,145,68,80,143,55]\r\n            }]\r\n        }\r\n    },\r\n    options: {\r\n        maintainAspectRatio: false,\r\n        legend: {\r\n            display: false\r\n        },\r\n        tooltips: {\r\n            bodySpacing: 4,\r\n            mode:\"nearest\",\r\n            intersect: 0,\r\n            position:\"nearest\",\r\n            xPadding:10,\r\n            yPadding:10,\r\n            caretPadding:10\r\n        },\r\n        responsive: 1,\r\n        scales: {\r\n            yAxes: [{\r\n                display:0,\r\n                ticks: {\r\n                    display: false\r\n                },\r\n                gridLines: {\r\n                    color: \"rgba(0, 0, 0, 0.01)\",\r\n            zeroLineColor: \"transparent\",\r\n                    drawTicks: false,\r\n                    display: false,\r\n                    drawBorder: false\r\n                }\r\n            }],\r\n            xAxes: [{\r\n                categoryPercentage: 0.6,\r\n                barPercentage: 0.5,\r\n                maxBarThickness: 8,\r\n                display:0,\r\n                ticks: {\r\n                    display: false\r\n                },\r\n                gridLines: {\r\n                    color: \"rgba(0, 0, 0, 0.01)\",\r\n            zeroLineColor: \"transparent\",\r\n                    drawTicks: false,\r\n                    display: false,\r\n                    drawBorder: false\r\n                }\r\n            }]\r\n        },\r\n        layout:{\r\n            padding:{left:0,right:0,top:0,bottom:0}\r\n        }\r\n    },\r\n}\r\n\r\nconst playlistCharts4 = {\r\n    data: (canvas) => {\r\n        var ctx = canvas.getContext(\"2d\");\r\n        var gradientFill = ctx.createLinearGradient(0, 170, 0, 50);\r\n        gradientFill.addColorStop(0, primaryColor);\r\n        gradientFill.addColorStop(1, primaryColor);\r\n        return {\r\n            labels :[\r\n                \"Jan\",\"Feb\",\"Mar\",\"Apr\",\"May\",\"Jun\",\"Jul\",\"Aug\",\"Sep\",\"Oct\",\"Nov\",\"Dec\"\r\n            ],\r\n            datasets: [{\r\n                label: \"Progress\",\r\n                backgroundColor: gradientFill,\r\n                borderColor: primaryColor,\r\n                pointBorderColor: \"#FFF\",\r\n                pointBackgroundColor: primaryColor,\r\n                pointBorderWidth: 2,\r\n                pointHoverRadius: 4,\r\n                pointHoverBorderWidth: 1,\r\n                pointRadius: 4,\r\n                fill: true,\r\n                borderWidth: 1,\r\n                data: [50,39,166,76,23,155,80,45,168,80,143,55]\r\n            }]\r\n        }\r\n    },\r\n    options: {\r\n        maintainAspectRatio: false,\r\n        legend: {\r\n            display: false\r\n        },\r\n        tooltips: {\r\n            bodySpacing: 4,\r\n            mode:\"nearest\",\r\n            intersect: 0,\r\n            position:\"nearest\",\r\n            xPadding:10,\r\n            yPadding:10,\r\n            caretPadding:10\r\n        },\r\n        responsive: 1,\r\n        scales: {\r\n            yAxes: [{\r\n                display:0,\r\n                ticks: {\r\n                    display: false\r\n                },\r\n                gridLines: {\r\n                    color: \"rgba(0, 0, 0, 0.01)\",\r\n            zeroLineColor: \"transparent\",\r\n                    drawTicks: false,\r\n                    display: false,\r\n                    drawBorder: false\r\n                }\r\n            }],\r\n            xAxes: [{\r\n                categoryPercentage: 0.6,\r\n                barPercentage: 0.5,\r\n                maxBarThickness: 8,\r\n                display:0,\r\n                ticks: {\r\n                    display: false\r\n                },\r\n                gridLines: {\r\n                    color: \"rgba(0, 0, 0, 0.01)\",\r\n            zeroLineColor: \"transparent\",\r\n                    drawTicks: false,\r\n                    display: false,\r\n                    drawBorder: false\r\n                }\r\n            }]\r\n        },\r\n        layout:{\r\n            padding:{left:0,right:0,top:0,bottom:0}\r\n        }\r\n    },\r\n}\r\n\r\nconst playlistCharts5 = {\r\n    data: (canvas) => {\r\n        var ctx = canvas.getContext(\"2d\");\r\n        var gradientFill = ctx.createLinearGradient(0, 170, 0, 50);\r\n        gradientFill.addColorStop(0, primaryColor);\r\n        gradientFill.addColorStop(1, primaryColor);\r\n        return {\r\n            labels :[\r\n                \"Jan\",\"Feb\",\"Mar\",\"Apr\",\"May\",\"Jun\",\"Jul\",\"Aug\",\"Sep\",\"Oct\",\"Nov\",\"Dec\"\r\n            ],\r\n            datasets: [{\r\n                label: \"Progress\",\r\n                backgroundColor: gradientFill,\r\n                borderColor: primaryColor,\r\n                pointBorderColor: \"#FFF\",\r\n                pointBackgroundColor: primaryColor,\r\n                pointBorderWidth: 2,\r\n                pointHoverRadius: 4,\r\n                pointHoverBorderWidth: 1,\r\n                pointRadius: 4,\r\n                fill: true,\r\n                borderWidth: 1,\r\n                data: [50,139,66,76,123,55,80,145,68,80,43,155]\r\n            }]\r\n        }\r\n    },\r\n    options: {\r\n        maintainAspectRatio: false,\r\n        legend: {\r\n            display: false\r\n        },\r\n        tooltips: {\r\n            bodySpacing: 4,\r\n            mode:\"nearest\",\r\n            intersect: 0,\r\n            position:\"nearest\",\r\n            xPadding:10,\r\n            yPadding:10,\r\n            caretPadding:10\r\n        },\r\n        responsive: 1,\r\n        scales: {\r\n            yAxes: [{\r\n                display:0,\r\n                ticks: {\r\n                    display: false\r\n                },\r\n                gridLines: {\r\n                    color: \"rgba(0, 0, 0, 0.01)\",\r\n            zeroLineColor: \"transparent\",\r\n                    drawTicks: false,\r\n                    display: false,\r\n                    drawBorder: false\r\n                }\r\n            }],\r\n            xAxes: [{\r\n                categoryPercentage: 0.6,\r\n                barPercentage: 0.5,\r\n                maxBarThickness: 8,\r\n                display:0,\r\n                ticks: {\r\n                    display: false\r\n                },\r\n                gridLines: {\r\n                    color: \"rgba(0, 0, 0, 0.01)\",\r\n            zeroLineColor: \"transparent\",\r\n                    drawTicks: false,\r\n                    display: false,\r\n                    drawBorder: false\r\n                }\r\n            }]\r\n        },\r\n        layout:{\r\n            padding:{left:0,right:0,top:0,bottom:0}\r\n        }\r\n    },\r\n}\r\n\r\nconst playlistCharts1 = {\r\n    data: (canvas) => {\r\n        var ctx = canvas.getContext(\"2d\");\r\n        var gradientFill = ctx.createLinearGradient(0, 170, 0, 50);\r\n        gradientFill.addColorStop(0, primaryColor);\r\n        gradientFill.addColorStop(1, primaryColor);\r\n        return {\r\n            labels :[\r\n                \"Jan\",\"Feb\",\"Mar\",\"Apr\",\"May\",\"Jun\",\"Jul\",\"Aug\",\"Sep\",\"Oct\",\"Nov\",\"Dec\"\r\n            ],\r\n            datasets: [{\r\n                label: \"Progress\",\r\n                backgroundColor: gradientFill,\r\n                borderColor: primaryColor,\r\n                pointBorderColor: \"#FFF\",\r\n                pointBackgroundColor: primaryColor,\r\n                pointBorderWidth: 2,\r\n                pointHoverRadius: 4,\r\n                pointHoverBorderWidth: 1,\r\n                pointRadius: 4,\r\n                fill: true,\r\n                borderWidth: 1,\r\n                data: [150,339,266,176,233,525,820,452,684,830,423,535]\r\n            }]\r\n        }\r\n    },\r\n    options: {\r\n        maintainAspectRatio: false,\r\n        legend: {\r\n            display: false\r\n        },\r\n        tooltips: {\r\n            bodySpacing: 4,\r\n            mode:\"nearest\",\r\n            intersect: 0,\r\n            position:\"nearest\",\r\n            xPadding:10,\r\n            yPadding:10,\r\n            caretPadding:10\r\n        },\r\n        responsive: 1,\r\n        scales: {\r\n            yAxes: [{\r\n                display:0,\r\n                ticks: {\r\n                    display: false\r\n                },\r\n                gridLines: {\r\n                    color: \"rgba(0, 0, 0, 0.01)\",\r\n            zeroLineColor: \"transparent\",\r\n                    drawTicks: false,\r\n                    display: false,\r\n                    drawBorder: false\r\n                }\r\n            }],\r\n            xAxes: [{\r\n                categoryPercentage: 0.6,\r\n                barPercentage: 0.5,\r\n                maxBarThickness: 8,\r\n                display:0,\r\n                ticks: {\r\n                    display: false\r\n                },\r\n                gridLines: {\r\n                    color: \"rgba(0, 0, 0, 0.01)\",\r\n            zeroLineColor: \"transparent\",\r\n                    drawTicks: false,\r\n                    display: false,\r\n                    drawBorder: false\r\n                }\r\n            }]\r\n        },\r\n        layout:{\r\n            padding:{left:0,right:0,top:0,bottom:0}\r\n        }\r\n    },\r\n}\r\n\r\n\r\nconst playlistCharts2 = {\r\n    data: (canvas) => {\r\n        var ctx = canvas.getContext(\"2d\");\r\n        var gradientFill = ctx.createLinearGradient(0, 170, 0, 50);\r\n        gradientFill.addColorStop(0, primaryColor);\r\n        gradientFill.addColorStop(1, primaryColor);\r\n        return {\r\n            labels :[\r\n                \"Jan\",\"Feb\",\"Mar\",\"Apr\",\"May\",\"Jun\",\"Jul\",\"Aug\",\"Sep\",\"Oct\",\"Nov\",\"Dec\"\r\n            ],\r\n            datasets: [{\r\n                label: \"Progress\",\r\n                backgroundColor: gradientFill,\r\n                borderColor: primaryColor,\r\n                pointBorderColor: \"#FFF\",\r\n                pointBackgroundColor: primaryColor,\r\n                pointBorderWidth: 2,\r\n                pointHoverRadius: 4,\r\n                pointHoverBorderWidth: 1,\r\n                pointRadius: 4,\r\n                fill: true,\r\n                borderWidth: 1,\r\n                data: [6550,3439,3366,7622,2333,2255,8440,5545,1168,8330,1443,5255]\r\n            }]\r\n        }\r\n    },\r\n    options: {\r\n        maintainAspectRatio: false,\r\n        legend: {\r\n            display: false\r\n        },\r\n        tooltips: {\r\n            bodySpacing: 4,\r\n            mode:\"nearest\",\r\n            intersect: 0,\r\n            position:\"nearest\",\r\n            xPadding:10,\r\n            yPadding:10,\r\n            caretPadding:10\r\n        },\r\n        responsive: 1,\r\n        scales: {\r\n            yAxes: [{\r\n                display:0,\r\n                ticks: {\r\n                    display: false\r\n                },\r\n                gridLines: {\r\n                    color: \"rgba(0, 0, 0, 0.01)\",\r\n            zeroLineColor: \"transparent\",\r\n                    drawTicks: false,\r\n                    display: false,\r\n                    drawBorder: false\r\n                }\r\n            }],\r\n            xAxes: [{\r\n                categoryPercentage: 0.6,\r\n                barPercentage: 0.5,\r\n                maxBarThickness: 8,\r\n                display:0,\r\n                ticks: {\r\n                    display: false\r\n                },\r\n                gridLines: {\r\n                    color: \"rgba(0, 0, 0, 0.01)\",\r\n            zeroLineColor: \"transparent\",\r\n                    drawTicks: false,\r\n                    display: false,\r\n                    drawBorder: false\r\n                }\r\n            }]\r\n        },\r\n        layout:{\r\n            padding:{left:0,right:0,top:0,bottom:0}\r\n        }\r\n    },\r\n}\r\n\r\n\r\n\r\n\r\n// ##############################\r\n// // // Dashboard view - All Products - Card\r\n// #############################\r\n\r\nconst dashboardAllProductsChart = {\r\n    data: (canvas) => {\r\n        var ctx = canvas.getContext(\"2d\");\r\n        var gradientStroke = ctx.createLinearGradient(500, 0, 100, 0);\r\n        gradientStroke.addColorStop(0, '#18ce0f');\r\n        gradientStroke.addColorStop(1, primaryColor);\r\n        var gradientFill = ctx.createLinearGradient(0, 170, 0, 50);\r\n        gradientFill.addColorStop(0, \"rgba(38, 166, 154, 0)\");\r\n        gradientFill.addColorStop(1, \"rgba(38, 166, 154, 0)\");\r\n        return {\r\n            labels: [\"Jan\",\"Feb\",\"Mar\",\"Apr\",\"May\",\"Jun\",\"Jul\",\"Aug\",\"Sep\",\"Oct\",\"Nov\",\"Dec\"],\r\n            datasets: [{\r\n                label: \"Stats\",\r\n                borderColor: primaryColor,\r\n                pointBorderColor: \"#FFF\",\r\n                pointBackgroundColor: primaryColor,\r\n                pointBorderWidth: 2,\r\n                pointHoverRadius: 0,\r\n                pointHoverBorderWidth: 0,\r\n                pointRadius: 3,\r\n                fill: true,\r\n                backgroundColor: gradientFill,\r\n                borderWidth: 2,\r\n                data: [40, 500, 650, 200, 400, 800, 100, 900,600,355,495,50]\r\n            }]\r\n        }\r\n    },\r\n    options: {\r\n        maintainAspectRatio: false,\r\n        legend: {\r\n            display: false\r\n        },\r\n        tooltips: {\r\n            // display: false,\r\n            bodySpacing: 4,\r\n            mode:\"nearest\",\r\n            intersect: 0,\r\n            position:\"nearest\",\r\n            xPadding:10,\r\n            yPadding:10,\r\n            caretPadding:10\r\n        },\r\n        responsive: 1,\r\n        scales: {\r\n            yAxes: [{\r\n                display:1,\r\n                ticks: {\r\n                    display: true\r\n                },\r\n                gridLines: {\r\n                    color: \"rgba(0, 0, 0, 0.01)\",\r\n            zeroLineColor: \"transparent\",\r\n                    drawTicks: false,\r\n                    display: false,\r\n                    drawBorder: false\r\n                }\r\n            }],\r\n            xAxes: [{\r\n                display:0,\r\n                ticks: {\r\n                    display: false\r\n                },\r\n                gridLines: {\r\n                    color: \"rgba(0, 0, 0, 0.01)\",\r\n            zeroLineColor: \"transparent\",\r\n                    drawTicks: false,\r\n                    display: false,\r\n                    drawBorder: false\r\n                }\r\n            }]\r\n        },\r\n        layout:{\r\n            padding:{left:0,right:0,top:0,bottom:0}\r\n        }\r\n    },\r\n}\r\n\r\n\r\n\r\n\r\n// ##############################\r\n// // // Dashboard view - All Products - Card\r\n// #############################\r\n\r\nconst dashboardAllProductsChart1 = {\r\n    data: (canvas) => {\r\n        var ctx = canvas.getContext(\"2d\");\r\n        var gradientStroke = ctx.createLinearGradient(500, 0, 100, 0);\r\n        gradientStroke.addColorStop(0, '#18ce0f');\r\n        gradientStroke.addColorStop(1, primaryColor);\r\n        var gradientFill = ctx.createLinearGradient(0, 170, 0, 50);\r\n        gradientFill.addColorStop(0, \"rgba(38, 166, 154, 0)\");\r\n        gradientFill.addColorStop(1, \"rgba(38, 166, 154, 1)\");\r\n        return {\r\n            labels: [\"12pm,\", \"3pm\", \"6pm\", \"9pm\", \"12am\", \"3am\", \"6am\", \"9am\"],\r\n            datasets: [{\r\n                label: \"Stats\",\r\n                borderColor: primaryColor,\r\n                pointBorderColor: \"#FFF\",\r\n                pointBackgroundColor: primaryColor,\r\n                pointBorderWidth: 0,\r\n                pointHoverRadius: 0,\r\n                pointHoverBorderWidth: 0,\r\n                pointRadius: 0,\r\n                fill: true,\r\n                backgroundColor: gradientFill,\r\n                borderWidth: 2,\r\n                data: [40, 500, 650, 700, 1200, 1250, 1300, 1900]\r\n            }]\r\n        }\r\n    },\r\n    options: {\r\n        maintainAspectRatio: false,\r\n        legend: {\r\n            display: false\r\n        },\r\n        tooltips: {\r\n            display: false,\r\n            bodySpacing: 4,\r\n            mode:\"nearest\",\r\n            intersect: 0,\r\n            position:\"nearest\",\r\n            xPadding:10,\r\n            yPadding:10,\r\n            caretPadding:10\r\n        },\r\n        responsive: 1,\r\n        scales: {\r\n            yAxes: [{\r\n                display:0,\r\n                ticks: {\r\n                    display: false\r\n                },\r\n                gridLines: {\r\n                    color: \"rgba(0, 0, 0, 0.01)\",\r\n            zeroLineColor: \"transparent\",\r\n                    drawTicks: false,\r\n                    display: false,\r\n                    drawBorder: false\r\n                }\r\n            }],\r\n            xAxes: [{\r\n                display:0,\r\n                ticks: {\r\n                    display: false\r\n                },\r\n                gridLines: {\r\n                    color: \"rgba(0, 0, 0, 0.01)\",\r\n            zeroLineColor: \"transparent\",\r\n                    drawTicks: false,\r\n                    display: false,\r\n                    drawBorder: false\r\n                }\r\n            }]\r\n        },\r\n        layout:{\r\n            padding:{left:0,right:0,top:0,bottom:0}\r\n        }\r\n    },\r\n}\r\n\r\n// ##############################\r\n// // // Dashboard view - All Products - Card\r\n// #############################\r\n\r\nconst dashboardAllProductsChart2 = {\r\n    data: (canvas) => {\r\n        var ctx = canvas.getContext(\"2d\");\r\n        var gradientStroke = ctx.createLinearGradient(500, 0, 100, 0);\r\n        gradientStroke.addColorStop(0, '#18ce0f');\r\n        gradientStroke.addColorStop(1, primaryColor);\r\n        var gradientFill = ctx.createLinearGradient(0, 170, 0, 50);\r\n        gradientFill.addColorStop(0, \"rgba(38, 166, 154, 0)\");\r\n        gradientFill.addColorStop(1, \"rgba(38, 166, 154, 0)\");\r\n        return {\r\n            labels: [\"12pm,\", \"3pm\", \"6pm\", \"9pm\", \"12am\", \"3am\", \"6am\", \"9am\"],\r\n            datasets: [{\r\n                label: \"Stats\",\r\n                borderColor: primaryColor,\r\n                pointBorderColor: \"#FFF\",\r\n                pointBackgroundColor: primaryColor,\r\n                pointBorderWidth: 2,\r\n                pointHoverRadius: 2,\r\n                pointHoverBorderWidth: 2,\r\n                pointRadius: 4,\r\n                fill: true,\r\n                backgroundColor: gradientFill,\r\n                borderWidth: 2,\r\n                data: [640, 660, 700, 720, 790, 832, 860, 920]\r\n            }]\r\n        }\r\n    },\r\n    options: {\r\n    maintainAspectRatio: false,\r\n    legend: {\r\n        display: false\r\n    },\r\n    tooltips: {\r\n      bodySpacing: 4,\r\n      mode:\"nearest\",\r\n      intersect: 0,\r\n      position:\"nearest\",\r\n      xPadding:10,\r\n      yPadding:10,\r\n      caretPadding:10\r\n    },\r\n    responsive: 1,\r\n    /*scales: {\r\n        yAxes: [{\r\n          gridLines: {\r\n              color: \"rgba(0, 0, 0, 0.01)\",\r\n            zeroLineColor: \"transparent\",\r\n              color: \"rgba(0, 0, 0, 0.07)\",\r\n              drawBorder: false\r\n          }\r\n        }],\r\n        xAxes: [{\r\n          display:0,\r\n          ticks: {\r\n              display: false\r\n          },\r\n          gridLines: {\r\n            color: \"rgba(0, 0, 0, 0.01)\",\r\n            zeroLineColor: \"transparent\",\r\n            drawTicks: false,\r\n            display: false,\r\n            drawBorder: false\r\n          }\r\n        }]\r\n    },*/\r\n    scales: {\r\n             xAxes: [{\r\n              display:1,\r\n              gridLines: {\r\n                 color: \"rgba(0, 0, 0, 0.01)\",\r\n              },\r\n              ticks: {\r\n                  display: false\r\n              },\r\n\r\n            }],\r\n            yAxes: [{\r\n                categoryPercentage: 0.8,\r\n                barPercentage: 0.6,\r\n                maxBarThickness: 12,\r\n                display:1,\r\n                gridLines: {\r\n                  color: \"rgba(0, 0, 0, 0.01)\",\r\n                },\r\n                ticks: {\r\n                  display: true\r\n                }\r\n            }]\r\n      },\r\n    layout:{\r\n      padding:{left:0,right:0,top:0,bottom:0}\r\n    }\r\n},\r\n}\r\n\r\n\r\n// ##############################\r\n// // // Dashboard view - All Products - Card\r\n// #############################\r\n\r\nconst dashboardAllProductsChart3 = {\r\n    data: (canvas) => {\r\n        var ctx = canvas.getContext(\"2d\");\r\n        var gradientStroke = ctx.createLinearGradient(500, 0, 100, 0);\r\n        gradientStroke.addColorStop(0, '#18ce0f');\r\n        gradientStroke.addColorStop(1, primaryColor);\r\n        var gradientFill = ctx.createLinearGradient(0, 170, 0, 50);\r\n        gradientFill.addColorStop(0, \"rgba(38, 166, 154, 0)\");\r\n        gradientFill.addColorStop(1, \"rgba(38, 166, 154, 0)\");\r\n        return {\r\n            labels: [\"12pm,\", \"3pm\", \"6pm\", \"9pm\", \"12am\", \"3am\", \"6am\", \"9am\"],\r\n            datasets: [{\r\n                label: \"Stats\",\r\n                borderColor: primaryColor,\r\n                pointBorderColor: \"#FFF\",\r\n                pointBackgroundColor: primaryColor,\r\n                pointBorderWidth: 2,\r\n                pointHoverRadius: 2,\r\n                pointHoverBorderWidth: 2,\r\n                pointRadius: 4,\r\n                fill: true,\r\n                backgroundColor: gradientFill,\r\n                borderWidth: 2,\r\n                data: [640, 660, 700, 720, 790, 832, 860, 920]\r\n            },\r\n            {\r\n                label: \"Downloads\",\r\n                borderColor: accentColor,\r\n                pointBorderColor: \"#FFF\",\r\n                pointBackgroundColor: accentColor,\r\n                pointBorderWidth: 2,\r\n                pointHoverRadius: 2,\r\n                pointHoverBorderWidth: 2,\r\n                pointRadius: 4,\r\n                fill: true,\r\n                backgroundColor: gradientFill,\r\n                borderWidth: 2,\r\n                data: [540, 760, 700, 620, 690, 732, 660, 720]\r\n            },\r\n            {\r\n                label: \"Visitors\",\r\n                borderColor: purpleColor,\r\n                pointBorderColor: \"#FFF\",\r\n                pointBackgroundColor: purpleColor,\r\n                pointBorderWidth: 2,\r\n                pointHoverRadius: 2,\r\n                pointHoverBorderWidth: 2,\r\n                pointRadius: 4,\r\n                fill: true,\r\n                backgroundColor: gradientFill,\r\n                borderWidth: 2,\r\n                data: [740, 760, 800, 720, 690, 832, 760, 820]\r\n            }]\r\n        }\r\n    },\r\n    options: {\r\n    maintainAspectRatio: false,\r\n    legend: {\r\n        display: false\r\n    },\r\n    tooltips: {\r\n      bodySpacing: 4,\r\n      mode:\"nearest\",\r\n      intersect: 0,\r\n      position:\"nearest\",\r\n      xPadding:10,\r\n      yPadding:10,\r\n      caretPadding:10\r\n    },\r\n    responsive: 1,\r\n    /*scales: {\r\n        yAxes: [{\r\n          gridLines: {\r\n              color: \"rgba(0, 0, 0, 0.01)\",\r\n            zeroLineColor: \"transparent\",\r\n              color: \"rgba(0, 0, 0, 0.07)\",\r\n              drawBorder: false\r\n          }\r\n        }],\r\n        xAxes: [{\r\n          display:0,\r\n          ticks: {\r\n              display: false\r\n          },\r\n          gridLines: {\r\n            color: \"rgba(0, 0, 0, 0.01)\",\r\n            zeroLineColor: \"transparent\",\r\n            drawTicks: false,\r\n            display: false,\r\n            drawBorder: false\r\n          }\r\n        }]\r\n    },*/\r\n    scales: {\r\n             xAxes: [{\r\n              display:1,\r\n              gridLines: {\r\n                 color: \"rgba(0, 0, 0, 0.01)\",\r\n              },\r\n              ticks: {\r\n                  display: false\r\n              },\r\n\r\n            }],\r\n            yAxes: [{\r\n                categoryPercentage: 0.8,\r\n                barPercentage: 0.6,\r\n                maxBarThickness: 12,\r\n                display:1,\r\n                gridLines: {\r\n                  color: \"rgba(0, 0, 0, 0.01)\",\r\n                },\r\n                ticks: {\r\n                  display: true\r\n                }\r\n            }]\r\n      },\r\n    layout:{\r\n      padding:{left:0,right:0,top:0,bottom:0}\r\n    }\r\n},\r\n}\r\n\r\n\r\n\r\nmodule.exports = {\r\n    dashboardAllProductsChart,\r\n    dashboardAllProductsChart1,\r\n    dashboardAllProductsChart2,\r\n    dashboardAllProductsChart3,\r\n    playlistCharts,\r\n    playlistCharts3,\r\n    playlistCharts4,\r\n    playlistCharts5,\r\n    playlistCharts1,\r\n    playlistCharts2,\r\n}\r\n","module.exports = __webpack_public_path__ + \"static/media/MetaMask-Icon.91135d23.png\";","module.exports = __webpack_public_path__ + \"static/media/icon1.37d55289.jpg\";","import firebase from \"firebase\"\r\n\r\nvar firebaseConfig = {\r\n    apiKey: \"AIzaSyBWiEJqY3QRrzUYdio-lPU8t4G3Uryq43I\",\r\n    authDomain: \"payzus-c1ad4.firebaseapp.com\",\r\n    databaseURL: \"https://payzus-c1ad4.firebaseio.com\",\r\n    projectId: \"payzus-c1ad4\",\r\n    storageBucket: \"payzus-c1ad4.appspot.com\",\r\n    messagingSenderId: \"352551127736\",\r\n    appId: \"1:352551127736:web:39193f99420cd9787e424d\",\r\n    measurementId: \"G-9KTNZJNTM6\"\r\n  };\r\n  // Initialize Firebase\r\nconst firebaseApp = firebase.initializeApp(firebaseConfig);\r\n\r\nexport default firebaseApp;","import React from 'react';\r\nimport {\r\n    Row, Col,\r\n    Button\r\n} from 'reactstrap';\r\n\r\nimport {\r\n    \r\n} from 'components';\r\n\r\nimport { Line} from 'react-chartjs-2';\r\n\r\n//import styles from 'jvectormap/jquery-jvectormap.css'\r\n\r\n\r\nimport {\r\n    dashboardAllProductsChart,\r\n    //dashboardAllProductsChart1,\r\n\r\n} from 'variables/general/dashboard-charts.jsx';\r\n\r\n//import CountTo from 'react-count-to';\r\nimport web3 from \"web3\";\r\nimport firebaseApp from \"../../../firebase-config\";\r\nimport PayzusContractABI from \"../../../contracts/PAYZUS.json\";\r\n\r\nconst database = firebaseApp.database().ref(\"Users\");\r\n\r\nclass General extends React.Component{\r\n\r\n   \r\n    constructor(props) {\r\n      super(props);\r\n      this.state = {\r\n        data1: [],\r\n        rewards:0,\r\n        directReferred:0,\r\n        indirectReferred:0,\r\n        referrerAddress:\"0x00\",\r\n        tokenBalance:0,\r\n        account:null\r\n      };\r\n    }\r\n    \r\n    componentDidMount = async () => {\r\n       \r\n        let temp;\r\n\r\n      try{\r\n\r\n              const Web3 = new web3(web3.givenProvider);\r\n              const accounts = await Web3.eth.getAccounts();\r\n              await this.setState({account:accounts[0]})\r\n\r\n              const PayzusContract = new Web3.eth.Contract(PayzusContractABI,\"0x772E39f10f4404044Df408235bB3F6fB6E7931F2\");\r\n\r\n              const result = await PayzusContract.methods.balanceOf(this.state.account).call()\r\n\r\n              await this.setState({tokenBalance:result});\r\n\r\n        firebaseApp.auth().onAuthStateChanged((user) => {\r\n          if(user){\r\n              var uid = user.uid\r\n                      \r\n              // console.log(uid)\r\n              \r\n      \r\n              database\r\n                  .child(uid)\r\n                  .once(\"value\", (snapshot) => {\r\n      \r\n                      temp = snapshot.val();\r\n        \r\n                      // console.log(temp);\r\n                      this.setState({rewards:temp.Rewards, directReferred:temp.DirectReferred, indirectReferred:temp.IndirectReferred, referrerAddress:temp.Referrer});\r\n                      console.log(this.state.rewards)\r\n                                          \r\n                  })\r\n                                \r\n          }\r\n          else{\r\n            // this.props.history.push(\"/home/login\")\r\n            window.location.href=\"/login\"\r\n          }               \r\n        })\r\n      }\r\n\r\n      catch(error){\r\n        console.log(error)\r\n      }\r\n\r\n\r\n    }\r\n    componentWillUnmount(){\r\n     \r\n    }\r\n    \r\n\r\n    \r\n    truncate(str) {\r\n      return str.length > 10  ? str.substring(0,6) + \"...\" + str.substring(38,42): str;\r\n    }\r\n\r\n  \r\n\r\n    render(){\r\n\r\n\r\n\r\n        return (\r\n            <div>\r\n                <div className=\"content\">\r\n                    <Row>\r\n                        <Col xs={12} md={12}>\r\n\r\n                    <div className=\"page-title\">\r\n                        <div className=\"float-right\">\r\n                            {/* <h1 className=\"title\">DashBoard</h1> */}\r\n                          <Button color=\"primary\">Add funds</Button>\r\n                          <Button color=\"primary\">send</Button>\r\n                         \r\n                        </div>\r\n                    </div>\r\n\r\n\r\n\r\n\r\n                    <div className=\"clearfix\"></div>\r\n                    <div className=\"col-xl-12\">\r\n                        {/* <div className=\"row\">\r\n                                    <div className=\"col-xl-3 col-lg-4 col-md-4 col-sm-6 col-12\">\r\n                                        <div className=\"db_box graph_widget\">\r\n                                        <div className=\"float-left\">\r\n                                          <div className=\"chart-area\" style={{height: 60+'px', maxWidth: 80+'px','marginTop': '-5px','marginBottom': '5px'}}>\r\n                                            <Bar data={playlistCharts3.data} options={playlistCharts3.options} />\r\n                                          </div>\r\n                                        </div>                                        \r\n                                        <div className=\"widdata float-left\">\r\n                                          <h2 className=\"widtitle\">9754</h2>\r\n                                          <p className=\"widtag\">Sales this month</p>\r\n                                        </div> \r\n                                        </div>\r\n                                    </div>\r\n                                    <div className=\"col-xl-3 col-lg-4 col-md-4 col-sm-6 col-12\">\r\n                                        <div className=\"db_box graph_widget\">\r\n                                        <div className=\"float-left\">\r\n                                          <div className=\"chart-area\" style={{height: 60+'px', maxWidth: 80+'px','marginTop': '-5px','marginBottom': '5px'}}>\r\n                                            <Bar data={playlistCharts4.data} options={playlistCharts4.options} />\r\n                                          </div>\r\n                                        </div>                                        \r\n                                        <div className=\"widdata float-left\">\r\n                                          <h2 className=\"widtitle\">$95000</h2>\r\n                                          <p className=\"widtag\">Monthly Earnings</p>\r\n                                        </div> \r\n                                        </div>\r\n                                    </div>\r\n                                    <div className=\"col-xl-3 col-lg-4 col-md-4 col-sm-6 col-12\">\r\n                                        <div className=\"db_box graph_widget\">\r\n                                        <div className=\"float-left\">\r\n                                          <div className=\"chart-area\" style={{height: 60+'px', maxWidth: 80+'px','marginTop': '-5px','marginBottom': '5px'}}>\r\n                                            <Bar data={playlistCharts5.data} options={playlistCharts5.options} />\r\n                                          </div>\r\n                                        </div>                                        \r\n                                        <div className=\"widdata float-left\">\r\n                                          <h2 className=\"widtitle\">89.99%</h2>\r\n                                          <p className=\"widtag\">Target Achieved</p>\r\n                                        </div> \r\n                                        </div>\r\n                                    </div>\r\n                                    <div className=\"col-xl-3 col-lg-4 col-md-4 d-xl-block d-lg-none d-md-none d-sm-block col-sm-6 col-12\">\r\n                                        <div className=\"db_box graph_widget\">\r\n                                        <div className=\"float-left\">\r\n                                          <div className=\"chart-area\" style={{height: 60+'px', maxWidth: 80+'px','marginTop': '-5px','marginBottom': '5px'}}>\r\n                                            <Bar data={playlistCharts.data} options={playlistCharts.options} />\r\n                                          </div>\r\n                                        </div>                                        \r\n                                        <div className=\"widdata float-left\">\r\n                                          <h2 className=\"widtitle\">32000</h2>\r\n                                          <p className=\"widtag\">New Visitors</p>\r\n                                        </div> \r\n                                        </div>\r\n                                    </div>\r\n\r\n                            </div> */}\r\n                            <div style={{height:60+'px'}}></div>\r\n\r\n                          </div>\r\n\r\n\r\n\r\n\r\n\r\n                            <div className=\"row margin-0\">\r\n\r\n                                 <div className=\"col-12 col-lg-7 col-xl-8 col-md-7\">\r\n                                    <section className=\"box\" >\r\n                                        <header className=\"panel_header\">\r\n                                            <h2 className=\"title float-left\">Balance</h2>\r\n                                            \r\n                                        </header>\r\n                                        <div className=\"content-body\">        <div className=\"row\">\r\n                                                <div className=\"col-12\">\r\n                                                    <div className=\"chart-container\">\r\n                                                        \r\n                                                        <div className=\"chart-area\" style={{height:'300px'}}>\r\n                                                          {/* <h2>Your wallet is empty</h2>\r\n                                                          <Button color=\"primary\"><i class=\"fa fa-plus\" aria-hidden=\"true\" style={{margin:5,marginRight:10}}></i>Add funds</Button> */}\r\n                                                          <Line data={dashboardAllProductsChart.data} options={dashboardAllProductsChart.options}/>\r\n                                                        </div>\r\n\r\n                                                    </div>\r\n\r\n\r\n                                                </div>      \r\n                                            </div> \r\n                                        </div>\r\n                                    </section>    \r\n                                </div>\r\n\r\n                         <div className=\"col-12 col-lg-5 col-md-5 col-xl-4\">\r\n\r\n                                <section className=\"box \">\r\n                                          <header className=\"panel_header\">\r\n                                              <h2 className=\"title float-left\"> Payzus Token Stats</h2>\r\n                                              \r\n                                          </header>\r\n                                          <div className=\"content-body\">    <div className=\"row margin-0\">\r\n                                                  <div className=\"col-12\">\r\n                                                      <div className=\"wid-vectormap mapsmall\">\r\n                                                          <div className=\"row\">\r\n                                                              <div style={{width: 100+'%', height: 250}}>\r\n                                                                    <ul style={{marginTop:\"30px\"}}>\r\n                                                                    <p><li>Token Balance      <span style={{float:\"right\"}}>{(this.state.tokenBalance) / (10 ** 18)} PZS</span></li></p>\r\n                                                                      <p><li>Rewards          <span style={{float:\"right\"}}>{this.state.rewards} PZS</span></li></p>\r\n                                                                      <p><li>DirectReferred   <span style={{float:\"right\"}}>{this.state.directReferred}</span></li></p>\r\n                                                                      <p><li>IndirectReferred <span style={{float:\"right\"}}>{this.state.indirectReferred}</span></li></p>\r\n                                                                      <p><li>Your referrer    <span style={{float:\"right\"}}>{this.truncate(this.state.referrerAddress)}</span></li></p>\r\n                                                                    </ul>\r\n                                                            \r\n                                                                    \r\n                                                                </div>\r\n                                                              {/* <div className=\"map_progress col-12 col-md-12\" style={{'marginTop': '-15px'}}>\r\n                                                                  <h5>Unique Visitors</h5>\r\n                                                                  <span className='text-muted'>Last Week Rise by 62%</span>\r\n                                                                  <div className=\"progress\"><div className=\"progress-bar progress-bar-primary\" role=\"progressbar\" aria-valuenow=\"62\" aria-valuemin=\"0\" aria-valuemax=\"100\" style={{width: 62+'%'}}></div></div>\r\n                                                                  <br/>\r\n                                                                  <h5>Registrations</h5>\r\n                                                                  <span className='text-muted'>Up by 57% last 7 days</span>\r\n                                                                  <div className=\"progress\"><div className=\"progress-bar progress-bar-primary\" role=\"progressbar\" aria-valuenow=\"57\" aria-valuemin=\"0\" aria-valuemax=\"100\" style={{width: 57+'%'}}></div></div>\r\n                                                              </div> */}\r\n                                                          </div>\r\n                                                      </div>\r\n                                                  </div>      \r\n                                              </div>\r\n\r\n                                          </div>\r\n                                      </section>\r\n \r\n                          </div>\r\n\r\n\r\n                          </div>\r\n\r\n\r\n\r\n\r\n                    <div className=\"row margin-0\">\r\n                        \r\n                        <div className=\"col-12 col-lg-6 col-md-6\">\r\n                            <section className=\"box \">\r\n                                <header className=\"panel_header\">\r\n                                    <h2 className=\"title float-left\">All Assets</h2>\r\n                                    \r\n                                </header>\r\n                                <div className=\"content-body\">        <div className=\"row\">\r\n                                        <div className=\"col-12\">\r\n                                            <div className=\"chart-container\">\r\n\r\n                                             \r\n\r\n\r\n                                            </div>\r\n                                        </div>  \r\n\r\n                                    </div> \r\n                                </div>\r\n                            </section>    \r\n                          </div>\r\n                          \r\n\r\n                    </div>\r\n\r\n                  </Col>\r\n\r\n                    </Row>\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default General;\r\n","export default function generateElement(msg){\r\n    let errorNode = document.createElement(\"div\");\r\n    errorNode.innerHTML = `${msg}`;\r\n    return errorNode;\r\n  }","import React from 'react';\r\nimport {\r\n    Row, Col\r\n} from 'reactstrap';\r\n\r\nimport {\r\n    \r\n} from 'components';\r\nimport swal from \"sweetalert\";\r\nimport generateElement from \"../../../generateElement\";\r\n// import web3 from \"web3\";\r\n// import PayzusContractABI from \"../../../contracts/pyzusReferral.json\";\r\nimport firebaseApp from '../../../firebase-config';\r\n\r\nconst database = firebaseApp.database().ref(\"Users\");\r\n\r\nclass FormPremade extends React.Component{\r\n    constructor(props){\r\n        super(props);\r\n\r\n        this.state = {\r\n            uid:\"\",\r\n            mobile:\"\",\r\n            aadharNumber:\"\",\r\n            aadharFile1:null,\r\n            aadharFile2:null,\r\n            kycStatus:null\r\n            \r\n\r\n        }\r\n\r\n    }\r\n\r\n    componentDidMount = async () => {\r\n\r\n        // let uid;\r\n\r\n        // await firebaseApp.auth().onAuthStateChanged(function(user) {\r\n        //     if(user){\r\n        //         user = firebaseApp.auth().currentUser;\r\n        //         uid = user.uid;\r\n        //     }\r\n        // })\r\n\r\n        await this.setState({uid:this.props.uid});\r\n\r\n        console.log(this.state.uid);\r\n\r\n        await database\r\n            .child(this.state.uid + '/KYCSubmitted')\r\n            .once('value', snapshot => {\r\n                this.setState({kycStatus:snapshot.val()});\r\n                // console.log(snapshot.val())\r\n            })\r\n\r\n            console.log(this.state.kycStatus);\r\n       \r\n    }\r\n\r\n    onFileUpload = (event) => {\r\n\r\n     let files = event.target.files;\r\n\r\n        files.length === 2 \r\n        ?   \r\n           this.setState({aadharFile1: files[0], aadharFile2:files[1]}, () => {\r\n               console.log(this.state.aadharFile1) \r\n               console.log(this.state.aadharFile2)\r\n            })\r\n            // this.setState({aadharFile2: files[1]}, () => {console.log(this.state.aadharFile2)})\r\n           \r\n        : \r\n\r\n        swal({\r\n            content: generateElement(`Please select 2 files both front and back`),\r\n            icon: \"error\",\r\n\r\n        });\r\n\r\n\r\n   \r\n    }\r\n\r\n    handleSubmit = () => {\r\n\r\n        var mobile = this.state.mobile;\r\n        var aadharNumber = this.state.aadharNumber;\r\n        var aadharFile1 = this.state.aadharFile1;\r\n        var aadharFile2 = this.state.aadharFile2;\r\n\r\n        if(aadharFile1 === null || aadharFile2 === null){\r\n            swal({\r\n                content: generateElement(`Please upload 2 files both front and back`),\r\n                icon: \"error\",\r\n            });\r\n\r\n            return;\r\n        }\r\n\r\n        database\r\n            .child(this.state.uid)\r\n            .update({Mobile:mobile, AadharNumber: aadharNumber, AadharFile1: aadharFile1, AadharFile2: aadharFile2 ,KYCSubmitted:true})\r\n            .then(() => {\r\n\r\n                swal({\r\n                    content: generateElement(`Your KYC is submitted. Please wait untill you are WhiteListed`),\r\n                    icon: \"info\",\r\n                  });\r\n                \r\n            })\r\n            .catch((error) =>  {\r\n                console.log(error);\r\n            })\r\n\r\n        this.setState({mobile:\"\", aadharNumber:\"\", aadharFile1:null, aadharFile2:null})    \r\n                  \r\n    }\r\n\r\n    render(){\r\n\r\n        return (\r\n            <div>\r\n                <div className=\"content\">\r\n                    <Row>\r\n                        <Col xs={12} md={12}>\r\n                            <div className=\"page-title\">\r\n                                <div className=\"float-left\">\r\n                                    <h1 className=\"title\">Get Your KYC Done</h1>\r\n                                </div>\r\n                            </div>\r\n                            {\r\n                                this.state.kycStatus ?\r\n                                (\r\n                                    <div style={{textAlign:\"center\"}}>\r\n                                        <h2> Your KYC is already submitted</h2>\r\n                                    </div>\r\n                                )\r\n                                :\r\n                                (\r\n                                    <div className=\"row margin-0\">\r\n                                    <div className=\"col-12\">\r\n                                        <section className=\"box \">\r\n                                            <header className=\"panel_header\" >\r\n                                                <h2 className=\"title float-left\"></h2>\r\n                                                \r\n                                            </header>\r\n                                            <div className=\"content-body\">\r\n                                                <div className=\"row\">\r\n                                                        <div className=\"col-12 col-sm-12 col-md-10 col-lg-10 col-xl-8\">\r\n                                                            \r\n                                                            <form>\r\n                                                                <div className=\"form-group\">\r\n                                                                    <label htmlFor=\"inputAddress\">Your Mobile</label>\r\n                                                                    <input type=\"text\"  className=\"form-control\" id=\"inputMobile\" placeholder=\"\"\r\n                                                                        value={this.state.mobile}\r\n                                                                        onChange={event => this.setState({mobile:event.target.value})}\r\n                                                                    />\r\n\r\n                                                                </div>\r\n                                                                <div className=\"form-group\">                                                                  \r\n                                                                    <label htmlFor=\"inputEmail4\">Aadhar Number</label>\r\n                                                                    <input type=\"text\" className=\"form-control\" id=\"inputAadhar\" placeholder=\"\"\r\n                                                                        value={this.state.aadharNumber}\r\n                                                                        onChange={event => this.setState({aadharNumber:event.target.value})}\r\n                                                                    />                                                                                                                                     \r\n                                                                </div>\r\n                                                                \r\n                                                                <div className=\"form-group\">                                                                  \r\n                                                                    <label htmlFor=\"inputEmail4\">Upload Aadhar</label>\r\n                                                                    <input type=\"file\" className=\"form-control\" id=\"uploadAadhar\" multiple placeholder=\"\"\r\n                                                                       onChange={event => this.onFileUpload(event)}\r\n                                                                       onClick={(e) => (e.target.value = null)}\r\n                                                                    />                                                                                                                                     \r\n                                                                </div>\r\n                                                                <p style={{color:\"#26a69a\"}}>Please Upload both front and back</p>\r\n                                                            </form>\r\n                                                                <div className=\"col-md-12\" style={{textAlign:\"center\",marginTop:'20px'}}>\r\n                                                                    <button type=\"submit\" className=\"btn btn-primary\" \r\n                                                                        onClick={this.handleSubmit}\r\n                                                                        style={{width:'150px'}}\r\n                                                                    >\r\n                                                                        Submit\r\n                                                                    </button>\r\n                                                                </div>\r\n                                                                \r\n                                                            \r\n\r\n                                                        </div>\r\n                                                    \r\n                                                    \r\n                                                </div>\r\n\r\n                                            </div>\r\n                                        </section>\r\n                                    </div>\r\n                                </div>\r\n                                )\r\n                                \r\n                            }\r\n\r\n                                \r\n                                                            \r\n                        </Col>\r\n                    </Row>\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default FormPremade;\r\n","import React from 'react';\r\nimport { NavLink } from 'react-router-dom';\r\nimport { Nav } from 'reactstrap';\r\n\r\nimport { Navmenudropdown } from 'components';\r\nimport { Navmenugroup } from 'components';\r\n\r\n// javascript plugin used to create scrollbars on windows\r\nimport PerfectScrollbar from 'perfect-scrollbar';\r\n//import useravatar from \"assets/img/profile.jpg\";\r\n// import logofull from \"assets/img/logo-full.png\";\r\n// import logomini from \"assets/img/logo-mini.png\";\r\n// import logofulldark from \"assets/img/logo-full-dark.png\";\r\n// import logominidark from \"assets/img/logo-mini-dark.png\";\r\nimport userImage from \"assets/img/icon1.jpg\";\r\n\r\nvar ps;\r\nvar currentmenu = \"notset\";\r\n\r\n// var IMGDIR = process.env.REACT_APP_IMGDIR;\r\n\r\nclass Sidebar extends React.Component{\r\n    constructor(props){\r\n        super(props);\r\n        this.activeRoute.bind(this);\r\n        this.state = {\r\n          opendd: '',\r\n          openmenu: 'none',\r\n          profilename: 'Eric Nelson',\r\n          profileimg: '',\r\n          profileposition: 'Web Developer',\r\n        };\r\n        this.handleOpendd = this.handleOpendd.bind(this);\r\n        this.handlecurrent = this.handlecurrent.bind(this);\r\n\r\n    }\r\n\r\n    truncate(str) {\r\n        return str.length > 10  ? str.substring(0,6) + \"...\" + str.substring(38,42): str;\r\n    }\r\n\r\n    handlecurrent(currentmenu) {   \r\n       //console.log(\"handlecurrent\"+currentmenu);\r\n       if(this.state.opendd !== \"\"){\r\n           currentmenu = \"\"; \r\n       }\r\n    }\r\n\r\n    handleOpendd(open) {  \r\n        currentmenu = \"\";\r\n        if(this.state.opendd === open){\r\n            this.setState({     \r\n                opendd: ''    \r\n            });  \r\n        } else {\r\n            this.setState({     \r\n                opendd: open    \r\n            });  \r\n        }\r\n        //currentmenu = \"\";\r\n        //console.log(open + this.state.opendd);\r\n    }\r\n    \r\n\r\n    // verifies if routeName is the one active (in browser input)\r\n    activeRoute(routeName) {\r\n        return this.props.location.pathname.indexOf(routeName) > -1 ? ' active' : '';\r\n    }\r\n    componentDidMount(){\r\n\r\n        if(this.props.admintype === 'general'){\r\n            this.setState({     \r\n                profileposition: '',\r\n                profileimg: '',\r\n                profilename: ''\r\n            });  \r\n        }\r\n\r\n        if(navigator.platform.indexOf('Win') > -1){\r\n            ps = new PerfectScrollbar(this.refs.sidebar,{suppressScrollX: true, suppressScrollY: false});\r\n        }\r\n\r\n\r\n    }\r\n    componentWillUnmount(){\r\n        if(navigator.platform.indexOf('Win') > -1){\r\n            ps.destroy();\r\n        }\r\n    }\r\n    render(){\r\n        \r\n        const children = (child, parent) => {\r\n            var links = [];\r\n            if (child) {\r\n                for (var i = 0; i < child.length; i++) {\r\n                    links.push(\r\n                        <li key={i}>\r\n                            <NavLink to={child[i].path} className=\"nav-link\" activeClassName=\"active\">\r\n                                <span>{child[i].name}</span>\r\n                            </NavLink>\r\n                        </li>\r\n                    );\r\n                    //console.log(child[i].parent + this.props.location.pathname + child[i].path);\r\n                    if(this.props.location.pathname === child[i].path){\r\n                        //console.log(\"match found \" + child[i].parent);\r\n                        if(currentmenu === \"notset\" && this.state.opendd === \"\"){\r\n                            currentmenu = parent; //child[i].parent;\r\n                        }\r\n                    }\r\n                    if(this.props.location.pathname === \"/\"){\r\n                        currentmenu = \"dashboards\";\r\n                    }\r\n                }\r\n\r\n                //console.log(currentmenu);\r\n                //console.log(this.props.location.pathname);\r\n                //console.log(parent);\r\n                return <Nav>{links}</Nav>\r\n            }\r\n        }\r\n        \r\n\r\n\r\n        return (\r\n            <div className=\"sidebar menubar\" data-color=\"black\" style={{height:'100%'}}>\r\n\r\n                <div className=\"logo\">\r\n                    {/* <a href=\"/\" className=\"logo-mini\">\r\n                        <div className=\"logo-img\">\r\n                            <img src={logomini} alt=\"react-logo\" className=\"light-logo\" />\r\n                            <img src={logominidark} alt=\"react-logo\" className=\"dark-logo\"/>\r\n                        </div>\r\n                    </a>\r\n                    <a href=\"/\" className=\"logo-full\">\r\n                            <img src={logofull} alt=\"react-logo\" className=\"light-logo\"/>\r\n                            <img src={logofulldark} alt=\"react-logo\" className=\"dark-logo\"/>\r\n                    </a> */}\r\n                </div> \r\n                \r\n                <div className=\"sidebar-wrapper\" ref=\"sidebar\">\r\n                <div className=\"profile-info row\">\r\n                    <div className=\"profile-image col-4\">\r\n                        {/* <a href=\"#!\"> */}\r\n                            <img alt=\"\" src={userImage} className=\"img-fluid avatar-image\" style={{background:\"transparent\"}}/>\r\n                        {/* </a> */}\r\n                    </div>\r\n                    <div className=\"profile-details col-8\">\r\n                        <h3>\r\n                            <span style={{fontSize:'20px',color:\"white\"}}>{this.truncate(this.props.account)}</span>\r\n                            <span className=\"profile-status online\"></span>\r\n                        </h3>\r\n                        <p className=\"profile-title\">\r\n                            { \r\n                            this.props.account === \"\"\r\n                            ? <span style={{color:\"white\"}}>MetaMask</span>\r\n                            : <span style={{color:\"#26a69a\"}}>MetaMask</span>\r\n                            }\r\n                        </p>\r\n                    </div>\r\n                </div>\r\n\r\n                    <Nav className=\"navigation\">\r\n                        {\r\n                            this.props.routes.map((prop,key) => {\r\n                                if(prop.redirect)\r\n                                    return null;\r\n                                if(prop.type === \"child\")\r\n                                    return null;\r\n                                if(prop.type === \"navgroup\")\r\n                                    return ( \r\n                                      <Navmenugroup name={prop.name} key={key}>\r\n                                      </Navmenugroup>\r\n                                    );\r\n                                if(prop.type === \"dropdown\")\r\n                                    return ( \r\n\r\n                                        <li className={(prop.parentid) + \" \" + (( ( (prop.parentid === currentmenu) && (prop.parentid !== \"\") && (prop.parentid !== \"multipurpose\") ) || (this.state.opendd === prop.name)) ? 'active': '') + ' nav-parent '} data-toggle=\"collapse\" key={key}>\r\n                                            <a to={prop.path} className=\"nav-link\" onClick={() => this.handleOpendd(prop.name)} href=\"#!\">\r\n                                                        <i className={\"i-\"+prop.icon}></i>\r\n                                                        <p>{prop.name}</p>\r\n                                                        <span className=\"badge\">{prop.badge}</span>\r\n                                                        <span className={\"arrow i-arrow-left\"}></span>\r\n                                            </a>\r\n                                            { children(prop.child, prop.parentid) }\r\n                                        </li>\r\n\r\n                                    );\r\n\r\n                                if(prop.type === \"dropdown-backup\")\r\n                                    return ( \r\n                                      <Navmenudropdown name={prop.name} icon={prop.icon} path={prop.path} badge={prop.badge} child={prop.child} key={key} openclass={this.state.opendd === prop.name ? 'activethis': ''}  onClick={() => this.handleOpendd(prop.name)}>\r\n                                      </Navmenudropdown>\r\n                                    );\r\n                                return (\r\n                                    <li className={this.activeRoute(prop.path) + ' nav-parent '} key={key} onClick={() => this.handleOpendd(prop.name)}>\r\n                                        <NavLink to={prop.path} className=\"nav-link\" activeClassName=\"active\">\r\n                                            <i className={\"i-\"+prop.icon}></i>\r\n                                            <p>{prop.name}</p>\r\n                                            <span className=\"badge\">{prop.badge}</span>\r\n                                        </NavLink>\r\n                                  </li>\r\n                                );\r\n                            })\r\n\r\n                        }\r\n\r\n                    </Nav>\r\n                </div>\r\n\r\n\r\n\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Sidebar;\r\n","import React from 'react';\r\nimport { Form, FormGroup, Input } from 'reactstrap';\r\n// javascript plugin used to create scrollbars on windows\r\nimport PerfectScrollbar from 'perfect-scrollbar';\r\n\r\nimport {\r\n    Favcontacts, Allcontacts, Chatgroups\r\n} from 'components';\r\n\r\nimport { favcontacts, allcontacts, chatgroups } from 'variables/topbar.jsx';\r\n\r\nvar ps; \r\n\r\nclass ChatSidebar extends React.Component{\r\n    constructor(props){\r\n        super(props);\r\n        this.activeRoute.bind(this);\r\n    }\r\n    // verifies if routeName is the one active (in browser input)\r\n    activeRoute(routeName) {\r\n        return this.props.location.pathname.indexOf(routeName) > -1 ? 'active' : '';\r\n    }\r\n    componentDidMount(){\r\n        \r\n        if(this.props.chatwidth === \"open\"){\r\n            document.documentElement.classList.add('nav-toggle-chat');\r\n        } else {\r\n            document.documentElement.classList.remove('nav-toggle-chat');\r\n        }\r\n        \r\n        if(this.props.chattype === \"squeeze\"){\r\n            document.documentElement.classList.add('nav-chat-squeeze');\r\n        } else {\r\n            document.documentElement.classList.remove('nav-chat-squeeze');\r\n        }\r\n\r\n        if(navigator.platform.indexOf('Win') > -1){\r\n            ps = new PerfectScrollbar(this.refs.chatbar,{suppressScrollX: true, suppressScrollY: false});\r\n        }\r\n\r\n    }\r\n    componentWillUnmount(){ \r\n        if(navigator.platform.indexOf('Win') > -1){\r\n            ps.destroy();\r\n        }\r\n    }\r\n    render(){\r\n        return ( \r\n            <div className=\"sidebar chatbar\">\r\n                \r\n                <div className=\"sidebar-wrapper\" ref=\"chatbar\">\r\n\r\n                                <Form className=\"chat-search\">\r\n                                    <FormGroup>\r\n                                      <Input type=\"text\" name=\"search\" id=\"chatsearch\" placeholder=\"Search\" />\r\n                                    </FormGroup>\r\n                                </Form>\r\n                                <h4 className=\"group-head\">Groups</h4>\r\n                                <Chatgroups chatgroups={chatgroups}/>\r\n                                <h4 className=\"group-head\">Favourites</h4>\r\n                                <Favcontacts favcontacts={favcontacts}/>\r\n                                <h4 className=\"group-head\">All Contacts</h4>\r\n                                <Allcontacts allcontacts={allcontacts}/>\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default ChatSidebar;\r\n","import React from 'react';\r\n// javascript plugin used to create scrollbars on windows\r\nimport PerfectScrollbar from 'perfect-scrollbar';\r\n\r\nvar menuColor;\r\nvar menuType;\r\nvar topbarType;\r\nvar topbarColor;\r\nvar ps;\r\n\r\nclass Stylebar extends React.Component{\r\n    constructor(props) {\r\n        super(props);\r\n        this.menuToggle = this.menuToggle.bind(this);\r\n        this.topbarToggle = this.topbarToggle.bind(this);\r\n    }\r\n    menuToggle(e){\r\n\r\n        var dataid = e.currentTarget.dataset.id;\r\n        menuColor = dataid;\r\n\r\n        if(dataid === \"black\" || dataid === \"image3\" || dataid === \"image4\") {\r\n            menuType = \"dark\";\r\n        } else if(dataid === \"white\" || dataid === \"transparent\" || dataid === \"image1\" || dataid === \"image2\") {\r\n            menuType = \"light\";\r\n        } else if(dataid === \"teal\" || dataid === \"purple\" || dataid === \"orange\" || dataid === \"pink\" || dataid === \"red\") {\r\n            menuType = \"colored\";\r\n        }\r\n\r\n        this.props.menuSettings(menuColor, menuType);\r\n\r\n    }\r\n     topbarToggle(e){\r\n\r\n        var dataid = e.currentTarget.dataset.id;\r\n        topbarColor = dataid;\r\n\r\n        if(dataid === \"black\" || dataid === \"image3\" || dataid === \"image4\") {\r\n            topbarType = \"dark\";\r\n        } else if(dataid === \"white\" || dataid === \"transparent\" || dataid === \"image1\" || dataid === \"image2\") {\r\n            topbarType = \"light\";\r\n        } else if(dataid === \"teal\" || dataid === \"purple\" || dataid === \"orange\" || dataid === \"pink\" || dataid === \"red\") {\r\n            topbarType = \"colored\";\r\n        }\r\n\r\n        this.props.topbarSettings(topbarColor, topbarType);\r\n\r\n    }\r\n    openStyle(){\r\n        document.documentElement.classList.toggle('nav-toggle-style');\r\n       // this.refs.chatToggle.classList.toggle('toggled');\r\n\r\n        // close menu bar if open on smaller screens\r\n        /*if(window.innerWidth < 993){\r\n            document.documentElement.classList.remove('nav-toggle');\r\n            this.refs.sidebarToggle.classList.remove('toggled');\r\n        }*/\r\n    }\r\n\r\n    componentDidMount(){\r\n        \r\n        if(navigator.platform.indexOf('Win') > -1){\r\n            ps = new PerfectScrollbar(this.refs.stylebar,{suppressScrollX: true, suppressScrollY: false});\r\n        }\r\n\r\n    }\r\n    componentWillUnmount(){ \r\n        if(navigator.platform.indexOf('Win') > -1){\r\n            ps.destroy();\r\n        }\r\n    }\r\n    render(){\r\n        return ( \r\n            <div className=\"sidebar stylebar\">\r\n                \r\n\r\n                                <div className=\"navbar-toggle style-toggle\" onClick={() => this.openStyle()}>\r\n                                            <i className=\"i-settings\"></i>\r\n                                </div>\r\n                <div className=\"sidebar-wrapper\" ref=\"stylebar\">\r\n\r\n\r\n                        <div className=\"style-settings\" ref=\"SettingsToggle\">\r\n\r\n                        <div className=\"style-wrap\" ref=\"stylebar\">\r\n                                <p>Menu Style</p>\r\n                                 <ul className=\"menu\">\r\n                                    <li onClick={(e) => this.menuToggle(e)} data-id=\"black\">Black <i className=\"i-check\"></i></li>\r\n                                    <li onClick={(e) => this.menuToggle(e)} data-id=\"white\">White <i className=\"i-check\"></i></li>\r\n                                    <li onClick={(e) => this.menuToggle(e)} data-id=\"teal\">Teal <i className=\"i-check\"></i></li>\r\n                                    <li onClick={(e) => this.menuToggle(e)} data-id=\"orange\">Orange <i className=\"i-check\"></i></li>\r\n                                    <li onClick={(e) => this.menuToggle(e)} data-id=\"purple\">Purple <i className=\"i-check\"></i></li>\r\n                                    <li onClick={(e) => this.menuToggle(e)} data-id=\"pink\">Pink <i className=\"i-check\"></i></li>\r\n                                    <li onClick={(e) => this.menuToggle(e)} data-id=\"red\">Red <i className=\"i-check\"></i></li>\r\n                                    <li onClick={(e) => this.menuToggle(e)} data-id=\"transparent\">Transparent <i className=\"i-check\"></i></li>\r\n                                    <li onClick={(e) => this.menuToggle(e)} data-id=\"image1\">Image 1 <i className=\"i-check\"></i></li>\r\n                                    <li onClick={(e) => this.menuToggle(e)} data-id=\"image2\">Image 2 <i className=\"i-check\"></i></li>\r\n                                    <li onClick={(e) => this.menuToggle(e)} data-id=\"image3\">Image 3 <i className=\"i-check\"></i></li>\r\n                                    <li onClick={(e) => this.menuToggle(e)} data-id=\"image4\">Image 4 <i className=\"i-check\"></i></li>\r\n                                 </ul>\r\n                                <p>Top Bar Style</p>\r\n                                 <ul className=\"topbar\">\r\n                                 <li onClick={(e) => this.topbarToggle(e)} data-id=\"transparent\">Transparent <i className=\"i-check\"></i></li>\r\n                                    <li onClick={(e) => this.topbarToggle(e)} data-id=\"black\">Black <i className=\"i-check\"></i></li>\r\n                                    <li onClick={(e) => this.topbarToggle(e)} data-id=\"white\">White <i className=\"i-check\"></i></li>\r\n                                    <li onClick={(e) => this.topbarToggle(e)} data-id=\"teal\">Teal <i className=\"i-check\"></i></li>\r\n                                    <li onClick={(e) => this.topbarToggle(e)} data-id=\"orange\">Orange <i className=\"i-check\"></i></li>\r\n                                    <li onClick={(e) => this.topbarToggle(e)} data-id=\"purple\">Purple <i className=\"i-check\"></i></li>\r\n                                    <li onClick={(e) => this.topbarToggle(e)} data-id=\"pink\">Pink <i className=\"i-check\"></i></li>\r\n                                    <li onClick={(e) => this.topbarToggle(e)} data-id=\"red\">Red <i className=\"i-check\"></i></li>\r\n                                    {/* <li onClick={(e) => this.topbarToggle(e)} data-id=\"transparent\">Transparent <i className=\"i-check\"></i></li> */}\r\n                                    <li onClick={(e) => this.topbarToggle(e)} data-id=\"image1\">Image 1 <i className=\"i-check\"></i></li>\r\n                                    <li onClick={(e) => this.topbarToggle(e)} data-id=\"image2\">Image 2 <i className=\"i-check\"></i></li>\r\n                                    <li onClick={(e) => this.topbarToggle(e)} data-id=\"image3\">Image 3 <i className=\"i-check\"></i></li>\r\n                                    <li onClick={(e) => this.topbarToggle(e)} data-id=\"image4\">Image 4 <i className=\"i-check\"></i></li>\r\n                                 </ul>\r\n                            </div>\r\n                        </div>\r\n\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Stylebar;\r\n","import React from 'react';\r\n//import { Button } from 'reactstrap';\r\n// used for making the prop types of this component\r\n//import PropTypes from 'prop-types';\r\nimport PerfectScrollbar from 'perfect-scrollbar';\r\n\r\nvar menuColor;\r\nvar menuType;\r\nvar topbarType;\r\nvar topbarColor;\r\nvar ps;\r\n\r\nclass StyleSettings extends React.Component{\r\n    constructor(props) {\r\n        super(props);\r\n        this.menuToggle = this.menuToggle.bind(this);\r\n        this.topbarToggle = this.topbarToggle.bind(this);\r\n        this.OpenSettings = this.OpenSettings.bind(this);\r\n    }\r\n\r\n    OpenSettings(e){\r\n        this.refs.SettingsToggle.classList.toggle('open');\r\n    }\r\n    menuToggle(e){\r\n\r\n        var dataid = e.currentTarget.dataset.id;\r\n        menuColor = dataid;\r\n\r\n        if(dataid === \"black\") {\r\n            menuType = \"dark\";\r\n        } else if(dataid === \"white\" || dataid === \"transparent\") {\r\n            menuType = \"light\";\r\n        } else if(dataid === \"teal\" || dataid === \"purple\" || dataid === \"orange\" || dataid === \"pink\" || dataid === \"red\") {\r\n            menuType = \"colored\";\r\n        }\r\n\r\n        this.props.menuSettings(menuColor, menuType);\r\n\r\n    }\r\n\r\n     topbarToggle(e){\r\n\r\n        var dataid = e.currentTarget.dataset.id;\r\n        topbarColor = dataid;\r\n\r\n        if(dataid === \"black\") {\r\n            topbarType = \"dark\";\r\n        } else if(dataid === \"white\" || dataid === \"transparent\") {\r\n            topbarType = \"light\";\r\n        } else if(dataid === \"teal\" || dataid === \"purple\" || dataid === \"orange\" || dataid === \"pink\" || dataid === \"red\") {\r\n            topbarType = \"colored\";\r\n        }\r\n\r\n        this.props.topbarSettings(topbarColor, topbarType);\r\n\r\n    }\r\n    componentDidMount(){\r\n        if(navigator.platform.indexOf('Win') > -1){\r\n            ps = new PerfectScrollbar(this.refs.stylebar,{suppressScrollX: true, suppressScrollY: false});\r\n        }\r\n    }\r\n    componentWillUnmount(){\r\n        if(navigator.platform.indexOf('Win') > -1){\r\n            ps.destroy();\r\n        }\r\n    }\r\n\r\n    render(){\r\n        return (\r\n                <div className=\"style-settings\" ref=\"SettingsToggle\">\r\n                <div className=\"style-toggle\" onClick={() => this.OpenSettings()}><i className=\"i-settings\"></i></div>\r\n                <div className=\"style-wrap\" ref=\"stylebar\">\r\n                        <p>Menu Style</p>\r\n                         <ul className=\"menu\">\r\n                            <li onClick={(e) => this.menuToggle(e)} data-id=\"black\">Black <i className=\"i-check\"></i></li>\r\n                            <li onClick={(e) => this.menuToggle(e)} data-id=\"white\">White <i className=\"i-check\"></i></li>\r\n                            <li onClick={(e) => this.menuToggle(e)} data-id=\"teal\">Teal <i className=\"i-check\"></i></li>\r\n                            <li onClick={(e) => this.menuToggle(e)} data-id=\"orange\">Orange <i className=\"i-check\"></i></li>\r\n                            <li onClick={(e) => this.menuToggle(e)} data-id=\"purple\">Purple <i className=\"i-check\"></i></li>\r\n                            <li onClick={(e) => this.menuToggle(e)} data-id=\"pink\">Pink <i className=\"i-check\"></i></li>\r\n                            <li onClick={(e) => this.menuToggle(e)} data-id=\"red\">Red <i className=\"i-check\"></i></li>\r\n                            <li onClick={(e) => this.menuToggle(e)} data-id=\"transparent\">Transparent <i className=\"i-check\"></i></li>\r\n                         </ul>\r\n                        <p>Top Bar Style</p>\r\n                         <ul className=\"topbar\">\r\n                            <li onClick={(e) => this.topbarToggle(e)} data-id=\"black\">Black <i className=\"i-check\"></i></li>\r\n                            <li onClick={(e) => this.topbarToggle(e)} data-id=\"white\">White <i className=\"i-check\"></i></li>\r\n                            <li onClick={(e) => this.topbarToggle(e)} data-id=\"teal\">Teal <i className=\"i-check\"></i></li>\r\n                            <li onClick={(e) => this.topbarToggle(e)} data-id=\"orange\">Orange <i className=\"i-check\"></i></li>\r\n                            <li onClick={(e) => this.topbarToggle(e)} data-id=\"purple\">Purple <i className=\"i-check\"></i></li>\r\n                            <li onClick={(e) => this.topbarToggle(e)} data-id=\"pink\">Pink <i className=\"i-check\"></i></li>\r\n                            <li onClick={(e) => this.topbarToggle(e)} data-id=\"red\">Red <i className=\"i-check\"></i></li>\r\n                            <li onClick={(e) => this.topbarToggle(e)} data-id=\"transparent\">Transparent <i className=\"i-check\"></i></li>\r\n                         </ul>\r\n                    </div>\r\n                </div>\r\n\r\n\r\n        );\r\n    }\r\n}\r\n\r\nexport default StyleSettings;\r\n","import React from 'react';\r\nimport { NavLink } from 'react-router-dom';\r\nimport { Nav } from 'reactstrap';\r\n\r\nimport { Navmenudropdown } from 'components';\r\nimport { Navmenugroup } from 'components';\r\n\r\n// javascript plugin used to create scrollbars on windows\r\nimport PerfectScrollbar from 'perfect-scrollbar';\r\n//import useravatar from \"assets/img/profile.jpg\";\r\n// import logofull from \"assets/img/logo-full.png\";\r\n// import logomini from \"assets/img/logo-mini.png\";\r\n// import logofulldark from \"assets/img/logo-full-dark.png\";\r\n// import logominidark from \"assets/img/logo-mini-dark.png\";\r\n\r\nvar ps;\r\nvar currentmenu = \"notset\";\r\n\r\nvar IMGDIR = process.env.REACT_APP_IMGDIR;\r\n\r\nclass Sidebar extends React.Component{\r\n    constructor(props){\r\n        super(props);\r\n        this.activeRoute.bind(this);\r\n        this.state = {\r\n          opendd: '',\r\n          openmenu: 'none',\r\n          profilename: 'Eric Nelson',\r\n          profileimg: IMGDIR+'/images/profile/profile.jpg',\r\n          profileposition: 'Web Developer',\r\n        };\r\n        this.handleOpendd = this.handleOpendd.bind(this);\r\n        this.handlecurrent = this.handlecurrent.bind(this);\r\n\r\n    }\r\n\r\n\r\n    handlecurrent(currentmenu) {   \r\n       //console.log(\"handlecurrent\"+currentmenu);\r\n       if(this.state.opendd !== \"\"){\r\n           currentmenu = \"\"; \r\n       }\r\n    }\r\n\r\n    handleOpendd(open) {  \r\n        currentmenu = \"\";\r\n        if(this.state.opendd === open){\r\n            this.setState({     \r\n                opendd: ''    \r\n            });  \r\n        } else {\r\n            this.setState({     \r\n                opendd: open    \r\n            });  \r\n        }\r\n        //currentmenu = \"\";\r\n        //console.log(open + this.state.opendd);\r\n    }\r\n    \r\n\r\n    // verifies if routeName is the one active (in browser input)\r\n    activeRoute(routeName) {\r\n        return this.props.location.pathname.indexOf(routeName) > -1 ? ' active' : '';\r\n    }\r\n    componentDidMount(){\r\n\r\n        if(this.props.admintype === 'general'){\r\n            this.setState({     \r\n                profileposition: '',\r\n                profileimg: IMGDIR+'',\r\n                profilename: ''\r\n            });  \r\n        \r\n            }\r\n\r\n        if(navigator.platform.indexOf('Win') > -1){\r\n            ps = new PerfectScrollbar(this.refs.sidebar,{suppressScrollX: true, suppressScrollY: false});\r\n        }\r\n\r\n        //console.log(this.props.location.pathname);\r\n\r\n\r\n    }\r\n    componentWillUnmount(){\r\n        if(navigator.platform.indexOf('Win') > -1){\r\n            ps.destroy();\r\n        }\r\n    }\r\n    render(){\r\n        \r\n        const children = (child, parent) => {\r\n            var links = [];\r\n            if (child) {\r\n                for (var i = 0; i < child.length; i++) {\r\n                    links.push(\r\n                        <li key={i}>\r\n                            <NavLink to={child[i].path} className=\"nav-link\" activeClassName=\"active\">\r\n                                <span>{child[i].name}</span>\r\n                            </NavLink>\r\n                        </li>\r\n                    );\r\n                    //console.log(child[i].parent + this.props.location.pathname + child[i].path);\r\n                    if(this.props.location.pathname === child[i].path){\r\n                        //console.log(\"match found \" + child[i].parent);\r\n                        if(currentmenu === \"notset\" && this.state.opendd === \"\"){\r\n                            currentmenu = parent; //child[i].parent;\r\n                        }\r\n                    }\r\n                    if(this.props.location.pathname === \"/\"){\r\n                        currentmenu = \"dashboards\";\r\n                    }\r\n                }\r\n\r\n                //console.log(currentmenu);\r\n                //console.log(this.props.location.pathname);\r\n                //console.log(parent);\r\n                return <Nav>{links}</Nav>\r\n            }\r\n        }\r\n        \r\n\r\n\r\n        return (\r\n            <div className=\"sidebar menubar\" data-color=\"black\" style={{height:'100vh'}}>\r\n\r\n                <div className=\"logo\">\r\n                    {/* <a href=\"/\" className=\"logo-mini\">\r\n                        <div className=\"logo-img\">\r\n                            <img src={logomini} alt=\"react-logo\" className=\"light-logo\" />\r\n                            <img src={logominidark} alt=\"react-logo\" className=\"dark-logo\"/>\r\n                        </div>\r\n                    </a>\r\n                    <a href=\"/\" className=\"logo-full\">\r\n                            <img src={logofull} alt=\"react-logo\" className=\"light-logo\"/>\r\n                            <img src={logofulldark} alt=\"react-logo\" className=\"dark-logo\"/>\r\n                    </a> */}\r\n                </div> \r\n                \r\n                <div className=\"sidebar-wrapper\" ref=\"sidebar\">\r\n                <div className=\"profile-info row\">\r\n                    <div className=\"profile-image col-4\">\r\n                        {/* <a href=\"#!\"> */}\r\n                            <img alt=\"\" src={this.state.profileimg} className=\"img-fluid avatar-image\"/>\r\n                        {/* </a> */}\r\n                    </div>\r\n                    <div className=\"profile-details col-8\">\r\n                        <h3>\r\n                            <p style={{color:\"#fff\",fontSize:'20px', marginTop:'25px'}}>P A Y Z U S</p>\r\n                            <span className=\"profile-status online\"></span>\r\n                        </h3>\r\n                        <p className=\"profile-title\">\r\n                            {/* { \r\n                            this.props.account == \"\"\r\n                            ? <span style={{color:\"white\"}}>MetaMask</span>\r\n                            : <span style={{color:\"#26a69a\"}}>MetaMask</span>\r\n                            } */}\r\n                        </p>\r\n                    </div>\r\n                </div>\r\n\r\n                    <Nav className=\"navigation\">\r\n                        {\r\n                            this.props.routes.map((prop,key) => {\r\n                                if(prop.redirect)\r\n                                    return null;\r\n                                if(prop.type === \"child\")\r\n                                    return null;\r\n                                if(prop.type === \"navgroup\")\r\n                                    return ( \r\n                                      <Navmenugroup name={prop.name} key={key}>\r\n                                      </Navmenugroup>\r\n                                    );\r\n                                if(prop.type === \"dropdown\")\r\n                                    return ( \r\n\r\n                                        <li className={(prop.parentid) + \" \" + (( ( (prop.parentid === currentmenu) && (prop.parentid !== \"\") && (prop.parentid !== \"multipurpose\") ) || (this.state.opendd === prop.name)) ? 'active': '') + ' nav-parent '} data-toggle=\"collapse\" key={key}>\r\n                                            <a to={prop.path} className=\"nav-link\" onClick={() => this.handleOpendd(prop.name)} href=\"#!\">\r\n                                                        <i className={\"i-\"+prop.icon}></i>\r\n                                                        <p>{prop.name}</p>\r\n                                                        <span className=\"badge\">{prop.badge}</span>\r\n                                                        <span className={\"arrow i-arrow-left\"}></span>\r\n                                            </a>\r\n                                            { children(prop.child, prop.parentid) }\r\n                                        </li>\r\n\r\n                                    );\r\n\r\n                                if(prop.type === \"dropdown-backup\")\r\n                                    return ( \r\n                                      <Navmenudropdown name={prop.name} icon={prop.icon} path={prop.path} badge={prop.badge} child={prop.child} key={key} openclass={this.state.opendd === prop.name ? 'activethis': ''}  onClick={() => this.handleOpendd(prop.name)}>\r\n                                      </Navmenudropdown>\r\n                                    );\r\n                                return (\r\n                                    <li className={this.activeRoute(prop.path) + ' nav-parent '} key={key} onClick={() => this.handleOpendd(prop.name)}>\r\n                                        <NavLink to={prop.path} className=\"nav-link\" activeClassName=\"active\">\r\n                                            <i className={\"i-\"+prop.icon}></i>\r\n                                            <p>{prop.name}</p>\r\n                                            <span className=\"badge\">{prop.badge}</span>\r\n                                        </NavLink>\r\n                                  </li>\r\n                                );\r\n                            })\r\n\r\n                        }\r\n\r\n                    </Nav>\r\n                </div>\r\n\r\n\r\n\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Sidebar;\r\n","import React from 'react';\r\nimport {\r\n    Row, Col\r\n} from 'reactstrap';\r\n\r\nimport {\r\n    \r\n} from 'components';\r\nimport swal from \"sweetalert\";\r\nimport bigInt from \"big-integer\";\r\nimport NumericInput from 'react-numeric-input';\r\nimport generateElement from \"../../../generateElement\";\r\nimport web3 from \"web3\";\r\nimport PayzusContractABI from \"../../../contracts/pyzusReferral.json\";\r\nimport firebaseApp from '../../../firebase-config';\r\n\r\nconst database = firebaseApp.database().ref(\"Users\");\r\n\r\nclass FormPremade extends React.Component{\r\n    constructor(props){\r\n        super(props);\r\n\r\n        this.state = {\r\n            PayzusContract:null,\r\n            account:null,\r\n            Web3:null,\r\n            loading:false,\r\n            referrerAddress:\"\",\r\n            tokenNumbers:250,\r\n            price:\"0\",\r\n            // rewardsCredited:true,\r\n            // rewards:0,\r\n            WhiteListed:false,\r\n            uid:null\r\n            \r\n        }\r\n        \r\n    }\r\n\r\n    componentDidMount = async () => {\r\n        let temp;\r\n        try{\r\n               await this.setState({uid:this.props.uid})     \r\n            \r\n                    database\r\n                        .child(this.state.uid +'/WhiteListed')\r\n                        .once(\"value\", (snapshot) => {\r\n            \r\n                            temp = snapshot.val();\r\n              \r\n                            this.getValue(temp)\r\n                                                \r\n                        })\r\n                                      \r\n                \r\n\r\n           \r\n            \r\n            const Web3 = new web3(web3.givenProvider);\r\n            const accounts = await Web3.eth.getAccounts();\r\n            console.log(accounts[0]);\r\n            const account = accounts[0];\r\n\r\n            if(account === undefined){\r\n                \r\n                await swal({\r\n                    content: generateElement(`MetaMask is locked. Please Unlock MetaMask and try again`),\r\n                    icon: \"error\",\r\n        \r\n                });\r\n                return\r\n            }\r\n\r\n\r\n            const PayzusContract = new Web3.eth.Contract(PayzusContractABI,\"0xCD8d7f0074dbAbD47AC5b46adaC9d0EAF7e150C5\");\r\n            // this.setState({PayzusContract})\r\n\r\n            // console.log(this.state.PayzusContract)\r\n            \r\n            \r\n            this.setState({PayzusContract, account, Web3 })\r\n            // console.log(temp)\r\n            \r\n        }\r\n\r\n        catch (error){\r\n            console.log(error);\r\n        }\r\n    }\r\n\r\n    getValue = (value) => {\r\n        this.setState({WhiteListed:value})\r\n        console.log(this.state.WhiteListed)\r\n        \r\n    }\r\n\r\n    // getUid = (value) => {\r\n    //     this.setState({uid:value})\r\n    //     console.log(this.state.uid)\r\n    // }\r\n\r\n    handleReferrence = async () => {\r\n        const result = await this.state.PayzusContract.methods.addReferrer(this.state.referrerAddress).send({from : this.state.accounts});\r\n        console.log(result);\r\n\r\n        await this.setState({referrerAddress:\"\"})\r\n\r\n        swal({\r\n            content:generateElement(`Referral code Applied`),\r\n            icon:\"success\"\r\n        });\r\n    }\r\n\r\n    handleTokenChange = async (value) => {\r\n        await this.setState({tokenNumbers:value})\r\n        console.log(this.state.tokenNumbers)\r\n\r\n        this.priceOf(this.state.tokenNumbers)\r\n    }\r\n\r\n    priceOf = async(value) => {\r\n        if(value === null){\r\n            return;\r\n        }\r\n\r\n        const price = await this.state.PayzusContract.methods.priceOf(value).call()\r\n        await this.setState({price})\r\n        console.log(this.state.price)\r\n    }\r\n\r\n    handleBuyPayzus = async () => {\r\n\r\n        var tokens = this.state.tokenNumbers;\r\n\r\n        let count;\r\n\r\n        if(tokens < 250 || tokens > 7450){\r\n            await swal({\r\n                content:generateElement(`Please enter tokens in the defined range`),\r\n                icon:\"error\"\r\n            })\r\n            return\r\n        }\r\n\r\n        else {\r\n            await this.setState({loading:true})\r\n\r\n        const result = await this.state.PayzusContract.methods.buyTokens(tokens)\r\n            .send({from:this.state.account, value:this.state.price});\r\n\r\n        console.log(result)\r\n        \r\n\r\n        await database\r\n                .child(this.state.uid + '/Transactions/count')\r\n                .once('value', (snapshot) => {\r\n                    count = snapshot.val()\r\n                })\r\n        \r\n        await database\r\n                .child(this.state.uid + '/Transactions/' + count)\r\n                .update({txHash:result.transactionHash})\r\n                .then(() => {\r\n                    database\r\n                        .child(this.state.uid + '/Transactions/count')\r\n                        .set(count + 1, (err) => {\r\n                            if(err){\r\n                                console.log(err)\r\n                            }\r\n                        })\r\n                    \r\n                    // .then(() => {\r\n                    //     swal({\r\n                    //         content:generateElement(`Transaction successfull`),\r\n                    //         icon:\"success\"\r\n                    //     })\r\n                    // })\r\n                })\r\n\r\n    \r\n        \r\n\r\n        await this.setState({rewardsCredited:false})\r\n\r\n        const events = await this.state.PayzusContract.methods.accounts(this.state.account).call()\r\n\r\n        // await this.setState({rewardsCredited:true})\r\n\r\n        await database\r\n                .child(this.state.uid)\r\n                .update({Rewards:events.reward, DirectReferred:events.referredCount, IndirectReferred:events.referredCountIndirect, Referrer:events.referrer})\r\n                .then(() => {\r\n                    this.setState({loading:false},() => {\r\n                        swal({\r\n                            content:generateElement(`Transaction Successful`),\r\n                            icon:\"success\"\r\n                        });\r\n                    }) \r\n                    \r\n                })\r\n                .catch((error) => {\r\n                    console.log(error)\r\n                })\r\n\r\n        // this.setState({rewards:events.reward})\r\n        \r\n        console.log(events.reward);\r\n        \r\n        }\r\n    }\r\n\r\n    render(){\r\n\r\n        return (\r\n            <div>\r\n                <div className=\"content\">\r\n                    <Row>\r\n                        <Col xs={12} md={12}>\r\n                            <div className=\"page-title\">\r\n                                <div className=\"float-left\">\r\n                                    <h1 className=\"title\">Buy PayZus</h1>\r\n                                </div>\r\n                            </div>\r\n\r\n                            {\r\n                                (this.state.WhiteListed) ? \r\n                                (\r\n                                <div className=\"row margin-0\">\r\n                                    <div className=\"col-12\">\r\n                                        <section className=\"box \">\r\n                                            <header className=\"panel_header\" >\r\n                                                <h2 className=\"title float-left\"></h2>\r\n                                                {/* {\r\n                                                    this.state.rewardsCredited\r\n                                                    ? (\r\n                                                        <div style={{float:\"right\",paddingTop:10,paddingRight:50}}>Rewards : {this.state.rewards}</div>\r\n                                                    )\r\n                                                    : (\r\n                                                        <div style={{float:\"right\",paddingTop:10,paddingRight:50}}>Fetching Rewards</div> \r\n                                                    )\r\n                                                } */}\r\n                                                \r\n                                            </header>\r\n                                            <div className=\"content-body\">\r\n                                                <div className=\"row\">\r\n                                                        <div className=\"col-12 col-sm-12 col-md-10 col-lg-10 col-xl-8\">\r\n                                                            <form>\r\n                                                                <div className=\"form-group\">\r\n                                                                    <label htmlFor=\"inputAddress\">Enter Referrer address</label>\r\n                                                                        <input type=\"text\"  className=\"form-control\" id=\"inputEmail4\" placeholder=\"\" \r\n                                                                            value={this.state.referrerAddress}\r\n                                                                            onChange={event => this.setState({referrerAddress:event.target.value})}\r\n                                                                        />\r\n\r\n                                                                </div>\r\n                                                                \r\n                                                            </form>\r\n                                                            <div className=\"col-md-12\" style={{textAlign:\"center\",marginTop:'20px'}}>\r\n                                                                <button type=\"submit\" className=\"btn btn-primary\" \r\n                                                                    onClick={this.handleReferrence}\r\n                                                                    style={{width:'150px'}}\r\n                                                                >\r\n                                                                    Avail Referral\r\n                                                                </button>\r\n                                                            </div>        \r\n\r\n                                                            <form>\r\n                                                                <div className=\"form-group\">\r\n                                                                    <label htmlFor=\"inputAddress\">Number of Payzus Tokens</label>\r\n                                                                    <NumericInput \r\n                                                                        min={250}\r\n                                                                        max={7450}\r\n                                                                        value={this.state.tokenNumbers}\r\n                                                                        className=\"form-control\"\r\n                                                                        // onChange={value => this.setState({tokenNumbers:value})}\r\n                                                                        onChange={(value) => this.handleTokenChange(value)}\r\n                                                                    />\r\n\r\n                                                                </div>\r\n                                                                <p color=\"muted\">\r\n                                                                    You can only purchase token in the range 250 to 7450.\r\n                                                                </p>\r\n                                                                <div className=\"form-row\">\r\n                                                                    <div className=\"form-group col-md-5\">\r\n                                                                        <label htmlFor=\"inputEmail4\">ETH</label>\r\n                                                                        <input type=\"text\" readOnly className=\"form-control\" id=\"inputEmail4\" placeholder=\"\"\r\n                                                                            value={(this.state.price)/(10**18)}\r\n                                                                        />\r\n                                                                    </div>\r\n                                                                    <div className=\"col-md-2\" style={{textAlign:\"center\",paddingTop:'45px'}}>\r\n                                                                        <i className=\"fa fa-exchange\" aria-hidden=\"true\">\r\n                                                                    </i></div>\r\n                                                                    <div className=\"form-group col-md-5\">\r\n                                                                        <label htmlFor=\"inputPassword4\">USD</label>\r\n                                                                        <input type=\"text\" readOnly className=\"form-control\" id=\"inputPassword4\" placeholder=\"\"\r\n                                                                            value={((this.state.price)/(10**18))*395} \r\n                                                                        />\r\n                                                                    </div>\r\n                                                                </div>\r\n                                                            </form>\r\n                                                                <div className=\"col-md-12\" style={{textAlign:\"center\",marginTop:'20px'}}>\r\n                                                                    <button type=\"submit\" className=\"btn btn-primary\" \r\n                                                                        onClick={this.handleBuyPayzus}\r\n                                                                        style={{width:'150px'}}\r\n                                                                    >\r\n                                                                        {\r\n                                                                            this.state.loading ?\r\n                                                                            (<div>Pending ...</div>)\r\n                                                                            : (<div>Buy</div>)\r\n                                                                        }\r\n                                                                       \r\n                                                                    </button>\r\n                                                                </div>\r\n                                                                \r\n                                                            \r\n\r\n                                                        </div>\r\n                                                    \r\n                                                    \r\n                                                </div>\r\n\r\n                                            </div>\r\n                                        </section>\r\n                                    </div>\r\n                                </div>\r\n                                )\r\n                                :\r\n                                (\r\n                                    <div style={{textAlign:\"center\"}}>\r\n                                        <h2> Complete your KYC <br /> and then please wait untill you are WhiteListed</h2>\r\n                                    </div>\r\n                                    \r\n                                )\r\n                            }\r\n                                                            \r\n                        </Col>\r\n                    </Row>\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default FormPremade;\r\n","import React from 'react';\r\nimport {\r\n    Table ,\r\n    Row, Col,\r\n} from 'reactstrap';\r\n\r\nimport {\r\n    \r\n} from 'components';\r\nimport firebaseApp from '../../../firebase-config';\r\n\r\nconst database = firebaseApp.database().ref(\"Users\");\r\n\r\nclass UITables extends React.Component{\r\n   constructor(props){\r\n     super(props);\r\n     this.state = {\r\n       isAvailable:true,\r\n       uid:\"\",\r\n       txArray:[],\r\n       count:0,\r\n       array:[]\r\n     }\r\n   }\r\n\r\n   componentDidMount = async () => {\r\n      // const user = await firebaseApp.auth().currentUser\r\n      // const uid = user.uid;\r\n      await this.setState({uid:this.props.uid});\r\n      console.log(\"uid\",this.props.uid) \r\n\r\n      await database\r\n              .child(this.state.uid + '/Transactions')\r\n              .once('value', snapshot => {\r\n                this.setState({txArray:snapshot.val()})\r\n              });\r\n      // console.log(this.state.txArray,this.state.count)\r\n\r\n\r\n      // for(var i=0 ;i< this.state.count; i++){\r\n      //   this.state.array.push(this.state.txArray[i].value)\r\n      // }\r\n      // console.log(this.state.array)\r\n          \r\n   }\r\n    \r\n    render(){\r\n      // if(this.state.txArray.length === 0){\r\n      //   return(\r\n      //     <div style={{height:\"500px\"}}>\r\n      //       <div className=\"page-title\" style={{marginTop:\"100px\"}}>\r\n      //         <div className=\"float-left\">\r\n      //          <h1 className=\"title\">No transactions yet</h1>\r\n      //         </div>\r\n      //       </div>\r\n      //     </div>\r\n      //   );\r\n      // }\r\n        return (\r\n            <div>\r\n                <div className=\"content\">\r\n                    <Row>\r\n                        <Col xs={12} md={12}>\r\n\r\n                    <div className=\"page-title\">\r\n                        <div className=\"float-left\">\r\n                            <h1 className=\"title\">Transaction History</h1>\r\n                        </div>\r\n                    </div>\r\n\r\n\r\n                          \r\n\r\n                    <div className=\"col-12\">\r\n                        <section className=\"box \">\r\n                            <header className=\"panel_header\">\r\n                                <h2 className=\"title float-left\"></h2>\r\n                                \r\n                            </header>\r\n                            <div className=\"content-body\">\r\n                                <div className=\"row\">\r\n                                    <div className=\"col-lg-12\">\r\n                            \r\n  \r\n      <h5>Basic</h5><br/>\r\n\r\n      <Table>\r\n        <thead>\r\n          <tr>\r\n            <th>#</th>\r\n            <th>Transaction Hash</th>\r\n            {/* <th>Last Name</th>\r\n            <th>Username</th> */}\r\n          </tr>\r\n        </thead>\r\n        <tbody>\r\n          {/* {\r\n            this.state.txArray.map((data,index) => (\r\n              <tr>\r\n                <th scope=\"row\"></th>\r\n                <td key={index}>{data}</td>\r\n              </tr>\r\n            ))\r\n          } */}\r\n          {/* <tr>\r\n            <th scope=\"row\">3</th>\r\n            <td>Larry</td>\r\n            <td>the Bird</td>\r\n            <td>@twitter</td>\r\n          </tr> */}\r\n        </tbody>\r\n      </Table>  \r\n     \r\n\r\n      {/* <br/><br/><h5>Striped</h5><br/>\r\n      <Table striped>\r\n        <thead>\r\n          <tr>\r\n            <th>#</th>\r\n            <th>First Name</th>\r\n            <th>Last Name</th>\r\n            <th>Username</th>\r\n          </tr>\r\n        </thead>\r\n        <tbody>\r\n          <tr>\r\n            <th scope=\"row\">1</th>\r\n            <td>Mark</td>\r\n            <td>Otto</td>\r\n            <td>@mdo</td>\r\n          </tr>\r\n          <tr>\r\n            <th scope=\"row\">2</th>\r\n            <td>Jacob</td>\r\n            <td>Thornton</td>\r\n            <td>@fat</td>\r\n          </tr>\r\n          <tr>\r\n            <th scope=\"row\">3</th>\r\n            <td>Larry</td>\r\n            <td>the Bird</td>\r\n            <td>@twitter</td>\r\n          </tr>\r\n        </tbody>\r\n      </Table>   \r\n\r\n\r\n      <br/><br/><h5>Bordered</h5><br/>\r\n\r\n      <Table bordered>\r\n        <thead>\r\n          <tr>\r\n            <th>#</th>\r\n            <th>First Name</th>\r\n            <th>Last Name</th>\r\n            <th>Username</th>\r\n          </tr>\r\n        </thead>\r\n        <tbody>\r\n          <tr>\r\n            <th scope=\"row\">1</th>\r\n            <td>Mark</td>\r\n            <td>Otto</td>\r\n            <td>@mdo</td>\r\n          </tr>\r\n          <tr>\r\n            <th scope=\"row\">2</th>\r\n            <td>Jacob</td>\r\n            <td>Thornton</td>\r\n            <td>@fat</td>\r\n          </tr>\r\n          <tr>\r\n            <th scope=\"row\">3</th>\r\n            <td>Larry</td>\r\n            <td>the Bird</td>\r\n            <td>@twitter</td>\r\n          </tr>\r\n        </tbody>\r\n      </Table>\r\n\r\n      <br/><br/><h5>Borderless</h5><br/>\r\n      <Table borderless>\r\n        <thead>\r\n          <tr>\r\n            <th>#</th>\r\n            <th>First Name</th>\r\n            <th>Last Name</th>\r\n            <th>Username</th>\r\n          </tr>\r\n        </thead>\r\n        <tbody>\r\n          <tr>\r\n            <th scope=\"row\">1</th>\r\n            <td>Mark</td>\r\n            <td>Otto</td>\r\n            <td>@mdo</td>\r\n          </tr>\r\n          <tr>\r\n            <th scope=\"row\">2</th>\r\n            <td>Jacob</td>\r\n            <td>Thornton</td>\r\n            <td>@fat</td>\r\n          </tr>\r\n          <tr>\r\n            <th scope=\"row\">3</th>\r\n            <td>Larry</td>\r\n            <td>the Bird</td>\r\n            <td>@twitter</td>\r\n          </tr>\r\n        </tbody>\r\n      </Table>\r\n\r\n      <br/><br/><h5>Hoverable</h5><br/>\r\n      <Table hover>\r\n        <thead>\r\n          <tr>\r\n            <th>#</th>\r\n            <th>First Name</th>\r\n            <th>Last Name</th>\r\n            <th>Username</th>\r\n          </tr>\r\n        </thead>\r\n        <tbody>\r\n          <tr>\r\n            <th scope=\"row\">1</th>\r\n            <td>Mark</td>\r\n            <td>Otto</td>\r\n            <td>@mdo</td>\r\n          </tr>\r\n          <tr>\r\n            <th scope=\"row\">2</th>\r\n            <td>Jacob</td>\r\n            <td>Thornton</td>\r\n            <td>@fat</td>\r\n          </tr>\r\n          <tr>\r\n            <th scope=\"row\">3</th>\r\n            <td>Larry</td>\r\n            <td>the Bird</td>\r\n            <td>@twitter</td>\r\n          </tr>\r\n        </tbody>\r\n      </Table>\r\n\r\n     <br/><br/><h5> Responsive Table </h5><br/>\r\n      <Table responsive>\r\n        <thead>\r\n          <tr>\r\n            <th>#</th>\r\n            <th>Table heading</th>\r\n            <th>Table heading</th>\r\n            <th>Table heading</th>\r\n            <th>Table heading</th>\r\n            <th>Table heading</th>\r\n            <th>Table heading</th>\r\n          </tr>\r\n        </thead>\r\n        <tbody>\r\n          <tr>\r\n            <th scope=\"row\">1</th>\r\n            <td>Table cell</td>\r\n            <td>Table cell</td>\r\n            <td>Table cell</td>\r\n            <td>Table cell</td>\r\n            <td>Table cell</td>\r\n            <td>Table cell</td>\r\n          </tr>\r\n          <tr>\r\n            <th scope=\"row\">2</th>\r\n            <td>Table cell</td>\r\n            <td>Table cell</td>\r\n            <td>Table cell</td>\r\n            <td>Table cell</td>\r\n            <td>Table cell</td>\r\n            <td>Table cell</td>\r\n          </tr>\r\n          <tr>\r\n            <th scope=\"row\">3</th>\r\n            <td>Table cell</td>\r\n            <td>Table cell</td>\r\n            <td>Table cell</td>\r\n            <td>Table cell</td>\r\n            <td>Table cell</td>\r\n            <td>Table cell</td>\r\n          </tr>\r\n        </tbody>\r\n      </Table> */}\r\n                               \r\n\r\n                                    </div>\r\n                                </div>\r\n\r\n\r\n                            </div>\r\n                        </section>\r\n                    </div>\r\n\r\n\r\n                        </Col>\r\n\r\n                    </Row>\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default UITables;\r\n","import moment from 'moment'; // Example for onSort prop\r\nimport React from 'react'; // Import React\r\n//import { render } from 'react-dom'; // Import render method\r\nimport Datatable from 'react-bs-datatable'; // Import this package\r\nimport {\r\n    Row, Col,\r\n} from 'reactstrap';\r\n\r\n\r\n\r\nconst header = [\r\n  { title: 'Assets', prop: 'id', sortable: false, filterable: false },\r\n  { title: 'Price', prop: 'name', sortable: false, filterable: false },\r\n  { title: '1 Day', prop: 'company', sortable: false, filterable: false },\r\n  { title: '30 Days', prop: 'email', sortable: false, filterable: false },\r\n  { title: '90 Days', prop: 'phone', sortable: false, filterable: false },\r\n  { title: 'Market Cap', prop: 'date', sortable: true, filterable: true },\r\n];\r\n\r\nconst body = [\r\n \r\n// {id: 50, name: \"Kevin Bowman\", company: \"Kwimbee\", email: \"kbowman1d@multiply.com\", phone: \"7-(325)789-1257\",     date: moment().subtract(50, 'days').format('Do MMMM YYYY')}\r\n\r\n];\r\n\r\nconst onSortFunction = {\r\n  date(columnValue) {\r\n    // Convert the string date format to UTC timestamp\r\n    // So the table could sort it by number instead of by string\r\n    return moment(columnValue, 'Do MMMM YYYY').valueOf();\r\n  },\r\n};\r\n\r\nconst customLabels = {\r\n  first: '<<',\r\n  last: '>>',\r\n  prev: '<',\r\n  next: '>',\r\n  show: 'Display ',\r\n  entries: ' rows',\r\n  noResults: 'There is no data to be displayed',\r\n};\r\n\r\nclass UIBSDatatable extends React.Component{\r\n\r\n    constructor(props){\r\n        super(props);\r\n\r\n        this.state = {\r\n            cryptos : [],\r\n            apiResponse:\"\"\r\n        }\r\n    }\r\n\r\n    // callAPI() {\r\n    //     fetch(\"http://localhost:9000/test\")\r\n    //         .then(res => res.text())\r\n    //         .then(res => this.setState({apiResponse: res}))\r\n    //         .catch(err => err);\r\n    // }\r\n\r\n    componentDidMount = () => {\r\n        // this.callAPI();\r\n    }\r\n   \r\n    \r\n    render(){\r\n\r\n        return (\r\n            <div>\r\n                <div className=\"content\">\r\n                    <Row>\r\n                        <Col xs={12} md={12}>\r\n\r\n                    <div className=\"page-title\">\r\n                        <div className=\"float-left\">\r\n                            <h1 className=\"title\">Market</h1>\r\n                            <p>{this.state.apiResponse}</p>\r\n                        </div>\r\n                    </div>\r\n\r\n\r\n                          \r\n\r\n                    <div className=\"col-12\" >\r\n                        <section className=\"box \">\r\n                            <header className=\"panel_header\">\r\n                                <h2 className=\"title float-left\">All Top ERC20 Based Tokens</h2>\r\n                                \r\n                            </header>\r\n                            <div className=\"content-body\">\r\n                                <div className=\"row\">\r\n                                    <div className=\"col-lg-12 dt-disp\">\r\n                            \r\n  {/* <Datatable\r\n  tableHeader={header}\r\n  tableBody={body}\r\n  keyName=\"userTable\"\r\n  tableClass=\"striped table-hover table-responsive\"\r\n  rowsPerPage={10}\r\n  rowsPerPageOption={[5, 10, 15, 20]}\r\n  initialSort={{prop: \"id\", isAscending: true}}\r\n  onSort={onSortFunction}\r\n  labels={customLabels}\r\n/> */}                              <div style={{textAlign:\"center\", height:'200px'}}>\r\n                                        <h2> Coming Soon ... </h2>\r\n                                    </div>\r\n\r\n                               \r\n\r\n                                    </div>\r\n                                </div>\r\n\r\n\r\n                            </div>\r\n                        </section>\r\n                    </div>\r\n\r\n\r\n                        </Col>\r\n\r\n                    </Row>\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default UIBSDatatable;\r\n","import General from 'views/general/Dashboard/General.jsx';\r\n \r\nimport GetDetails from 'views/general/Forms/GetDetails.jsx'\r\nimport FormPremade from 'views/general/Forms/Premade.jsx'; \r\n\r\nimport UITables from 'views/general/Tables/Tables.jsx';\r\n/*import UIDatatables from 'views/general/Tables/Datatables.jsx';*/\r\n\r\n/*import UIDatagridsort from 'views/general/Tables/Datagridsort.jsx';*/\r\nimport UIBSDatatable from 'views/general/Tables/BSDatatable.jsx';\r\n\r\n\r\n\r\nvar BASEDIR = \"/app\"\r\n\r\nvar dashRoutes = [\r\n\r\n    { path: BASEDIR+\"/dashboard\", name: \"Dashboard\", icon: \"speedometer\", component: General },\r\n\r\n\r\n    { path: BASEDIR+\"/history\", name: \"history\", icon: \"layers\", component: UITables },\r\n\r\n    { path: BASEDIR+\"/market\", name: \"Market\", icon: \"chart\", component: UIBSDatatable },\r\n\r\n    { path: BASEDIR+\"/kyc\", name: \"KYC\", icon: \"puzzle\", component: GetDetails },\r\n\r\n    { path: BASEDIR+\"/buy-payzus\", name: \"Buy Payzus\", icon: \"bag\", component: FormPremade },\r\n\r\n\r\n\r\n   \r\n\r\n    { redirect: true, path: BASEDIR+\"/\", pathTo: BASEDIR+\"/dashboard\", name: \"Dashboard\" },\r\n    { redirect: true, path: \"/\", pathTo: BASEDIR+\"/dashboard\", name: \"Dashboard\" }\r\n\r\n];\r\nexport default dashRoutes;\r\n","import React from 'react';\r\nimport {\r\n    Collapse, Navbar, NavbarBrand, Nav,\r\n    Dropdown, DropdownToggle, DropdownMenu, DropdownItem,\r\n    Container\r\n} from 'reactstrap';\r\n\r\n\r\nimport dashboardRoutes from 'routes/general.jsx';\r\n\r\nimport firebaseApp from \"../../../firebase-config\";\r\nimport MetamaskIcon from \"assets/img/MetaMask-Icon.png\"\r\n\r\n\r\nclass Header extends React.Component{\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            isOpen: false,\r\n            userddOpen: false,\r\n            searchOpen: false,\r\n            messagesddOpen: false,\r\n            notificationsddOpen: false,\r\n            color: \"primary\",\r\n            profilename: 'Eric Nelson',\r\n            profileimg: '',\r\n            accounts:\"\",\r\n            balance:\"\"\r\n        };\r\n        this.toggle = this.toggle.bind(this);\r\n        this.userddToggle = this.userddToggle.bind(this);\r\n        this.messagesddToggle = this.messagesddToggle.bind(this);\r\n        this.notificationsddToggle = this.notificationsddToggle.bind(this);\r\n        this.searchToggle = this.searchToggle.bind(this);\r\n\r\n    }\r\n\r\n    truncate(str) {\r\n        return str.length > 10  ? str.substring(0,6) + \"...\" + str.substring(38,42): str;\r\n    }\r\n\r\n    truncateBalance(str){\r\n        return str.length > 5  ? str.substring(0,10) : str;\r\n    }\r\n\r\n    toggle() {\r\n        if(this.state.isOpen){\r\n            this.setState({\r\n                color: \"primary\"\r\n            });\r\n        } else {\r\n            this.setState({\r\n                color: \"white\"\r\n            });\r\n        }\r\n        this.setState({\r\n            isOpen: !this.state.isOpen\r\n        });\r\n    }\r\n    userddToggle(e){\r\n        this.setState({\r\n            userddOpen: !this.state.userddOpen\r\n        });\r\n    }\r\n    searchToggle(){\r\n        //this.refs.searchbarToggle.classList.toggle('toggled');\r\n        this.setState({\r\n            searchOpen: !this.state.searchOpen\r\n        });\r\n        //console.log(this.state.searchOpen);\r\n        //this.refs.searchbarToggle.classList.toggle('opened');\r\n    }\r\n    messagesddToggle(e){\r\n        this.setState({\r\n            messagesddOpen: !this.state.messagesddOpen\r\n        });\r\n    }\r\n    notificationsddToggle(e){\r\n        this.setState({\r\n            notificationsddOpen: !this.state.notificationsddOpen\r\n        });\r\n    }\r\n    getBrand(){\r\n        var name;\r\n        dashboardRoutes.map((prop,key) => {\r\n            if(prop.collapse){\r\n                 prop.views.map((prop,key) => {\r\n                    if(prop.path === this.props.location.pathname){\r\n                        name = prop.name;\r\n                    }\r\n                    return null;\r\n                })\r\n            } else {\r\n                if(prop.redirect){\r\n                    if(prop.path === this.props.location.pathname){\r\n                        name = prop.name;\r\n                    }\r\n                }else{\r\n                    if(prop.path === this.props.location.pathname){\r\n                        name = prop.name;\r\n                    }\r\n                }\r\n            }\r\n            return null;\r\n        })\r\n        return name;\r\n    }\r\n    openSidebar(){\r\n        document.documentElement.classList.toggle('nav-toggle');\r\n        this.refs.sidebarToggle.classList.toggle('toggled');\r\n\r\n        // close chat bar if open on smaller screens\r\n        if(window.innerWidth < 993){\r\n            document.documentElement.classList.remove('nav-toggle-chat');\r\n           // this.refs.chatToggle.classList.remove('toggled');\r\n        }\r\n    }\r\n    openChat(){\r\n        document.documentElement.classList.toggle('nav-toggle-chat');\r\n       // this.refs.chatToggle.classList.toggle('toggled');\r\n\r\n        // close menu bar if open on smaller screens\r\n        if(window.innerWidth < 993){\r\n            document.documentElement.classList.remove('nav-toggle');\r\n            this.refs.sidebarToggle.classList.remove('toggled');\r\n        }\r\n    }\r\n    toggle_grid(){\r\n        document.documentElement.classList.toggle('toggle-grid');\r\n    }\r\n\r\n\r\n    openStyle(){\r\n        document.documentElement.classList.toggle('nav-toggle-style');\r\n       // this.refs.chatToggle.classList.toggle('toggled');\r\n\r\n        // close menu bar if open on smaller screens\r\n        /*if(window.innerWidth < 993){\r\n            document.documentElement.classList.remove('nav-toggle');\r\n            this.refs.sidebarToggle.classList.remove('toggled');\r\n        }*/\r\n    }\r\n    // function that adds color white/transparent to the navbar on resize (this is for the collapse)\r\n    updateColor(){\r\n        if(window.innerWidth < 993 && this.state.isOpen){\r\n            this.setState({\r\n                color: \"primary\"\r\n            });\r\n        } else {\r\n            this.setState({\r\n                color: \"primary\"\r\n            });\r\n        }\r\n\r\n    }\r\n    componentDidMount(){\r\n        if(this.props.navtype === \"mini\"){\r\n            document.documentElement.classList.add('nav-toggle');\r\n            this.refs.sidebarToggle.classList.add('toggled');\r\n        } else {\r\n            document.documentElement.classList.remove('nav-toggle');\r\n            this.refs.sidebarToggle.classList.remove('toggled');\r\n        }\r\n        window.addEventListener(\"resize\", this.updateColor.bind(this));\r\n\r\n            if(this.props.admintype === 'general'){\r\n                this.setState({     \r\n                    profileimg: '',\r\n                    profilename: ''\r\n                });  \r\n              \r\n                }\r\n\r\n\r\n\r\n    }\r\n    componentDidUpdate(e){\r\n        if(window.innerWidth < 993 && e.history.location.pathname !== e.location.pathname && document.documentElement.className.indexOf('nav-toggle') !== -1){\r\n            document.documentElement.classList.toggle('nav-toggle');\r\n            this.refs.sidebarToggle.classList.toggle('toggled');\r\n        }\r\n        if(window.innerWidth < 993 && e.history.location.pathname !== e.location.pathname && document.documentElement.className.indexOf('nav-toggle-chat') !== -1){\r\n            document.documentElement.classList.toggle('nav-toggle-chat');\r\n           // this.refs.chatToggle.classList.toggle('toggled');\r\n        }\r\n    }\r\n\r\n\r\n    handleLogout = () => {\r\n        firebaseApp.auth().signOut()\r\n            .then(function() {\r\n                window.location.href = \"/login\"\r\n                \r\n            })\r\n            .catch(error => {\r\n                var errorMessage = error.message;\r\n                alert(errorMessage)\r\n            })\r\n    }\r\n\r\n    render(){\r\n        return (\r\n            // add or remove classes depending if we are on full-screen-maps page or not\r\n            <Navbar expand=\"lg\"\r\n                className={\r\n                    this.props.location.pathname.indexOf('full-screen-maps') !== -1 ?\r\n                    \"navbar-absolute fixed-top\":\"navbar-absolute fixed-top \"}>\r\n                <Container fluid>\r\n                    <div className=\"navbar-wrapper\">\r\n                        <div className=\"navbar-toggle\">\r\n                            <button type=\"button\" ref=\"sidebarToggle\" className=\"navbar-toggler\" onClick={() => this.openSidebar()}>\r\n                                <i className=\"i-menu\"></i>\r\n                            </button>\r\n                        </div>\r\n\r\n\r\n                           \r\n                                <h2>\r\n                                    {\r\n                                        this.props.account === ''\r\n                                        ? (<p>0 ETH</p>)\r\n                                        : this.truncateBalance(this.props.balance) + ' ETH'\r\n                                    }\r\n                                </h2>\r\n\r\n\r\n                        <NavbarBrand href=\"/\">{this.getBrand()}</NavbarBrand>\r\n\r\n\r\n\r\n                    </div>\r\n                    \r\n                    <Collapse isOpen={this.state.isOpen} navbar className=\"navbar-right\" style={{marginRight:\"20px\"}}>\r\n                        {/* <img src=\"/assets/img/logo-mini.png\" alt=\"react-logo\" className=\"avatar-image\" />  */}\r\n                        \r\n                        \r\n                        <Nav navbar>\r\n                            <Dropdown nav isOpen={this.state.userddOpen} toggle={(e) => this.userddToggle(e)} className=\"userdd\" >\r\n                                <DropdownToggle caret nav>\r\n                                   <img src={MetamaskIcon} alt=\"Metamask\" className=\"avatar-image\" style={{height:'25px'}}/> \r\n                                   {/* <span>{this.truncate(this.props.account)}</span>\r\n                                   <i class=\"fa fa-user\" aria-hidden=\"true\" style={{marginLeft:\"20px\"}}></i> */}\r\n                                   \r\n                                </DropdownToggle>\r\n                                <DropdownMenu right>\r\n                                    {/* <DropdownItem tag=\"a\"><i className=\"i-wrench\" href=\"#!\"></i> Settings</DropdownItem>\r\n                                    <DropdownItem tag=\"a\"><i className=\"i-user\" href=\"#!\"></i> Profile</DropdownItem> */}\r\n                                    <DropdownItem tag=\"button\"  onClick={this.props.connectWallet}><i className=\"i-info\"></i>\r\n                                        {\r\n                                            this.props.walletConnected\r\n                                            ? <p>Change Wallet</p>\r\n                                            : <p >Connect Wallet</p>\r\n                                        }\r\n                                    </DropdownItem>\r\n                                    \r\n                                    <DropdownItem tag=\"button\" className=\"\" onClick={this.props.disconnect}><i className=\"i-info\"></i> Disconnect Wallet</DropdownItem>\r\n                                    <DropdownItem tag=\"button\" onClick={this.handleLogout}><i className=\"i-lock\"></i> LogOut</DropdownItem>\r\n                                </DropdownMenu>\r\n                            </Dropdown>\r\n                            {/* <NavItem>\r\n                                <div className=\"navbar-toggle chat-toggle\">\r\n                                    <button type=\"button\" ref=\"chatToggle\" className=\"navbar-toggler\" onClick={() => this.openChat()}>\r\n                                            <i className=\"i-bubbles\"></i>\r\n                                            <span className=\"badge badge-pill badge-primary\">9</span>\r\n                                    </button>\r\n                                </div>\r\n\r\n                                \r\n\r\n\r\n                            </NavItem> */}\r\n                        </Nav>\r\n                        <div className=\"screensize\" onClick={() => this.toggle_grid()}></div>\r\n                    </Collapse>\r\n                </Container>\r\n            </Navbar>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Header;","import React from 'react';\r\nimport { Container } from 'reactstrap';\r\n// used for making the prop types of this component\r\nimport PropTypes from 'prop-types';\r\n\r\nclass Footer extends React.Component{\r\n    render(){\r\n        return (\r\n            <footer className={\"footer\"\r\n                + (this.props.default ? \" footer-default\":\"\")\r\n            }>\r\n                <Container fluid={this.props.fluid ? true:false}>\r\n                    \r\n                    <div className=\"copyright\">\r\n                        &copy; {1900 + (new Date()).getYear()}, <a href=\"#!\" target=\"_blank\" rel=\"noopener noreferrer\">Payzus</a> | All rights reserved\r\n                    </div>\r\n                </Container>\r\n            </footer>\r\n        );\r\n    }\r\n}\r\n\r\nFooter.propTypes = {\r\n    default: PropTypes.bool,\r\n    fluid: PropTypes.bool\r\n}\r\n\r\nexport default Footer;\r\n","// ##############################\r\n// // // top bar dropdown data\r\n// #############################\r\n\r\nvar IMGDIR = process.env.REACT_APP_IMGDIR;\r\nconst messages = [\r\n    {avatar: IMGDIR+\"/images/profile/avatar-1.jpg\", name: \"John Doug\", time: \"15 mins ago\", status: \"available\", type: \"read\", msg: 'Sometimes it takes a lifetime to win a battle!'},\r\n    {avatar: IMGDIR+\"/images/profile/avatar-2.jpg\", name: \"Ben Shaw\", time: \"35 mins ago\", status: \"busy\", type: \"read\", msg: 'We are having a get together today. See you soon'},\r\n    {avatar: IMGDIR+\"/images/profile/avatar-3.jpg\", name: \"Harley Stokes\", time: \"45 mins ago\", status: \"away\", type: \"unread\", msg: 'In times like this, it makes true sense to chill'},\r\n    {avatar: IMGDIR+\"/images/profile/avatar-4.jpg\", name: \"Kate Pollard\", time: \"50 mins ago\", status: \"offline\", type: \"read\", msg: 'Making something happen beyond imagination'},\r\n];\r\n\r\nconst notifications = [\r\n    {icon: \"check\", title: \"Email subscriptions done\", time: \"10 mins ago\", status: \"available\", type: \"read\"},\r\n    {icon: \"envelope\", title: \"Server Maintainance time\", time: \"33 mins ago\", status: \"busy\", type: \"read\"},\r\n    {icon: \"paper-plane\", title: \"New users integrated\", time: \"25 mins ago\", status: \"away\", type: \"unread\"},\r\n    {icon: \"user\", title: \"Messages sent to all members\", time: \"40 mins ago\", status: \"offline\", type: \"read\"},\r\n];\r\n\r\n// chat bar data\r\nconst chatgroups = [\r\n    {name: \"Family\", color: \"available\"},\r\n    {name: \"Friends\", color: \"away\"},\r\n    {name: \"Work\", color: \"busy\"},\r\n];\r\n\r\nconst favcontacts = [\r\n    {avatar: IMGDIR+\"/images/profile/avatar-5.jpg\", name: \"Jane King\", status: \"available\" },\r\n    {avatar: IMGDIR+\"/images/profile/avatar-9.jpg\", name: \"Brooks Larson\", status: \"busy\" },\r\n    {avatar: IMGDIR+\"/images/profile/avatar-2.jpg\", name: \"Neil Parker\", status: \"away\"},\r\n    {avatar: IMGDIR+\"/images/profile/avatar-4.jpg\", name: \"Denwer Jean\", status: \"offline\" },\r\n];\r\n\r\nconst allcontacts = [\r\n    {avatar: IMGDIR+\"/images/profile/avatar-2.jpg\", name: \"Karl Butler\", status: \"busy\" },\r\n    {avatar: IMGDIR+\"/images/profile/avatar-1.jpg\", name: \"Mark Warne\", status: \"available\" },\r\n    {avatar: IMGDIR+\"/images/profile/avatar-6.jpg\", name: \"Jean Denwer\", status: \"offline\" },\r\n    {avatar: IMGDIR+\"/images/profile/avatar-4.jpg\", name: \"Shaun Busey\", status: \"away\"},\r\n    {avatar: IMGDIR+\"/images/profile/avatar-7.jpg\", name: \"Brooks Shaw\", status: \"busy\" },\r\n    {avatar: IMGDIR+\"/images/profile/avatar-8.jpg\", name: \"John Nelson\", status: \"available\" },\r\n    {avatar: IMGDIR+\"/images/profile/avatar-9.jpg\", name: \"Peter Anderson\", status: \"offline\" },\r\n    {avatar: IMGDIR+\"/images/profile/avatar-11.jpg\", name: \"Carol Blake\", status: \"away\"},\r\n    {avatar: IMGDIR+\"/images/profile/avatar-12.jpg\", name: \"Diana Bailey\", status: \"busy\" },\r\n    {avatar: IMGDIR+\"/images/profile/avatar-10.jpg\", name: \"Ella Arnold\", status: \"available\" },\r\n    {avatar: IMGDIR+\"/images/profile/avatar-1.jpg\", name: \"Harry Bower\", status: \"offline\" },\r\n    {avatar: IMGDIR+\"/images/profile/avatar-3.jpg\", name: \"David Bond\", status: \"away\"},\r\n];\r\n\r\nexport {\r\n    chatgroups, // chat groups for chat area in right sidebar\r\n    favcontacts, // favourite contacts for chat area in right sidebar\r\n    allcontacts, // all contacts for chat area in right sidebar\r\n    messages, // messages list for top bar messages drop down\r\n    notifications, // data for <thead> of table in TableList view\r\n};\r\n","import React from 'react';\r\nimport { ListGroup, ListGroupItem } from 'reactstrap';\r\n\r\n// used for making the prop types of this component\r\nimport PropTypes from 'prop-types';\r\n\r\n\r\nclass Favcontact extends React.Component{ \r\n    render(){\r\n        var favcontactsList = [];\r\n        for (var i = 0; i < this.props.favcontacts.length; i++) {\r\n            favcontactsList.push(\r\n                <ListGroupItem key={i} className=\"contact\">\r\n                    <div className=\"user-img\">\r\n                        <img src={this.props.favcontacts[i].avatar} alt=\"user avatar\" className=\"avatar-image img-inline\"/>\r\n                    </div>\r\n                    <div className=\"user-info\">\r\n                            <span className=\"name\">{ this.props.favcontacts[i].name }</span>\r\n                            <span className=\"status small\">{ this.props.favcontacts[i].status }</span>\r\n                            <span data-status={this.props.favcontacts[i].status} className = \"profile-status float-right\"></span>\r\n                    </div>                        \r\n                </ListGroupItem>\r\n            );\r\n        }\r\n        return (          \r\n                                <div>\r\n                                <ListGroup>\r\n                                       { favcontactsList }\r\n                                </ListGroup>\r\n                                </div>\r\n        );\r\n    }\r\n}\r\n\r\nFavcontact.propTypes = {\r\n    favcontacts: PropTypes.arrayOf(PropTypes.object)\r\n}\r\n\r\nexport default Favcontact;\r\n","import React from 'react';\r\nimport { ListGroup, ListGroupItem } from 'reactstrap';\r\n\r\n// used for making the prop types of this component\r\nimport PropTypes from 'prop-types';\r\n\r\n\r\nclass Allcontact extends React.Component{ \r\n    render(){\r\n        var allcontactsList = [];\r\n        for (var i = 0; i < this.props.allcontacts.length; i++) {\r\n            allcontactsList.push(\r\n                <ListGroupItem key={i} className=\"contact\">\r\n                    <div className=\"user-img\">\r\n                        <img src={this.props.allcontacts[i].avatar} alt=\"user avatar\" className=\"avatar-image img-inline\"/>\r\n                    </div>\r\n                    <div className=\"user-info\">\r\n                            <span className=\"name\">{ this.props.allcontacts[i].name }</span>\r\n                            <span className=\"status small\">{ this.props.allcontacts[i].status }</span>\r\n                            <span data-status={this.props.allcontacts[i].status} className = \"profile-status float-right\"></span>\r\n                    </div>                        \r\n                </ListGroupItem>\r\n            );\r\n        }\r\n        return (          \r\n                                <div>\r\n                                <ListGroup>\r\n                                       { allcontactsList }\r\n                                </ListGroup>\r\n                                </div>\r\n        );\r\n    }\r\n}\r\n\r\nAllcontact.propTypes = {\r\n    allcontacts: PropTypes.arrayOf(PropTypes.object)\r\n}\r\n\r\nexport default Allcontact;\r\n","import React from 'react';\r\nimport { ListGroup, ListGroupItem } from 'reactstrap';\r\n// used for making the prop types of this component\r\nimport PropTypes from 'prop-types';\r\n\r\n\r\nclass Chatgroup extends React.Component{ \r\n    render(){\r\n        var chatgroupsList = [];\r\n        for (var i = 0; i < this.props.chatgroups.length; i++) {\r\n            chatgroupsList.push(\r\n                <ListGroupItem key={i}>\r\n                    <div className=\"user-info groupname\">\r\n                            <span data-status={this.props.chatgroups[i].color} className = \"profile-status\"></span>\r\n                            <span className=\"name\">{ this.props.chatgroups[i].name }</span>\r\n                    </div>                        \r\n                </ListGroupItem>\r\n            );\r\n        }\r\n        return (          \r\n                                <div>\r\n                                <ListGroup>\r\n                                       { chatgroupsList }\r\n                                </ListGroup>\r\n                                </div>\r\n        );\r\n    }\r\n}\r\n\r\nChatgroup.propTypes = {\r\n    chatgroups: PropTypes.arrayOf(PropTypes.object)\r\n}\r\n\r\nexport default Chatgroup;\r\n","import React from 'react';\r\nimport { DropdownMenu, DropdownItem, } from 'reactstrap';\r\n// used for making the prop types of this component\r\nimport PropTypes from 'prop-types';\r\n\r\n\r\nclass Notification extends React.Component{\r\n    render(){\r\n        var notificationsList = [];\r\n        for (var i = 0; i < this.props.notifications.length; i++) {\r\n            notificationsList.push(\r\n                <DropdownItem tag=\"a\" className={this.props.notifications[i].type} key={i}>\r\n                    <div className=\"notify-icon\" data-status={this.props.notifications[i].status}>\r\n                        <i className={'i-' + this.props.notifications[i].icon}></i>\r\n                    </div>\r\n                    <div className=\"notify-info\">\r\n                        <span className=\"title\">\r\n                            { this.props.notifications[i].title }\r\n                            <span className=\"time small\">{ this.props.notifications[i].time }</span>\r\n                            <span data-status={this.props.notifications[i].status} className = \"profile-status float-right\"></span>\r\n                        </span>\r\n                    </div>                        \r\n                </DropdownItem>\r\n            );\r\n        }\r\n        return (          \r\n                                <DropdownMenu>\r\n                                       { notificationsList }\r\n                                </DropdownMenu>\r\n        );\r\n    }\r\n}\r\n\r\nNotification.propTypes = {\r\n    notifications: PropTypes.arrayOf(PropTypes.object)\r\n}\r\n\r\nexport default Notification;\r\n","import React from 'react';\r\nimport { DropdownMenu, DropdownItem, } from 'reactstrap';\r\n// used for making the prop types of this component\r\nimport PropTypes from 'prop-types';\r\n\r\n\r\nclass Message extends React.Component{ \r\n    render(){\r\n        var messagesList = [];\r\n        for (var i = 0; i < this.props.messages.length; i++) {\r\n            messagesList.push(\r\n                <DropdownItem tag=\"a\" className={this.props.messages[i].type} key={i}>\r\n                    <div className=\"user-img\">\r\n                        <img src={this.props.messages[i].avatar} alt=\"user avatar\" className=\"avatar-image img-inline\"/>\r\n                    </div>\r\n                    <div className=\"user-info\">\r\n                        <span className=\"name\">\r\n                            { this.props.messages[i].name }\r\n                            <span className=\"time small\"> - { this.props.messages[i].time }</span>\r\n                            <span data-status={this.props.messages[i].status} className = \"profile-status float-right\"></span>\r\n                        </span>\r\n                        <span className=\"desc small\">\r\n                            { this.props.messages[i].msg }\r\n                        </span>\r\n                    </div>                        \r\n                </DropdownItem>\r\n            );\r\n        }\r\n        return (          \r\n                                <DropdownMenu>\r\n                                       { messagesList }\r\n                                </DropdownMenu>\r\n        );\r\n    }\r\n}\r\n\r\nMessage.propTypes = {\r\n    messages: PropTypes.arrayOf(PropTypes.object)\r\n}\r\n\r\nexport default Message;\r\n","import React from 'react';\r\nimport { NavLink } from 'react-router-dom';\r\n// used for making the prop types of this component\r\nimport PropTypes from 'prop-types';\r\n\r\n//var BASEDIR = process.env.REACT_APP_BASEDIR;\r\n\r\n\r\nclass Mailbox extends React.Component{ \r\n    render(){\r\n        var mailboxList = [];\r\n        for (var i = 0; i < this.props.mailbox.length; i++) {\r\n            mailboxList.push(\r\n                    <tr className=\"unread\" id=\"mail_msg_1\" key={i}>\r\n                        <td className=\"check\"><input type=\"checkbox\"/></td>\r\n                        <td className=\"imp\">\r\n                            <div className=\"star\"><i className={'icon-xs ' + (this.props.mailbox[i].star === \"1\" ? \"i-star icon-accent\" : \"i-star icon-secondary\")}></i></div>\r\n                        </td>\r\n                        <td className=\"user-img\">\r\n                                <img src={this.props.mailbox[i].avatar} alt=\"user avatar\" className=\"avatar-image img-inline\"/>\r\n                        </td>\r\n                        <td className=\"open-view\">\r\n                            <span className=\"msgtext\"><NavLink to={'#!'}>{ this.props.mailbox[i].msg }</NavLink></span>\r\n                            <span className=\"msgby\">{ this.props.mailbox[i].name }</span>\r\n                        </td>\r\n                        <td className=\"tag\">\r\n                            <span className={\"badge \" + (this.props.mailbox[i].tag === \"Family\"? \"badge-primary\" : \"\") + (this.props.mailbox[i].tag === \"Work\"? \"badge-accent\" : \"\") + (this.props.mailbox[i].tag === \"Friends\"? \"badge-purple\" : \"\")}>{this.props.mailbox[i].tag}</span>\r\n                        </td>\r\n                        <td className=\"timestamp\"><span className=\"msg_time\"><NavLink to={'#!'}>{ this.props.mailbox[i].time }</NavLink></span></td>\r\n                    </tr>\r\n                /*<div tag=\"a\" className={this.props.mailbox[i].type} key={i}>\r\n                    <div className=\"user-img\">\r\n                        <img src={this.props.mailbox[i].avatar} alt=\"user avatar\" className=\"avatar-image img-inline\"/>\r\n                    </div>\r\n                    <div className=\"user-info\">\r\n                        <span className=\"name\">\r\n                            <strong>{ this.props.mailbox[i].name }</strong>\r\n                            <span className=\"time small\"> - { this.props.mailbox[i].time }</span>\r\n                            <span data-status={this.props.mailbox[i].status} className = \"profile-status float-right\"></span>\r\n                        </span>\r\n                        <span className=\"desc small\">\r\n                            { this.props.mailbox[i].msg }\r\n                        </span>\r\n                    </div>                        \r\n                </div>*/\r\n            );\r\n        }\r\n        return (          \r\n                                <div className=\"mail_list col-12\">\r\n                                    <table className=\"table table-responsive\">\r\n                                        <tbody>\r\n                                            { mailboxList }\r\n                                        </tbody>\r\n                                    </table>\r\n                                </div>\r\n        );\r\n    }\r\n}\r\n\r\nMailbox.propTypes = {\r\n    mailbox: PropTypes.arrayOf(PropTypes.object)\r\n}\r\n\r\nexport default Mailbox;\r\n","import React from 'react';\r\n// used for making the prop types of this component\r\nimport PropTypes from 'prop-types';\r\n\r\nclass CardAuthor extends React.Component{\r\n    render(){\r\n        return (\r\n            <div className=\"author\">\r\n                <a href={this.props.link ? this.props.link:\"#\"}>\r\n                    <img className=\"avatar border-gray\" src={this.props.avatar} alt={this.props.avatarAlt} />\r\n                    <h5 className=\"title\">{this.props.title}</h5>\r\n                </a>\r\n                <p className=\"description\">\r\n                    {this.props.description}\r\n                </p>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nCardAuthor.propTypes = {\r\n    // Where the user to be redirected on clicking the avatar\r\n    link: PropTypes.string,\r\n    avatar: PropTypes.string,\r\n    avatarAlt: PropTypes.string,\r\n    title: PropTypes.oneOfType([\r\n        PropTypes.string,\r\n        PropTypes.node\r\n    ]),\r\n    description: PropTypes.oneOfType([\r\n        PropTypes.string,\r\n        PropTypes.node\r\n    ])\r\n}\r\n\r\nexport default CardAuthor;\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\nclass CardCategory extends React.Component{\r\n    render(){\r\n        return (\r\n            <h5 className=\"card-category\">\r\n                {this.props.children}\r\n            </h5>\r\n        );\r\n    }\r\n};\r\n\r\nCardCategory.propTypes = {\r\n    children: PropTypes.any\r\n};\r\n\r\nexport default CardCategory;\r\n","import React from 'react';\r\n// used for making the prop types of this component\r\nimport PropTypes from 'prop-types';\r\n\r\nimport { Button } from 'components';\r\n\r\nclass CardSocials extends React.Component{\r\n    render(){\r\n        return (\r\n            <div className=\"button-container\">\r\n                {\r\n                    this.props.socials.map((prop,key) => {\r\n                        return (\r\n                            <Button color=\"neutral\" icon round size={this.props.size} key={key} href={prop.link}>\r\n                                <i className={prop.icon}></i>\r\n                            </Button>\r\n                        );\r\n                    })\r\n                }\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nCardSocials.propTypes = {\r\n    // size of all social buttons\r\n    size: PropTypes.oneOf(['sm','lg']),\r\n    // example: [{icon: \"name of icon\", href=\"href of icon\"},...]\r\n    socials: PropTypes.arrayOf(PropTypes.object)\r\n}\r\n\r\nexport default CardSocials;\r\n","import React, { Component } from 'react';\r\nimport { Button } from 'reactstrap';\r\n// used to make this component's props into classes\r\nimport cx from 'classnames';\r\n// used for making the prop types of this component\r\nimport PropTypes from 'prop-types';\r\n\r\n\r\nclass CustomButton extends Component {\r\n    render() {\r\n        const {\r\n            simple, round, icon, neutral, iconMini, leftLabel, rightLabel, wd, className,\r\n            twitter, facebook, google, linkedin, pinterest, youtube, tumblr, github, behance, dribbble, reddit, stumbleupon,\r\n             ...rest\r\n         } = this.props;\r\n\r\n        var btnClasses = cx({\r\n            'btn-simple': simple,\r\n            'btn-round': round,\r\n            'btn-icon': icon,\r\n            'btn-neutral': neutral,\r\n            'btn-icon btn-icon-mini': iconMini,\r\n            'btn-wd': wd,\r\n        });\r\n\r\n        if(className !== undefined){\r\n            btnClasses += \" \"+className;\r\n        }\r\n\r\n        return (\r\n            <Button className={btnClasses} {...rest}>\r\n                {leftLabel ? (<span className=\"btn-label\"><i className={leftLabel}></i> </span>):null}\r\n                {this.props.children}\r\n                {rightLabel ? (<span className=\"btn-label btn-label-right\"><i className={rightLabel}></i> </span>):null}\r\n            </Button>\r\n        );\r\n    }\r\n}\r\n\r\nCustomButton.propTypes = {\r\n    simple: PropTypes.bool,\r\n    round: PropTypes.bool,\r\n    icon: PropTypes.bool,\r\n    neutral: PropTypes.bool,\r\n    iconMini: PropTypes.bool,\r\n    wd: PropTypes.bool,\r\n}\r\n\r\nexport default CustomButton;\r\n","import React from 'react';\r\nimport { FormGroup, Label, Input } from 'reactstrap';\r\n// used for making the prop types of this component\r\nimport PropTypes from 'prop-types';\r\n\r\nclass SimpleCheckbox extends React.Component{\r\n    render(){\r\n        return (\r\n            <FormGroup check {...this.props.formGroupProps}>\r\n                <Label check {...this.props.labelProps}>\r\n                    <Input type=\"checkbox\" {...this.props.inputProps} />\r\n                    <span className=\"form-check-sign\"></span>\r\n                    {this.props.label ? this.props.label : \"\"}\r\n                </Label>\r\n            </FormGroup>\r\n        );\r\n    }\r\n}\r\n\r\nSimpleCheckbox.propTypes = {\r\n    label: PropTypes.node\r\n}\r\n\r\nexport default SimpleCheckbox;\r\n","import React from 'react';\r\nimport {\r\n    FormGroup, Label, Input\r\n} from 'reactstrap';\r\n// used for making the prop types of this component\r\nimport PropTypes from 'prop-types';\r\n\r\nclass CustomRadio extends React.Component{\r\n    render(){\r\n        var classes = \"\";\r\n        if(this.props.formGroupProps !== undefined){\r\n            if(this.props.formGroupProps.className !== undefined){\r\n                classes += \" \" + this.props.formGroupProps.className;\r\n            }\r\n        }\r\n        return (\r\n            <FormGroup check {...this.props.formGroupProps} className={\"form-check-radio\" + classes}>\r\n                <Label check {...this.props.labelProps}>\r\n                    <Input {...this.props.inputProps} type=\"radio\"/>\r\n                    <span className=\"form-check-sign\"></span>\r\n                    {this.props.label ? this.props.label : \"\"}\r\n                </Label>\r\n            </FormGroup>\r\n        );\r\n    }\r\n}\r\n\r\nCustomRadio.propTypes = {\r\n    label: PropTypes.node\r\n}\r\n\r\nexport default CustomRadio;\r\n","import React, { Component } from 'react';\r\nimport { FormGroup, Label, Input, InputGroup, InputGroupAddon } from 'reactstrap';\r\n// used for making the prop types of this component\r\nimport PropTypes from 'prop-types';\r\n\r\nclass FieldGroup extends React.Component {\r\n    constructor(props){\r\n        super(props);\r\n        this.state = {\r\n            focus: false\r\n        }\r\n    }\r\n    render(){\r\n        const { label,addonLeft,addonRight, formGroupProps, labelProps, inputProps, inputGroupProps, inputGroupAddonProps } = this.props;\r\n        var classes = \" \";\r\n        if(inputGroupProps !== undefined){\r\n            if(inputGroupProps.className !== undefined){\r\n                classes+=inputGroupProps.className+\" \";\r\n            }\r\n        }\r\n        if(addonLeft !== undefined || addonRight !== undefined)\r\n            return (\r\n                <InputGroup {...inputGroupProps} className={classes+(this.state.focus?\"input-group-focus\":\"\")}>\r\n                    {addonLeft !== undefined ? (<InputGroupAddon {...inputGroupAddonProps}>{addonLeft}</InputGroupAddon>):\"\"}\r\n                    <Input {...inputProps} onFocus={(e) => this.setState({focus:true})} onBlur={(e) => this.setState({focus:false})}/>\r\n                    {addonRight !== undefined ? (<InputGroupAddon {...inputGroupAddonProps}>{addonRight}</InputGroupAddon>):\"\"}\r\n                </InputGroup>\r\n            )\r\n        return (\r\n            inputProps.type === \"radio\" || inputProps.type === \"checkbox\" ? (\r\n                <FormGroup {...formGroupProps} className={inputProps.type === \"radio\" ? \"form-check-radio\":\"\"}>\r\n                    <Label {...labelProps}>\r\n                        <Input {...inputProps} />\r\n                        <span className=\"form-check-sign\"></span>\r\n                        {label ? label : \"\"}\r\n                    </Label>\r\n                </FormGroup>):(\r\n                <FormGroup {...formGroupProps}>\r\n                    {label ? <Label {...labelProps}>{label}</Label>:\"\"}\r\n                    <Input {...inputProps} />\r\n                </FormGroup>)\r\n        );\r\n    }\r\n}\r\n\r\nexport class FormInputs extends Component{\r\n    render(){\r\n        var row = [];\r\n        for(var i = 0; i < this.props.ncols.length ; i++){\r\n            row.push(\r\n                <div key={i} className={this.props.ncols[i]}>\r\n                    <FieldGroup\r\n                        {...this.props.proprieties[i]}\r\n                    />\r\n                </div>\r\n            );\r\n        }\r\n        return (\r\n            <div className=\"row\">\r\n                {row}\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nFormInputs.propTypes = {\r\n    ncols: PropTypes.arrayOf(PropTypes.string),\r\n    proprieties: PropTypes.arrayOf(PropTypes.object)\r\n}\r\n\r\nexport default FormInputs;\r\n","import React from 'react';\r\nimport { NavLink } from 'react-router-dom';\r\nimport { Nav } from 'reactstrap';\r\n\r\nclass Navmenudropdown extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.addClickClass= this.addClickClass.bind(this);\r\n        this.state = {\r\n            activate: false\r\n          }\r\n    }\r\n    addClickClass() {\r\n        this.setState({\r\n            activate: !this.state.activate\r\n          })\r\n    }\r\n\r\n    render() {\r\n        const children = (child) => {\r\n            var links = [];\r\n            if (child) {\r\n                for (var i = 0; i < child.length; i++) {\r\n                    links.push(\r\n                        <li key={i}>\r\n                            <NavLink to={child[i].path} className=\"nav-link\" activeClassName=\"active\">\r\n                                <span>{child[i].name}</span>\r\n                            </NavLink>\r\n                        </li>\r\n                    );\r\n                }\r\n                return <Nav>{links}</Nav>\r\n            }\r\n        }\r\n\r\n        return (\r\n            <li className={(this.state.activate ? 'active': '') + \" \" + this.props.openclass} data-toggle=\"collapse\">\r\n                <a href=\"#!\" to={this.props.path} className=\"nav-link\" onClick={this.addClickClass}>\r\n                                            <i className={\"i-\"+this.props.icon}></i>\r\n                                            <p>{this.props.name}</p>\r\n                                            <span className=\"badge\">{this.props.badge}</span>\r\n                                            <span className={\"arrow i-arrow-left\"}></span>\r\n                </a>\r\n                { children(this.props.child) }\r\n            </li>\r\n        )\r\n  }\r\n}\r\nexport default Navmenudropdown;","import React from 'react';\r\n\r\nclass Navmenugroup extends React.Component {\r\n    render() {\r\n\r\n        return (\r\n            <li className=\"navgroup\">\r\n                    <div>{this.props.name}</div>\r\n            </li>\r\n        )\r\n  }\r\n}\r\nexport default Navmenugroup;","/***********************************\r\n    // Menu Style Color\r\n    // black, white, teal, purple, red, pink, orange, transparent, image1, image2, image3, image4\r\n***********************************/\r\nconst menuStyle = \"black\";\r\n\r\n\r\n/***********************************\r\n    // Menu Type\r\n    // dark, light, colored\r\n***********************************/\r\nconst menuType = \"dark\";\r\n\r\n\r\n\r\n/***********************************\r\n    // Top Bar Style Color\r\n    // black, white, teal, purple, red, pink, orange, transparent, image1, image2, image3, image4\r\n***********************************/\r\nconst topbarStyle = \"white\";\r\n\r\n\r\n/***********************************\r\n    // Top bar Type\r\n    // dark, light, colored\r\n***********************************/\r\nconst topbarType = \"light\";\r\n\r\n/***********************************\r\n    // Navigation Width\r\n    // default, mini\r\n***********************************/\r\nconst navWidth = \"default\";\r\n\r\n/***********************************\r\n    // Chat Type\r\n    // overlap, squeeze\r\n***********************************/\r\nconst chatType = \"overlap\";\r\n\r\n/***********************************\r\n    // Chat Width\r\n    // closed, open\r\n***********************************/\r\nconst chatWidth = \"closed\";\r\n\r\n\r\nexport {\r\n    menuStyle,\r\n    topbarStyle,\r\n    menuType,\r\n    topbarType,\r\n    navWidth,\r\n    chatWidth,\r\n    chatType,\r\n};\r\n","import React from 'react';\r\nimport { NavLink } from 'react-router-dom';\r\n// used for making the prop types of this component\r\nimport PropTypes from 'prop-types';\r\n\r\nvar BASEDIR = process.env.REACT_APP_BASEDIR;\r\n\r\nclass BlogPosts extends React.Component{ \r\n    render(){\r\n        var blogsList = [];\r\n        for (var i = 0; i < this.props.blogs.length; i++) {\r\n            blogsList.push(\r\n\r\n                        <div className=\"col-12 col-md-6\" key={i}>\r\n                                        <div className=\"blog_post\">\r\n                                            <img className=\"media-object\" src={this.props.blogs[i].image} alt=\"\" />\r\n                                            <h3 className=\"blogtitle\"><NavLink to={BASEDIR+'/ui-blog-item'}>{this.props.blogs[i].title}</NavLink></h3>\r\n                                            <p className=\"post-by\">Written by <a href=\"#!\">{this.props.blogs[i].author}</a> on {this.props.blogs[i].date}.</p>\r\n                                            <p className=\"blog-content\">{this.props.blogs[i].description}</p>\r\n                                        </div>\r\n                        </div>\r\n            );\r\n        }\r\n        return (          \r\n                                <div className=\"row\">\r\n                                       { blogsList }\r\n                                </div>\r\n        );\r\n    }\r\n}\r\n\r\nBlogPosts.propTypes = {\r\n    blogs: PropTypes.arrayOf(PropTypes.object)\r\n}\r\n\r\nexport default BlogPosts;\r\n","import React from 'react';\r\nimport { NavLink } from 'react-router-dom';\r\n// used for making the prop types of this component\r\nimport PropTypes from 'prop-types';\r\n\r\nvar BASEDIR = process.env.REACT_APP_BASEDIR;\r\n\r\nclass SearchPosts extends React.Component{ \r\n    render(){\r\n        var searchList = [];\r\n        for (var i = 0; i < this.props.search.length; i++) {\r\n            searchList.push(\r\n\r\n                                                <div className=\"search_result\" key={i}>\r\n                                                    <div className=\"float-left col-md-3 col-4\">\r\n                                                    <img alt=\"search-result\" className=\"img-fluid\" src={this.props.search[i].image}/>\r\n                                                    </div>\r\n                                                    <div className=\"float-left col-md-9 col-8\">\r\n                                                        <h4 className=\"searchtitle\"><NavLink to={BASEDIR+'/ui-blog-item'}>{this.props.search[i].title}</NavLink></h4>\r\n                                                        <p className=\"searchauthor\">Written by <a href=\"#!\">{this.props.search[i].author}</a> on {this.props.search[i].date}.</p>\r\n                                                        <p>{this.props.search[i].description} <a href=\"#!\" className=\"\"><small>Read More...</small></a></p>\r\n                                                    </div>\r\n                                                </div>\r\n            );\r\n        }\r\n        return (          \r\n                                <div className=\"row\">\r\n                                       { searchList }\r\n                                </div>\r\n        );\r\n    }\r\n}\r\n\r\nSearchPosts.propTypes = {\r\n    search: PropTypes.arrayOf(PropTypes.object)\r\n}\r\n\r\nexport default SearchPosts;\r\n","import React from 'react';\r\n//import { DropdownMenu, DropdownItem, } from 'reactstrap';\r\n// used for making the prop types of this component\r\nimport PropTypes from 'prop-types';\r\nimport { NavLink } from 'react-router-dom';\r\n\r\nvar BASEDIR = process.env.REACT_APP_BASEDIR;\r\n\r\nclass Memberslist extends React.Component{\r\n    render(){\r\n        var membersList = [];\r\n        for (var i = 0; i < this.props.members.length; i++) {\r\n            membersList.push(\r\n\r\n\r\n                                            <div className=\"col-md-6 col-lg-4\" key={i}>\r\n                                                <div className=\"team-member \">\r\n                                                    <div className=\"team-img\">\r\n                                                        <img className=\"img-fluid\" src={this.props.members[i].avatar} alt=\"\" />\r\n                                                    </div>\r\n                                                    <div className=\"team-info\">\r\n                                                        <h3><NavLink to={BASEDIR+\"/ui-profile\"}>{ this.props.members[i].name }</NavLink></h3>\r\n                                                        <span>{ this.props.members[i].position }</span>\r\n                                                        <ul className=\"social-icons list-inline list-unstyled\">\r\n                                                            <li className=\"list-inline-item\"><a href={ this.props.members[i].facebook }><i className=\"i-social-facebook icon-primary icon-xs\"></i></a></li>\r\n                                                            <li className=\"list-inline-item\"><a href={ this.props.members[i].twitter }><i className=\"i-social-twitter icon-primary icon-xs\"></i></a></li>\r\n                                                            <li className=\"list-inline-item\"><a href={ this.props.members[i].linkedin }><i className=\"i-social-linkedin icon-primary icon-xs\"></i></a></li>\r\n                                                        </ul>\r\n                                                        <p>{ this.props.members[i].msg }</p>\r\n                                                    </div>\r\n                                                </div>\r\n                                            </div>\r\n            );\r\n        }\r\n        return (\r\n                                <div className=\"row\">\r\n                                       { membersList }\r\n                                </div>\r\n        );\r\n    }\r\n}\r\n\r\nMemberslist.propTypes = {\r\n    members: PropTypes.arrayOf(PropTypes.object)\r\n}\r\n\r\nexport default Memberslist;\r\n","import React from 'react';\r\n\r\n// used for making the prop types of this component\r\nimport PropTypes from 'prop-types';\r\n\r\n\r\nclass Messagewidget extends React.Component{ \r\n    render(){\r\n        var messagewidgetList = [];\r\n        for (var i = 0; i < this.props.messagewidget.length; i++) {\r\n            messagewidgetList.push(\r\n\r\n\r\n                    <li className=\"unread status-available\" key={i}>\r\n                                                        <a href=\"#!\">\r\n                                                            <div className=\"user-img\">\r\n                                                                <img src={this.props.messagewidget[i].avatar} alt=\"user avatar\" className=\"avatar-image img-inline\"/>\r\n                                                            </div>\r\n                                                            <div>\r\n                                                                <span className=\"name\">\r\n                                                                    <span>{ this.props.messagewidget[i].name }</span>\r\n                                                                    <span className=\"time small\">{ this.props.messagewidget[i].time }</span>\r\n                                                                    <span className={\"profile-status float-right \" + ( this.props.messagewidget[i].status) }></span>\r\n                                                                </span>\r\n                                                                <span className=\"desc\">\r\n                                                                    { this.props.messagewidget[i].msg }\r\n                                                                </span>\r\n                                                            </div>\r\n                                                        </a>\r\n                    </li>\r\n\r\n            );\r\n        }\r\n        return (          \r\n                                <div className=\"\">\r\n                                       { messagewidgetList }\r\n                                </div>\r\n        );\r\n    }\r\n}\r\n\r\nMessagewidget.propTypes = {\r\n    messagewidget: PropTypes.arrayOf(PropTypes.object)\r\n}\r\n\r\nexport default Messagewidget;\r\n","import Web3 from \"web3\";\r\n\r\nconst getWeb3 = () =>\r\n  new Promise((resolve, reject) => {\r\n    // Wait for loading completion to avoid race conditions with web3 injection timing.\r\n    window.addEventListener(\"load\", async () => {\r\n      // Modern dapp browsers...\r\n      if (window.ethereum) {\r\n        const web3 = new Web3(window.ethereum);\r\n        try {\r\n          // Request account access if needed\r\n          await window.ethereum.enable();\r\n          // Acccounts now exposed\r\n          resolve(web3);\r\n        } catch (error) {\r\n          reject(error);\r\n        }\r\n      }\r\n      // Legacy dapp browsers...\r\n      else if (window.web3) {\r\n        // Use Mist/MetaMask's provider.\r\n        const web3 = window.web3;\r\n        console.log(\"Injected web3 detected.\");\r\n        resolve(web3);\r\n      }\r\n      // Fallback to localhost; use dev console port by default...\r\n      else {\r\n        const provider = new Web3.providers.HttpProvider(\r\n          \"http://127.0.0.1:8545\"\r\n        );\r\n        const web3 = new Web3(provider);\r\n        console.log(\"No web3 instance injected, using Local web3.\");\r\n        resolve(web3);\r\n      }\r\n    });\r\n  });\r\n\r\nexport default getWeb3;\r\n","import React from 'react';\r\n// javascript plugin used to create scrollbars on windows\r\n// import PerfectScrollbar from 'perfect-scrollbar';\r\nimport {\r\n    Route,\r\n    Switch,\r\n    Redirect,\r\n    \r\n} from 'react-router-dom';\r\n\r\n// import { Router,Route } from \"react-router\";\r\nimport { createBrowserHistory } from \"history\";\r\n\r\n\r\nimport {Footer, ChatSidebar, Stylebar } from 'components';\r\nimport Header from \"../components/common/Header/Header\";\r\nimport Sidebar from \"../components/common/Sidebar/Sidebar\";\r\n\r\nimport General from \"../views/general/Dashboard/General\";\r\nimport UITables from '../views/general/Tables/Tables.jsx';\r\nimport GetDetails from '../views/general/Forms/GetDetails.jsx'\r\nimport FormPremade from '../views/general/Forms/Premade.jsx'; \r\nimport UIBSDatatable from '../views/general/Tables/BSDatatable.jsx';\r\n\r\nimport dashboardRoutes from 'routes/general.jsx';\r\nimport { topbarStyle, menuStyle, menuType, topbarType, navWidth } from 'variables/settings/general.jsx';\r\nimport Web3 from \"web3\"\r\nimport swal from 'sweetalert';\r\nimport generateElement from \"../generateElement\";\r\nimport getWeb3 from \"../getWeb3\"\r\nimport firebaseApp from '../firebase-config';\r\n//var ps;\r\n\r\nconst history = createBrowserHistory();\r\n\r\nclass GeneralLayout extends React.Component{\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = { \r\n            menuColor: menuStyle,\r\n            topbarColor: topbarStyle,\r\n            menuType: menuType,\r\n            topbarType: topbarType,\r\n            account:\"0x00\",\r\n            balance:\"\",\r\n            web3:null,\r\n            walletConnected:false,\r\n            uid:null\r\n        };\r\n        this.menuSettings = this.menuSettings.bind(this);\r\n        this.topbarSettings = this.topbarSettings.bind(this);\r\n    }\r\n    \r\n    componentDidMount = async() => {\r\n\r\n        try{\r\n            const web3 = await getWeb3();\r\n            const accounts = await web3.eth.getAccounts();\r\n    \r\n            const accBalance = await web3.eth.getBalance(accounts[0]);\r\n            \r\n            // this.setState({account:accounts[0]})\r\n\r\n            const balance = web3.utils.fromWei(accBalance,\"ether\")\r\n\r\n            // this.setState({balance})\r\n\r\n            await firebaseApp.auth().onAuthStateChanged(user => {\r\n                if(user){\r\n                    const uid = user.uid;\r\n\r\n                    this.setState({uid})\r\n                }\r\n                console.log(this.state.uid)\r\n            })\r\n            \r\n        }catch(error){\r\n            console.log(error)\r\n        }\r\n       \r\n    }\r\n\r\n    connectWallet = async() => {\r\n        \r\n        if(typeof web3 !== 'undefined'){\r\n\r\n            const web3 = new Web3(Web3.givenProvider);\r\n            const network = await web3.eth.net.getNetworkType();\r\n            console.log(network);\r\n            const accounts = await web3.eth.getAccounts()\r\n            const account = accounts[0]\r\n\r\n            if(account === undefined){\r\n                await swal({\r\n                    content: generateElement(`MetaMask is locked. Please Unlock MetaMask and try again`),\r\n                    icon: \"error\",\r\n        \r\n                });\r\n                return\r\n            }\r\n\r\n            await this.setState({account, walletConnected:true})\r\n            console.log(this.state.account)\r\n\r\n            const accBalance = await web3.eth.getBalance(accounts[0]);\r\n            const balance = web3.utils.fromWei(accBalance,\"ether\")\r\n\r\n            this.setState({balance})\r\n            console.log(this.state.balance)\r\n        }\r\n        else{\r\n            swal({\r\n                content: generateElement(`Please Install MetaMask first`),\r\n                icon: \"error\",\r\n            })\r\n        }   \r\n\r\n    }\r\n\r\n\r\n    disconnect = () => {\r\n        this.setState({account:\"\", walletConnected:false})\r\n    }\r\n\r\n    menuSettings(val1,val2) {\r\n        this.setState({\r\n          menuColor: \"black\",\r\n          menuType: \"dark\",\r\n        });\r\n    }\r\n    topbarSettings(val1,val2) {\r\n        this.setState({\r\n          topbarColor: \"transparent\",\r\n          topbarType: \"light\",\r\n        });\r\n    }\r\n\r\n    componentWillUnmount(){}\r\n    componentDidUpdate(e) {\r\n      if(e.history.action === \"PUSH\"){\r\n        this.refs.mainPanel.scrollTop = 0;\r\n        document.scrollingElement.scrollTop = 0;\r\n      }\r\n    }\r\n    render(){\r\n        return (\r\n            <div className=\"wrapper\" ref=\"themeWrapper\" data-menu={this.state.menuColor} data-topbar={this.state.topbarColor} data-menutype={this.state.menuType} data-topbartype={this.state.topbarType}>\r\n\r\n                <Header {...this.props} navtype={navWidth} admintype={'general'} account={this.state.account} disconnect = {this.disconnect} balance={this.state.balance} web3 = {this.state.web3} connectWallet = {this.connectWallet} walletConnected={this.state.walletConnected}/>\r\n                <Sidebar {...this.props} routes={dashboardRoutes} admintype={'general'} account={this.state.account}/>\r\n                <div className=\"main-panel\" ref=\"mainPanel\">\r\n\r\n                    <Switch history={history}>\r\n                        <Route exact path=\"/app/dashboard\" name=\"dashboard\" render={props => (<General {...props} uid={this.state.uid}/>)} />\r\n                        <Route exact path=\"/app/history\" name=\"history\" render={props => (<UITables {...props} uid={this.state.uid}/>)} />\r\n                        <Route exact path=\"/app/market\" name=\"market\" render={props => (<UIBSDatatable {...props} uid={this.state.uid}/>)} />\r\n                        <Route exact path=\"/app/kyc\" name=\"kyc\" render={props => (<GetDetails {...props} uid={this.state.uid}/>)}/>\r\n                        <Route exact path=\"/app/buy-payzus\" name=\"buy payzus\" render={props => (<FormPremade {...props} uid={this.state.uid}/>)} />\r\n\r\n                        \r\n                        {/* {\r\n                            dashboardRoutes.map((prop,key) => {\r\n                                if(prop.collapse){\r\n                                    return prop.views.map((prop2,key2) => {\r\n                                        return (\r\n                                            <Route path={prop2.path} component={prop2.component} key={key2} />\r\n                                        );\r\n                                    })\r\n                                }\r\n                                if(prop.redirect)\r\n                                    return (\r\n                                        <Redirect from={prop.path} to={prop.pathTo} key={key} />\r\n                                    );\r\n                                return (\r\n                                    <Route path={prop.path} component={prop.component} key={key} />\r\n                                );\r\n                            })\r\n                        } */}\r\n                    </Switch>\r\n                    <Footer fluid/>\r\n                </div>\r\n                {/* <ChatSidebar {...this.props} routes={dashboardRoutes} chatwidth={chatWidth}  chattype={chatType}/> */}\r\n                {/* <Stylebar menuSettings={this.menuSettings} topbarSettings={this.topbarSettings} /> */}\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default GeneralLayout;\r\n","import React from 'react';\r\nimport {\r\n    Collapse, Navbar, NavbarBrand, Nav, NavItem,\r\n    Dropdown, DropdownToggle,\r\n    Container\r\n} from 'reactstrap';\r\n\r\n\r\nimport dashboardRoutes from 'routes/general.jsx';\r\n\r\nvar IMGDIR = process.env.REACT_APP_IMGDIR;\r\nclass Header extends React.Component{\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            isOpen: false,\r\n            userddOpen: false,\r\n            searchOpen: false,\r\n            messagesddOpen: false,\r\n            notificationsddOpen: false,\r\n            color: \"primary\",\r\n            profilename: 'Eric Nelson',\r\n            profileimg: IMGDIR+'/images/profile/profile.jpg',\r\n        };\r\n        this.toggle = this.toggle.bind(this);\r\n        this.userddToggle = this.userddToggle.bind(this);\r\n        this.messagesddToggle = this.messagesddToggle.bind(this);\r\n        this.notificationsddToggle = this.notificationsddToggle.bind(this);\r\n        this.searchToggle = this.searchToggle.bind(this);\r\n\r\n    }\r\n\r\n\r\n    toggle() {\r\n        if(this.state.isOpen){\r\n            this.setState({\r\n                color: \"primary\"\r\n            });\r\n        } else {\r\n            this.setState({\r\n                color: \"white\"\r\n            });\r\n        }\r\n        this.setState({\r\n            isOpen: !this.state.isOpen\r\n        });\r\n    }\r\n    userddToggle(e){\r\n        this.setState({\r\n            userddOpen: !this.state.userddOpen\r\n        });\r\n    }\r\n    searchToggle(){\r\n        //this.refs.searchbarToggle.classList.toggle('toggled');\r\n        this.setState({\r\n            searchOpen: !this.state.searchOpen\r\n        });\r\n        //console.log(this.state.searchOpen);\r\n        //this.refs.searchbarToggle.classList.toggle('opened');\r\n    }\r\n    messagesddToggle(e){\r\n        this.setState({\r\n            messagesddOpen: !this.state.messagesddOpen\r\n        });\r\n    }\r\n    notificationsddToggle(e){\r\n        this.setState({\r\n            notificationsddOpen: !this.state.notificationsddOpen\r\n        });\r\n    }\r\n    getBrand(){\r\n        var name;\r\n        dashboardRoutes.map((prop,key) => {\r\n            if(prop.collapse){\r\n                 prop.views.map((prop,key) => {\r\n                    if(prop.path === this.props.location.pathname){\r\n                        name = prop.name;\r\n                    }\r\n                    return null;\r\n                })\r\n            } else {\r\n                if(prop.redirect){\r\n                    if(prop.path === this.props.location.pathname){\r\n                        name = prop.name;\r\n                    }\r\n                }else{\r\n                    if(prop.path === this.props.location.pathname){\r\n                        name = prop.name;\r\n                    }\r\n                }\r\n            }\r\n            return null;\r\n        })\r\n        return name;\r\n    }\r\n    openSidebar(){\r\n        document.documentElement.classList.toggle('nav-toggle');\r\n        this.refs.sidebarToggle.classList.toggle('toggled');\r\n\r\n        // close chat bar if open on smaller screens\r\n        if(window.innerWidth < 993){\r\n            document.documentElement.classList.remove('nav-toggle-chat');\r\n           // this.refs.chatToggle.classList.remove('toggled');\r\n        }\r\n    }\r\n    openChat(){\r\n        document.documentElement.classList.toggle('nav-toggle-chat');\r\n       // this.refs.chatToggle.classList.toggle('toggled');\r\n\r\n        // close menu bar if open on smaller screens\r\n        if(window.innerWidth < 993){\r\n            document.documentElement.classList.remove('nav-toggle');\r\n            this.refs.sidebarToggle.classList.remove('toggled');\r\n        }\r\n    }\r\n    toggle_grid(){\r\n        document.documentElement.classList.toggle('toggle-grid');\r\n    }\r\n\r\n\r\n    openStyle(){\r\n        document.documentElement.classList.toggle('nav-toggle-style');\r\n       // this.refs.chatToggle.classList.toggle('toggled');\r\n\r\n        // close menu bar if open on smaller screens\r\n        /*if(window.innerWidth < 993){\r\n            document.documentElement.classList.remove('nav-toggle');\r\n            this.refs.sidebarToggle.classList.remove('toggled');\r\n        }*/\r\n    }\r\n    // function that adds color white/transparent to the navbar on resize (this is for the collapse)\r\n    updateColor(){\r\n        if(window.innerWidth < 993 && this.state.isOpen){\r\n            this.setState({\r\n                color: \"primary\"\r\n            });\r\n        } else {\r\n            this.setState({\r\n                color: \"primary\"\r\n            });\r\n        }\r\n\r\n    }\r\n    componentDidMount(){\r\n        if(this.props.navtype === \"mini\"){\r\n            document.documentElement.classList.add('nav-toggle');\r\n            this.refs.sidebarToggle.classList.add('toggled');\r\n        } else {\r\n            document.documentElement.classList.remove('nav-toggle');\r\n            this.refs.sidebarToggle.classList.remove('toggled');\r\n        }\r\n        window.addEventListener(\"resize\", this.updateColor.bind(this));\r\n\r\n            if(this.props.admintype === 'general'){\r\n                this.setState({     \r\n                    profileimg: IMGDIR+'',\r\n                    profilename: ''\r\n                });  \r\n            // } else if(this.props.admintype === 'hospital'){\r\n            //     this.setState({     \r\n            //         profileimg: IMGDIR+'/images/profile/profile-hospital.jpg',    \r\n            //         profilename: 'Dianna Austin'\r\n            //     });  \r\n            // } else if(this.props.admintype === 'university'){\r\n            //     this.setState({     \r\n            //         profilename: 'Henry Gibson',\r\n            //         profileimg: IMGDIR+'/images/profile/profile-university.jpg'    \r\n            //     });  \r\n            // } else if(this.props.admintype === 'crm'){\r\n            //     this.setState({     \r\n            //         profilename: 'Rick  Woods',\r\n            //         profileimg: IMGDIR+'/images/profile/profile-crm.jpg'    \r\n            //     });  \r\n            // } else if(this.props.admintype === 'music'){\r\n            //     this.setState({     \r\n            //         profilename: 'Kerry Flores',\r\n            //         profileimg: IMGDIR+'/images/profile/profile-music.jpg'    \r\n            //     });  \r\n            // } else if(this.props.admintype === 'blog'){\r\n            //     this.setState({     \r\n            //         profilename: 'Alice Gross',\r\n            //         profileimg: IMGDIR+'/images/profile/profile-blog.jpg'    \r\n            //     });  \r\n            // } else if(this.props.admintype === 'ecommerce'){\r\n            //     this.setState({     \r\n            //         profilename: 'Jake  Daniel',\r\n            //         profileimg: IMGDIR+'/images/profile/profile-ecommerce.jpg'    \r\n            //     });  \r\n            // } else if(this.props.admintype === 'freelance'){\r\n            //     this.setState({     \r\n            //         profilename: 'Eric Nelson',\r\n            //         profileimg: IMGDIR+'/images/profile/profile-freelance.jpg'    \r\n            //     });  \r\n            // } else if(this.props.admintype === 'social'){\r\n            //     this.setState({     \r\n            //         profilename: 'Penny Taylor',\r\n            //         profileimg: IMGDIR+'/images/profile/profile-social.jpg'    \r\n            //     });  \r\n            // } else {\r\n            //     this.setState({     \r\n            //         profilename: 'Nancy Spencer',\r\n            //         profileimg: IMGDIR+'/images/profile/profile-general.jpg'    \r\n            //     });  \r\n                }\r\n\r\n\r\n\r\n    }\r\n    componentDidUpdate(e){\r\n        if(window.innerWidth < 993 && e.history.location.pathname !== e.location.pathname && document.documentElement.className.indexOf('nav-toggle') !== -1){\r\n            document.documentElement.classList.toggle('nav-toggle');\r\n            this.refs.sidebarToggle.classList.toggle('toggled');\r\n        }\r\n        if(window.innerWidth < 993 && e.history.location.pathname !== e.location.pathname && document.documentElement.className.indexOf('nav-toggle-chat') !== -1){\r\n            document.documentElement.classList.toggle('nav-toggle-chat');\r\n           // this.refs.chatToggle.classList.toggle('toggled');\r\n        }\r\n    }\r\n\r\n\r\n    // handleLogout = () => {\r\n    //     firebase.auth().signOut()\r\n    //         .then(function() {\r\n    //             window.location.href = \"/login\"\r\n    //         })\r\n    //         .catch(error => {\r\n    //             var errorMessage = error.message;\r\n    //             alert(errorMessage)\r\n    //         })\r\n    // }\r\n\r\n    render(){\r\n        return (\r\n            // add or remove classes depending if we are on full-screen-maps page or not\r\n            <Navbar expand=\"lg\"\r\n                className={\r\n                    this.props.location.pathname.indexOf('full-screen-maps') !== -1 ?\r\n                    \"navbar-absolute fixed-top\":\"navbar-absolute fixed-top \"}>\r\n                <Container fluid>\r\n                    <div className=\"navbar-wrapper\">\r\n                        <div className=\"navbar-toggle\">\r\n                            <button type=\"button\" ref=\"sidebarToggle\" className=\"navbar-toggler\" onClick={() => this.openSidebar()}>\r\n                                <i className=\"i-menu\"></i>\r\n                            </button>\r\n                        </div>\r\n\r\n\r\n                            {/* <Dropdown nav isOpen={this.state.messagesddOpen} toggle={(e) => this.messagesddToggle(e)} className=\"navbardd\">\r\n                                <DropdownToggle caret nav>\r\n                                    <i className=\"i-envelope\"></i>\r\n                                    <span className=\"badge badge-pill badge-primary\">3</span>\r\n                                </DropdownToggle>\r\n                                <Messages messages={messages}/>\r\n                            </Dropdown>\r\n\r\n                            <Dropdown nav isOpen={this.state.notificationsddOpen} toggle={(e) => this.notificationsddToggle(e)} className=\"navbardd\">\r\n                                <DropdownToggle caret nav>\r\n                                    <i className=\"i-bell\"></i>\r\n                                    <span className=\"badge badge-pill badge-primary\">7</span>\r\n                                </DropdownToggle>\r\n                                <Notifications notifications={notifications}/>\r\n                            </Dropdown>\r\n    \r\n                            <form className=\"topbar-search-form\">\r\n                                <InputGroup className={\"topbar-search \"+(this.state.searchOpen === true ? \"open\":\"\")}>\r\n                                    <InputGroupAddon addonType=\"append\" onClick={() => this.searchToggle()}><i className=\"i-magnifier\"></i></InputGroupAddon>\r\n                                    <Input placeholder=\"Search...\" />\r\n                                </InputGroup>\r\n                            </form> */}\r\n                                {/* <h2>\r\n                                    {\r\n                                        this.props.account == ''\r\n                                        ? (<p>0 ETH</p>)\r\n                                        : (this.props.balance + ' ETH')\r\n                                    }\r\n                                </h2> */}\r\n\r\n\r\n                        <NavbarBrand href=\"/\">{this.getBrand()}</NavbarBrand>\r\n\r\n\r\n\r\n                    </div>\r\n                    \r\n                    <Collapse isOpen={this.state.isOpen} navbar className=\"navbar-right\">\r\n                        {/* <Nav navbar>\r\n                            <Dropdown nav isOpen={this.state.userddOpen} toggle={(e) => this.userddToggle(e)} className=\"userdd\">\r\n                                <DropdownToggle caret nav>\r\n                                   <img src={this.state.profileimg} alt=\"react-logo\" className=\"avatar-image\" /> \r\n                                   <span>{this.truncate(this.props.account)}</span>\r\n                                </DropdownToggle>\r\n                                <DropdownMenu right>\r\n                                    <DropdownItem tag=\"a\"><i className=\"i-wrench\" href=\"#!\"></i> Settings</DropdownItem>\r\n                                    <DropdownItem tag=\"a\"><i className=\"i-user\" href=\"#!\"></i> Profile</DropdownItem>\r\n                                    <DropdownItem tag=\"a\"><i className=\"i-info\" href=\"#!\"></i> Help</DropdownItem>\r\n                                    <DropdownItem tag=\"button\" className=\"\" ><i className=\"i-info\"></i> Disconnect Wallet</DropdownItem>\r\n                                    <DropdownItem tag=\"button\" ><i className=\"i-lock\"></i> LogOut</DropdownItem>\r\n                                </DropdownMenu>\r\n                            </Dropdown>\r\n                            <NavItem>\r\n                                <div className=\"navbar-toggle chat-toggle\">\r\n                                    <button type=\"button\" ref=\"chatToggle\" className=\"navbar-toggler\" onClick={() => this.openChat()}>\r\n                                            <i className=\"i-bubbles\"></i>\r\n                                            <span className=\"badge badge-pill badge-primary\">9</span>\r\n                                    </button>\r\n                                </div>\r\n\r\n                                \r\n\r\n\r\n                            </NavItem>\r\n                        </Nav> */}\r\n                        <div className=\"screensize\" onClick={() => this.toggle_grid()}></div>\r\n                    </Collapse>\r\n                </Container>\r\n            </Navbar>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Header;","import React from 'react';\r\nimport {\r\n    Button, Form, FormGroup, Label, Input,\r\n    \r\n    Row, Col,\r\n} from 'reactstrap';\r\n\r\nimport {\r\n    \r\n} from 'components';\r\nimport swal from \"sweetalert\";\r\nimport generateElement from \"../../../generateElement\";\r\nimport firebase from \"../../../firebase-config\";\r\nimport firebaseApp from '../../../firebase-config';\r\n\r\nconst database = firebase.database().ref(\"Users\");\r\n\r\nclass FormGrid extends React.Component{\r\n\r\n    constructor(props) {\r\n    super(props);\r\n\r\n    this.toggleDropDown = this.toggleDropDown.bind(this);\r\n    this.toggleSplit = this.toggleSplit.bind(this);\r\n    this.handleRegister = this.handleRegister.bind(this);\r\n\r\n    this.state = {\r\n      dropdownOpen: false,\r\n      splitButtonOpen: false,\r\n      name:\"\",\r\n      email:\"\",\r\n      password:\"\",\r\n      // startDate: moment(),\r\n      // file1:null,\r\n      // file2:null\r\n    };\r\n  }\r\n\r\n  toggleDropDown() {\r\n    this.setState({\r\n      dropdownOpen: !this.state.dropdownOpen\r\n    });\r\n  }\r\n\r\n  toggleSplit() {\r\n    this.setState({\r\n      splitButtonOpen: !this.state.splitButtonOpen\r\n    });\r\n  }\r\n\r\n\r\n  handleRegister = () => {\r\n\r\n    var email = this.state.email;\r\n    var password = this.state.password;\r\n    var name = this.state.name;\r\n\r\n\r\n    firebaseApp.auth().createUserWithEmailAndPassword(email,password)\r\n      .then(() => {\r\n\r\n          var user = firebaseApp.auth().currentUser;\r\n\r\n          var uid = user.uid;\r\n\r\n          var email_varified = user.emailVerified;\r\n\r\n          // this.setState({email:\"\", name:\"\", password:\"\"})\r\n\r\n          if(!email_varified){\r\n            user.sendEmailVerification().then(function() {\r\n              // Email sent.\r\n              // alert(\"email varification link has been sent\")\r\n              swal({\r\n                content: generateElement(`Email varification link is sent to your email Id. Please verify !`),\r\n                icon: \"info\",\r\n              });\r\n              \r\n              database\r\n                .child(uid)\r\n                .set({Name:name, Email:email, WhiteListed: false, KYCSubmitted:false, Rewards:0, DirectReferred:0, IndirectReferred:0, Referrer:'0x00'})\r\n                .then(() => {\r\n                  database\r\n                    .child(uid + '/Transactions')\r\n                    .update({count:0})\r\n                  \r\n                })\r\n                .catch(error => {\r\n                  console.log(error)\r\n                })\r\n\r\n              \r\n            }).catch(function(error) {\r\n              // An error happened.\r\n              console.log(error)\r\n            });\r\n          }\r\n          \r\n          else{\r\n            window.location.href= \"/zestreact\"+\"/login\";\r\n          }\r\n\r\n          this.setState({email:\"\", name:\"\", password:\"\"})\r\n\r\n      })\r\n      .catch(error => {\r\n        console.log(error)\r\n      })\r\n       \r\n  }\r\n\r\n    render(){\r\n\r\n        return (\r\n            <div>\r\n                <div className=\"content\">\r\n                    <Row>\r\n                        <Col xs={12} md={12}>\r\n\r\n                    <div className=\"page-title\">\r\n                        <div className=\"float-left\">\r\n                            <h1 className=\"title\">Register form</h1>\r\n                        </div>\r\n                    </div>\r\n\r\n\r\n\r\n                    <div className=\"col-12\">\r\n                        <section className=\"box \">\r\n                            <header className=\"panel_header\">\r\n                                <h2 className=\"title float-left\">Register</h2>\r\n                                \r\n                            </header>\r\n                            <div className=\"content-body\">\r\n                                <div className=\"row\">\r\n                                    <div className=\"col-lg-8 col-md-9 col-10\">\r\n\r\n\r\n\r\n\r\n<Form>  \r\n        <FormGroup row>\r\n          <Label htmlFor=\"exampleName\" sm={12}>Name</Label>\r\n          <Col sm={12}>\r\n            <Input type=\"text\" name=\"name\" id=\"exampleName\" placeholder=\"\" \r\n              value={this.state.name}\r\n              onChange={event => this.setState({name:event.target.value})}\r\n            />\r\n          </Col>\r\n        </FormGroup>\r\n        <FormGroup row>\r\n          <Label htmlFor=\"exampleEmail\" sm={12}>Email</Label>\r\n          <Col sm={12}>\r\n            <Input type=\"email\" name=\"email\" id=\"exampleEmail\" placeholder=\"\" \r\n              value={this.state.email}\r\n              onChange={event => this.setState({email:event.target.value})}\r\n            />\r\n          </Col>\r\n        </FormGroup>\r\n        <FormGroup row>\r\n          <Label htmlFor=\"examplePassword\" sm={12}>Password</Label>\r\n          <Col sm={12}>\r\n            <Input type=\"password\" name=\"password\" id=\"examplePassword\" placeholder=\"\" \r\n              value={this.state.password}\r\n              onChange={event => this.setState({password:event.target.value})}\r\n            />\r\n          </Col>\r\n        </FormGroup>\r\n        \r\n      </Form>\r\n      <Button onClick={(event) => this.handleRegister(event)} color=\"primary\" style={{width:'150px'}}>Register</Button>\r\n      \r\n      \r\n\r\n                                    </div>\r\n                                </div>\r\n\r\n\r\n                            </div>\r\n                        </section>\r\n                    </div>\r\n\r\n\r\n                    \r\n                    \r\n                    \r\n\r\n\r\n\r\n                                \r\n                        </Col>\r\n\r\n                    </Row>\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default FormGrid;\r\n","import React from 'react';\r\nimport {\r\n    Button, Form, FormGroup, Label, Input,\r\n    \r\n    Row, Col,\r\n} from 'reactstrap';\r\n\r\nimport {\r\n    \r\n} from 'components';\r\n\r\nimport swal from \"sweetalert\";\r\nimport generateElement from \"../../../generateElement\";\r\nimport firebaseApp from \"../../../firebase-config\";\r\n\r\n\r\nclass FormGrid extends React.Component{\r\n\r\n    constructor(props) {\r\n    super(props);\r\n\r\n    this.toggleDropDown = this.toggleDropDown.bind(this);\r\n    this.toggleSplit = this.toggleSplit.bind(this);\r\n    this.state = {\r\n      dropdownOpen: false,\r\n      splitButtonOpen: false,\r\n      email:\"\",\r\n      password:\"\"\r\n    };\r\n  }\r\n\r\n  // componentDidMount = async () => {\r\n  //   await firebaseApp.auth().onAuthStateChanged(user => {\r\n  //     if(user){\r\n  //       window.location.href = \"/app/dashboard\";\r\n  //     }\r\n  //   })\r\n  // }\r\n\r\n  toggleDropDown() {\r\n    this.setState({\r\n      dropdownOpen: !this.state.dropdownOpen\r\n    });\r\n  }\r\n\r\n  toggleSplit() {\r\n    this.setState({\r\n      splitButtonOpen: !this.state.splitButtonOpen\r\n    });\r\n  }\r\n\r\n\r\n  handleLogin = (event) => {\r\n    event.preventDefault();\r\n\r\n    var email = this.state.email;\r\n    var password = this.state.password;\r\n\r\n    firebaseApp.auth().signInWithEmailAndPassword(email,password)\r\n        .then(() => {\r\n\r\n          var user = firebaseApp.auth().currentUser;\r\n\r\n          var emailVarified = user.emailVerified;\r\n\r\n          if(emailVarified){\r\n            window.location.href=\"app/dashboard\"\r\n            // this.props.history.push(\"/app/dashboard\");\r\n          }\r\n\r\n          else{\r\n            \r\n            swal({\r\n              content: generateElement(`Please verify the email first`),\r\n              icon: \"error\",\r\n            });\r\n          }\r\n\r\n\r\n            this.setState({email:\"\",password:\"\"})\r\n        })\r\n        .catch(error => {\r\n            var errorMessage = error.message;\r\n            alert(errorMessage);\r\n        })\r\n  }\r\n\r\n\r\n    render(){\r\n\r\n        return (\r\n            <div>\r\n                <div className=\"content\">\r\n                    <Row>\r\n                        <Col xs={12} md={12}>\r\n\r\n                    <div className=\"page-title\">\r\n                        <div className=\"float-left\">\r\n                            <h1 className=\"title\">Login form</h1>\r\n                        </div>\r\n                    </div>\r\n\r\n\r\n\r\n                    <div className=\"col-12\">\r\n                        <section className=\"box \">\r\n                            <header className=\"panel_header\">\r\n                                <h2 className=\"title float-left\">Login</h2>\r\n                                \r\n                            </header>\r\n                            <div className=\"content-body\">\r\n                                <div className=\"row\">\r\n                                    <div className=\"col-lg-8 col-md-9 col-10\">\r\n\r\n\r\n\r\n\r\n<Form>  \r\n        <FormGroup row>\r\n          <Label htmlFor=\"exampleEmail\" sm={12}>Email</Label>\r\n          <Col sm={12}>\r\n            <Input type=\"email\" name=\"email\" id=\"exampleEmail\" placeholder=\"\" \r\n              value={this.state.email}\r\n              onChange={event => this.setState({email:event.target.value})}\r\n            />\r\n          </Col>\r\n        </FormGroup>\r\n        <FormGroup row>\r\n          <Label htmlFor=\"examplePassword\" sm={12}>Password</Label>\r\n          <Col sm={12}>\r\n            <Input type=\"password\" name=\"password\" id=\"examplePassword\" placeholder=\"\" \r\n              value={this.state.password}\r\n              onChange={event => this.setState({password:event.target.value})}\r\n            />\r\n          </Col>\r\n        </FormGroup>\r\n        {/* <FormGroup row>\r\n          <Label htmlFor=\"examplePassword\" sm={12}>Date of Birth</Label>\r\n          <Col sm={12}>\r\n            <DatePicker selected={this.state.startDate} onChange={this.handleChange} \r\n\r\n            />\r\n          </Col>\r\n        </FormGroup>\r\n        <FormGroup row>\r\n          <Label htmlFor=\"exampleFile\" sm={12}>Aadhar</Label>\r\n          <Col sm={12}>\r\n            <Input type=\"file\" name=\"file\" id=\"exampleFile\" \r\n              onChange={event => this.onFileUpload1(event)}\r\n              onClick={(e) => (e.target.value = null)}\r\n            />\r\n            <FormText color=\"muted\">\r\n              This is some placeholder block-level help text for the above input.\r\n              It's a bit lighter and easily wraps to a new line.\r\n            </FormText>\r\n          </Col>\r\n        </FormGroup>\r\n        <FormGroup row>\r\n          <Label htmlFor=\"exampleFile\" sm={12}>PanCard</Label>\r\n          <Col sm={12}>\r\n            <Input type=\"file\" name=\"file\" id=\"exampleFile\" \r\n              onChange={event => this.onFileUpload2(event)}\r\n              onClick={(e) => (e.target.value = null)}\r\n            />\r\n            <FormText color=\"muted\">\r\n              This is some placeholder block-level help text for the above input.\r\n              It's a bit lighter and easily wraps to a new line.\r\n            </FormText>\r\n          </Col>\r\n        </FormGroup> */}\r\n        {/* <FormGroup row>\r\n          <Label htmlFor=\"exampleSelect\" sm={12}>Select</Label>\r\n          <Col sm={12}>\r\n            <Input type=\"select\" name=\"select\" id=\"exampleSelect\" />\r\n          </Col>\r\n        </FormGroup>\r\n        <FormGroup row>\r\n          <Label htmlFor=\"exampleSelectMulti\" sm={12}>Select Multiple</Label>\r\n          <Col sm={12}>\r\n            <Input type=\"select\" name=\"selectMulti\" id=\"exampleSelectMulti\" multiple />\r\n          </Col>\r\n        </FormGroup>\r\n        <FormGroup row>\r\n          <Label htmlFor=\"exampleText\" sm={12}>Text Area</Label>\r\n          <Col sm={12}>\r\n            <Input type=\"textarea\" name=\"text\" id=\"exampleText\" />\r\n          </Col>\r\n        </FormGroup>\r\n        <FormGroup row>\r\n          <Label htmlFor=\"exampleFile\" sm={12}>File</Label>\r\n          <Col sm={12}>\r\n            <Input type=\"file\" name=\"file\" id=\"exampleFile\" />\r\n            <FormText color=\"muted\">\r\n              This is some placeholder block-level help text for the above input.\r\n              It's a bit lighter and easily wraps to a new line.\r\n            </FormText>\r\n          </Col>\r\n        </FormGroup>\r\n        <FormGroup tag=\"fieldset\" row>\r\n          <label className=\"col-form-label col-sm-2\">Radio Buttons</label>\r\n          <Col sm={12}>\r\n            <FormGroup check>\r\n              <Label check>\r\n                <Input type=\"radio\" name=\"radio2\" />{' '}\r\n                Option one is this and that—be sure to include why it's great\r\n              </Label>\r\n            </FormGroup>\r\n            <FormGroup check>\r\n              <Label check>\r\n                <Input type=\"radio\" name=\"radio2\" />{' '}\r\n                Option two can be something else and selecting it will deselect option one\r\n              </Label>\r\n            </FormGroup>\r\n            <FormGroup check disabled>\r\n              <Label check>\r\n                <Input type=\"radio\" name=\"radio2\" disabled />{' '}\r\n                Option three is disabled\r\n              </Label>\r\n            </FormGroup>\r\n          </Col>\r\n        </FormGroup>\r\n        <FormGroup row>\r\n          <Label htmlFor=\"checkbox2\" sm={12}>Checkbox</Label>\r\n          <Col sm={{ size: 10 }}>\r\n            <FormGroup check>\r\n              <Label check>\r\n                <Input type=\"checkbox\" id=\"checkbox2\" />{' '}\r\n                Check me out\r\n              </Label>\r\n            </FormGroup>\r\n          </Col>\r\n        </FormGroup> */}\r\n        {/* <FormGroup>\r\n            <Button onClick={() => this.handleRegister(this.state.email, this.state.password)}>Submit</Button>\r\n        </FormGroup> */}\r\n      </Form>\r\n      <Button onClick={(event) => this.handleLogin(event)} color=\"primary\" style={{width:'150px'}}>Login</Button>\r\n      {/* <Button onClick={(event) => this.final(event)}>final</Button> */}\r\n      \r\n      {/* <Button onClick={this.handleLoginWithGoogle}>Login With Google</Button> */}\r\n\r\n                                    </div>\r\n                                </div>\r\n\r\n\r\n                            </div>\r\n                        </section>\r\n                    </div>\r\n\r\n\r\n                    \r\n                    \r\n                    \r\n\r\n\r\n\r\n                                \r\n                        </Col>\r\n\r\n                    </Row>\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default FormGrid;\r\n","import React, { Component } from 'react'\r\n\r\nexport default class home extends Component {\r\n    render() {\r\n        return (\r\n            <div>\r\n                <h1 style={{textAlign:\"center\", marginTop:'200px'}}>where to go now??</h1>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n","\r\n// import GeneralLayout from 'layouts/General.jsx';\r\nimport UIBSDatatable from 'views/general/Tables/BSDatatable.jsx';\r\n\r\nimport Register from \"../views/general/Forms/Register\";\r\nimport Login from \"../views/general/Forms/Login\";\r\nimport Home from \"../views/general/Forms/home\";\r\n\r\n\r\nvar indexRoutes = [\r\n\r\n    \r\n    { path: \"/register\", name: \"Register\", icon:\"note\", component: Register },\r\n    { path: \"/login\", name: \"Login\", icon:\"key\", component: Login },\r\n    { path: \"/market\", name: \"Market\",icon:\"chart\", component: UIBSDatatable },\r\n    {path: \"/home\", name:\"WhatNext\", icon:\"screen-desktop\", component:Home },\r\n    {redirect: true, path:\"/\", pathTo:\"/home\", name:\"home\"},\r\n    \r\n    \r\n];\r\n\r\nexport default indexRoutes;\r\n","import React from 'react';\r\n// javascript plugin used to create scrollbars on windows\r\n// import PerfectScrollbar from 'perfect-scrollbar';\r\nimport {\r\n    Route,\r\n    Switch,\r\n    Redirect\r\n} from 'react-router-dom';\r\nimport { createBrowserHistory } from \"history\";\r\n\r\nimport Header from \"../components/common/Header/LockedHeader\";\r\nimport Footer from \"../components/common/Footer/Footer\";\r\nimport Sidebar from \"../components/common/Sidebar/LockSidebar\"\r\n\r\nimport lockedRoutes from 'routes/locked.jsx';\r\nimport { topbarStyle, menuStyle, menuType, topbarType, navWidth } from 'variables/settings/general.jsx';\r\n\r\n//var ps;\r\nconst history = createBrowserHistory();\r\nclass GeneralLayout extends React.Component{\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = { \r\n            menuColor: menuStyle,\r\n            topbarColor: topbarStyle,\r\n            menuType: menuType,\r\n            topbarType: topbarType,\r\n            // account:\"\",\r\n            // balance:\"\",\r\n            // web3:null\r\n        };\r\n        this.menuSettings = this.menuSettings.bind(this);\r\n        this.topbarSettings = this.topbarSettings.bind(this);\r\n    }\r\n    \r\n    // componentDidMount = async() => {\r\n\r\n    //     try{\r\n    //         const web3 = await getWeb3();\r\n    //         const accounts = await web3.eth.getAccounts();\r\n    \r\n    //         const accBalance = await web3.eth.getBalance(accounts[0]);\r\n            \r\n    //         this.setState({account:accounts[0]})\r\n\r\n    //         const balance = web3.utils.fromWei(accBalance,\"ether\")\r\n\r\n    //         this.setState({balance})\r\n            \r\n    //     }catch(error){\r\n    //         console.log(error)\r\n    //     }\r\n       \r\n    // }\r\n\r\n    disconnect = () => {\r\n        this.setState({account:\"\"})\r\n    }\r\n\r\n    menuSettings(val1,val2) {\r\n        this.setState({\r\n          menuColor: val1,\r\n          menuType: val2,\r\n        });\r\n    }\r\n    topbarSettings(val1,val2) {\r\n        this.setState({\r\n          topbarColor: val1,\r\n          topbarType: val2,\r\n        });\r\n    }\r\n\r\n    componentWillUnmount(){}\r\n    componentDidUpdate(e) {\r\n      if(e.history.action === \"PUSH\"){\r\n        this.refs.mainPanel.scrollTop = 0;\r\n        document.scrollingElement.scrollTop = 0;\r\n      }\r\n    }\r\n    render(){\r\n        return (\r\n            <div className=\"wrapper\" ref=\"themeWrapper\" data-menu={this.state.menuColor} data-topbar={this.state.topbarColor} data-menutype={this.state.menuType} data-topbartype={this.state.topbarType}>\r\n\r\n                <Header {...this.props} navtype={navWidth} admintype={'general'} />\r\n                <Sidebar {...this.props} routes={lockedRoutes} admintype={'general'} />\r\n                <div className=\"main-panel\" ref=\"mainPanel\">\r\n                    <Switch history={history}>\r\n                        {\r\n                            lockedRoutes.map((prop,key) => {\r\n                                if(prop.collapse){\r\n                                    return prop.views.map((prop2,key2) => {\r\n                                        return (\r\n                                            <Route path={prop2.path} component={prop2.component} key={key2}/>\r\n                                        );\r\n                                    })\r\n                                }\r\n                                if(prop.redirect)\r\n                                    return (\r\n                                        <Redirect from={prop.path} to={prop.pathTo} key={key}/>\r\n                                    );\r\n                                return (\r\n                                    <Route path={prop.path} component={prop.component} key={key}/>\r\n                                );\r\n                            })\r\n                        }\r\n                    </Switch>\r\n                    <Footer fluid/>\r\n                </div>\r\n                {/* <ChatSidebar {...this.props} routes={lockedRoutes} chatwidth={chatWidth}  chattype={chatType}/>\r\n                <Stylebar menuSettings={this.menuSettings} topbarSettings={this.topbarSettings} /> */}\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default GeneralLayout;\r\n","\r\nimport GeneralLayout from 'layouts/General.jsx';\r\nimport LockedLayout from 'layouts/Locked.jsx';\r\n\r\n\r\nvar BASEDIR = \"/app\";\r\n\r\n\r\nvar indexRoutes = [\r\n    \r\n    \r\n    { path: BASEDIR+\"/\", name: \"Dashboard\", component: GeneralLayout },\r\n    \r\n    { path: \"/\", name: \"Dashboard\", component: LockedLayout },\r\n    \r\n    { path: BASEDIR + \"/\", name: \"Home\", component: GeneralLayout },\r\n    // { path: \"/\", name: \"Home\", component: GeneralLayout },\r\n    \r\n    \r\n\r\n    \r\n    \r\n];\r\n\r\nexport default indexRoutes;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport { createBrowserHistory } from 'history';\r\nimport {\r\n    Router,\r\n    Route,\r\n    Switch\r\n} from 'react-router-dom';\r\n\r\nimport 'bootstrap/dist/css/bootstrap.css';\r\n/*import 'font-awesome/css/font-awesome.min.css';*/\r\nimport 'assets/scss/zest-admin.css';\r\nimport 'assets/fonts/simple-line-icons.css';\r\n\r\nimport indexRoutes from 'routes/index.jsx';\r\n\r\nconst hist = createBrowserHistory();\r\n\r\nReactDOM.render(\r\n    \r\n    <Router history={hist} basename={process.env.REACT_APP_BASEDIR}>\r\n        <Switch>\r\n            {\r\n                indexRoutes.map((prop,key) => {\r\n                    //console.log(prop.path + prop.key);\r\n                    return ( \r\n                        <Route\r\n                            path={prop.path}\r\n                            key={key}\r\n                            component={prop.component}\r\n                        />\r\n                    );\r\n                })\r\n            }\r\n        </Switch>\r\n    </Router>\r\n, document.getElementById('root'));\r\n"],"sourceRoot":""}